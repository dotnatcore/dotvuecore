//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using EF Core template.
// Code is generated on: 3/7/2017 7:10:27 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Linq;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using DotVueApp.DataAccess.Context;
using DotVueCore.Data.Models;

namespace DotVueCore.Data.Models
{

    public partial class DotVueAppContext : EntityContextBase<DotVueAppContext>
    {

        public DotVueAppContext(DbContextOptions<DotVueAppContext> options) :
            base(options)
        {
            OnCreated();
        }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            //optionsBuilder.UseSqlServer(@"Data Source=phayathai;Initial Catalog=PodiumDevelop;Integrated Security=False;Persist Security Info=True;User ID=sa;Password=123qwe!@#");
            CustomizeConfiguration(ref optionsBuilder);
            base.OnConfiguring(optionsBuilder);
        }

        partial void CustomizeConfiguration(ref DbContextOptionsBuilder optionsBuilder);

        public virtual DbSet<ActivityLog> ActivityLogs
        {
            get;
            set;
        }

        public virtual DbSet<ActivityType> ActivityTypes
        {
            get;
            set;
        }

        public virtual DbSet<AddressInfo> AddressInfos
        {
            get;
            set;
        }

        public virtual DbSet<Assignment> Assignments
        {
            get;
            set;
        }

        public virtual DbSet<AvetmisEnrollment> AvetmisEnrollments
        {
            get;
            set;
        }

        public virtual DbSet<Category> Categories
        {
            get;
            set;
        }

        public virtual DbSet<Certificate> Certificates
        {
            get;
            set;
        }

        public virtual DbSet<ClassInfo> ClassInfos
        {
            get;
            set;
        }

        public virtual DbSet<ClientBackground> ClientBackgrounds
        {
            get;
            set;
        }

        public virtual DbSet<Client> Clients
        {
            get;
            set;
        }

        public virtual DbSet<CompleteType> CompleteTypes
        {
            get;
            set;
        }

        public virtual DbSet<Content> Contents
        {
            get;
            set;
        }

        public virtual DbSet<ContentType> ContentTypes
        {
            get;
            set;
        }

        public virtual DbSet<CountryInfo> CountryInfos
        {
            get;
            set;
        }

        public virtual DbSet<CourseContent> CourseContents
        {
            get;
            set;
        }

        public virtual DbSet<CourseInfo> CourseInfos
        {
            get;
            set;
        }

        public virtual DbSet<CourseTest> CourseTests
        {
            get;
            set;
        }

        public virtual DbSet<CourseUploadFile> CourseUploadFiles
        {
            get;
            set;
        }

        public virtual DbSet<Currency> Currencies
        {
            get;
            set;
        }

        public virtual DbSet<DeliveryLocation> DeliveryLocations
        {
            get;
            set;
        }

        public virtual DbSet<DisabilityOption> DisabilityOptions
        {
            get;
            set;
        }

        public virtual DbSet<Envet> Envets
        {
            get;
            set;
        }

        public virtual DbSet<ErrorLog> ErrorLogs
        {
            get;
            set;
        }

        public virtual DbSet<Evidence> Evidences
        {
            get;
            set;
        }

        public virtual DbSet<FileRelation> FileRelations
        {
            get;
            set;
        }

        public virtual DbSet<File> Files
        {
            get;
            set;
        }

        public virtual DbSet<FileType> FileTypes
        {
            get;
            set;
        }

        public virtual DbSet<InvoiceItem> InvoiceItems
        {
            get;
            set;
        }

        public virtual DbSet<Invoice> Invoices
        {
            get;
            set;
        }

        public virtual DbSet<Job> Jobs
        {
            get;
            set;
        }

        public virtual DbSet<Language> Languages
        {
            get;
            set;
        }

        public virtual DbSet<LeanerDisabilityOption> LeanerDisabilityOptions
        {
            get;
            set;
        }

        public virtual DbSet<LeanerPriorEducation> LeanerPriorEducations
        {
            get;
            set;
        }

        public virtual DbSet<LearnerInfo> LearnerInfos
        {
            get;
            set;
        }

        public virtual DbSet<LearnerPostAddressInfo> LearnerPostAddressInfos
        {
            get;
            set;
        }

        public virtual DbSet<Location> Locations
        {
            get;
            set;
        }

        public virtual DbSet<Module> Modules
        {
            get;
            set;
        }

        public virtual DbSet<NotifyEvent> NotifyEvents
        {
            get;
            set;
        }

        public virtual DbSet<NotifyReceiver> NotifyReceivers
        {
            get;
            set;
        }

        public virtual DbSet<Notify> Notifies
        {
            get;
            set;
        }

        public virtual DbSet<OrganizationAddressInfo> OrganizationAddressInfos
        {
            get;
            set;
        }

        public virtual DbSet<Organization> Organizations
        {
            get;
            set;
        }

        public virtual DbSet<OrganizationType> OrganizationTypes
        {
            get;
            set;
        }

        public virtual DbSet<OrganizationUser> OrganizationUsers
        {
            get;
            set;
        }

        public virtual DbSet<Permission> Permissions
        {
            get;
            set;
        }

        public virtual DbSet<PriorEducation> PriorEducations
        {
            get;
            set;
        }

        public virtual DbSet<ProductFileNote> ProductFileNotes
        {
            get;
            set;
        }

        public virtual DbSet<ProductFile> ProductFiles
        {
            get;
            set;
        }

        public virtual DbSet<QualificationGroupFilter> QualificationGroupFilters
        {
            get;
            set;
        }

        public virtual DbSet<QualificationGroupRule> QualificationGroupRules
        {
            get;
            set;
        }

        public virtual DbSet<QualificationGroup> QualificationGroups
        {
            get;
            set;
        }

        public virtual DbSet<QualificationGroupSetRule> QualificationGroupSetRules
        {
            get;
            set;
        }

        public virtual DbSet<QualificationGroupSet> QualificationGroupSets
        {
            get;
            set;
        }

        public virtual DbSet<QualificationMaster> QualificationMasters
        {
            get;
            set;
        }

        public virtual DbSet<QualificationOrg> QualificationOrgs
        {
            get;
            set;
        }

        public virtual DbSet<QualificationOrgUnit> QualificationOrgUnits
        {
            get;
            set;
        }

        public virtual DbSet<Qualification> Qualifications
        {
            get;
            set;
        }

        public virtual DbSet<QualificationScope> QualificationScopes
        {
            get;
            set;
        }

        public virtual DbSet<QualificationTranProduct> QualificationTranProducts
        {
            get;
            set;
        }

        public virtual DbSet<QualificationTran> QualificationTrans
        {
            get;
            set;
        }

        public virtual DbSet<QualificationTranUnit> QualificationTranUnits
        {
            get;
            set;
        }

        public virtual DbSet<QualificationUnitMaster> QualificationUnitMasters
        {
            get;
            set;
        }

        public virtual DbSet<QualificationUnit> QualificationUnits
        {
            get;
            set;
        }

        public virtual DbSet<QuestionFillBlankOption> QuestionFillBlankOptions
        {
            get;
            set;
        }

        public virtual DbSet<QuestionFillBlank> QuestionFillBlanks
        {
            get;
            set;
        }

        public virtual DbSet<QuestionFreeText> QuestionFreeTexts
        {
            get;
            set;
        }

        public virtual DbSet<QuestionOption> QuestionOptions
        {
            get;
            set;
        }

        public virtual DbSet<Question> Questions
        {
            get;
            set;
        }

        public virtual DbSet<QuestionType> QuestionTypes
        {
            get;
            set;
        }

        public virtual DbSet<RandomizeQuestion> RandomizeQuestions
        {
            get;
            set;
        }

        public virtual DbSet<Role> Roles
        {
            get;
            set;
        }

        public virtual DbSet<RtoAddressInfo> RtoAddressInfos
        {
            get;
            set;
        }

        public virtual DbSet<RtoInfo> RtoInfos
        {
            get;
            set;
        }

        public virtual DbSet<RtoOrganization> RtoOrganizations
        {
            get;
            set;
        }

        public virtual DbSet<RtoUser> RtoUsers
        {
            get;
            set;
        }

        public virtual DbSet<Scorm> Scorms
        {
            get;
            set;
        }

        public virtual DbSet<Section> Sections
        {
            get;
            set;
        }

        public virtual DbSet<Setting> Settings
        {
            get;
            set;
        }

        public virtual DbSet<StateInfo> StateInfos
        {
            get;
            set;
        }

        public virtual DbSet<StudentClassInfo> StudentClassInfos
        {
            get;
            set;
        }

        public virtual DbSet<StudentNote> StudentNotes
        {
            get;
            set;
        }

        public virtual DbSet<TestQuestion> TestQuestions
        {
            get;
            set;
        }

        public virtual DbSet<Test> Tests
        {
            get;
            set;
        }

        public virtual DbSet<TimeZone> TimeZones
        {
            get;
            set;
        }

        public virtual DbSet<TrainerClassInfo> TrainerClassInfos
        {
            get;
            set;
        }

        public virtual DbSet<TrainingPackage> TrainingPackages
        {
            get;
            set;
        }

        public virtual DbSet<TrainingQualification> TrainingQualifications
        {
            get;
            set;
        }

        public virtual DbSet<UnitAssignment> UnitAssignments
        {
            get;
            set;
        }

        public virtual DbSet<UnitContent> UnitContents
        {
            get;
            set;
        }

        public virtual DbSet<UnitMaster> UnitMasters
        {
            get;
            set;
        }

        public virtual DbSet<Unit> Units
        {
            get;
            set;
        }

        public virtual DbSet<UnitScorm> UnitScorms
        {
            get;
            set;
        }

        public virtual DbSet<UnitSection> UnitSections
        {
            get;
            set;
        }

        public virtual DbSet<UnitTest> UnitTests
        {
            get;
            set;
        }

        public virtual DbSet<UnitUploadFile> UnitUploadFiles
        {
            get;
            set;
        }

        public virtual DbSet<UploadFile> UploadFiles
        {
            get;
            set;
        }

        public virtual DbSet<UserAddressInfo> UserAddressInfos
        {
            get;
            set;
        }

        public virtual DbSet<UserAssignment> UserAssignments
        {
            get;
            set;
        }

        public virtual DbSet<UserClaim> UserClaims
        {
            get;
            set;
        }

        public virtual DbSet<UserContent> UserContents
        {
            get;
            set;
        }

        public virtual DbSet<UserDocument> UserDocuments
        {
            get;
            set;
        }

        public virtual DbSet<UserGroupDetail> UserGroupDetails
        {
            get;
            set;
        }

        public virtual DbSet<UserGroup> UserGroups
        {
            get;
            set;
        }

        public virtual DbSet<UserLogin> UserLogins
        {
            get;
            set;
        }

        public virtual DbSet<UserQualification> UserQualifications
        {
            get;
            set;
        }

        public virtual DbSet<UserQuestionAnswer> UserQuestionAnswers
        {
            get;
            set;
        }

        public virtual DbSet<UserQuestionAttempt> UserQuestionAttempts
        {
            get;
            set;
        }

        public virtual DbSet<UserQuestionFillBlankOption> UserQuestionFillBlankOptions
        {
            get;
            set;
        }

        public virtual DbSet<UserQuestionFillBlank> UserQuestionFillBlanks
        {
            get;
            set;
        }

        public virtual DbSet<UserQuestionOption> UserQuestionOptions
        {
            get;
            set;
        }

        public virtual DbSet<UserQuestionOptionTemplate> UserQuestionOptionTemplates
        {
            get;
            set;
        }

        public virtual DbSet<UserQuestion> UserQuestions
        {
            get;
            set;
        }

        public virtual DbSet<UserQuestionTemplate> UserQuestionTemplates
        {
            get;
            set;
        }

        public virtual DbSet<UserRandomizeQuestion> UserRandomizeQuestions
        {
            get;
            set;
        }

        public virtual DbSet<UserRegistrationToken> UserRegistrationTokens
        {
            get;
            set;
        }

        public virtual DbSet<UserRole> UserRoles
        {
            get;
            set;
        }

        public virtual DbSet<User> Users
        {
            get;
            set;
        }

        public virtual DbSet<UserScorm> UserScorms
        {
            get;
            set;
        }

        public virtual DbSet<UserState> UserStates
        {
            get;
            set;
        }

        public virtual DbSet<UserTestAttempt> UserTestAttempts
        {
            get;
            set;
        }

        public virtual DbSet<UserTestQuestion> UserTestQuestions
        {
            get;
            set;
        }

        public virtual DbSet<UserTest> UserTests
        {
            get;
            set;
        }

        public virtual DbSet<UserTestState> UserTestStates
        {
            get;
            set;
        }

        public virtual DbSet<UserTestTemplate> UserTestTemplates
        {
            get;
            set;
        }

        public virtual DbSet<UserTypePermission> UserTypePermissions
        {
            get;
            set;
        }

        public virtual DbSet<UserType> UserTypes
        {
            get;
            set;
        }

        public virtual DbSet<UserUnit> UserUnits
        {
            get;
            set;
        }

        public virtual DbSet<UserUploadFile> UserUploadFiles
        {
            get;
            set;
        }

        public virtual DbSet<ZipContent> ZipContents
        {
            get;
            set;
        }

        public virtual DbSet<ZipJob> ZipJobs
        {
            get;
            set;
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            this.ActivityLogMapping(modelBuilder);
            this.CustomizeActivityLogMapping(modelBuilder);

            this.ActivityTypeMapping(modelBuilder);
            this.CustomizeActivityTypeMapping(modelBuilder);

            this.AddressInfoMapping(modelBuilder);
            this.CustomizeAddressInfoMapping(modelBuilder);

            this.AssignmentMapping(modelBuilder);
            this.CustomizeAssignmentMapping(modelBuilder);

            this.AvetmisEnrollmentMapping(modelBuilder);
            this.CustomizeAvetmisEnrollmentMapping(modelBuilder);

            this.CategoryMapping(modelBuilder);
            this.CustomizeCategoryMapping(modelBuilder);

            this.CertificateMapping(modelBuilder);
            this.CustomizeCertificateMapping(modelBuilder);

            this.ClassInfoMapping(modelBuilder);
            this.CustomizeClassInfoMapping(modelBuilder);

            this.ClientBackgroundMapping(modelBuilder);
            this.CustomizeClientBackgroundMapping(modelBuilder);

            this.ClientMapping(modelBuilder);
            this.CustomizeClientMapping(modelBuilder);

            this.CompleteTypeMapping(modelBuilder);
            this.CustomizeCompleteTypeMapping(modelBuilder);

            this.ContentMapping(modelBuilder);
            this.CustomizeContentMapping(modelBuilder);

            this.ContentTypeMapping(modelBuilder);
            this.CustomizeContentTypeMapping(modelBuilder);

            this.CountryInfoMapping(modelBuilder);
            this.CustomizeCountryInfoMapping(modelBuilder);

            this.CourseContentMapping(modelBuilder);
            this.CustomizeCourseContentMapping(modelBuilder);

            this.CourseInfoMapping(modelBuilder);
            this.CustomizeCourseInfoMapping(modelBuilder);

            this.CourseTestMapping(modelBuilder);
            this.CustomizeCourseTestMapping(modelBuilder);

            this.CourseUploadFileMapping(modelBuilder);
            this.CustomizeCourseUploadFileMapping(modelBuilder);

            this.CurrencyMapping(modelBuilder);
            this.CustomizeCurrencyMapping(modelBuilder);

            this.DeliveryLocationMapping(modelBuilder);
            this.CustomizeDeliveryLocationMapping(modelBuilder);

            this.DisabilityOptionMapping(modelBuilder);
            this.CustomizeDisabilityOptionMapping(modelBuilder);

            this.EnvetMapping(modelBuilder);
            this.CustomizeEnvetMapping(modelBuilder);

            this.ErrorLogMapping(modelBuilder);
            this.CustomizeErrorLogMapping(modelBuilder);

            this.EvidenceMapping(modelBuilder);
            this.CustomizeEvidenceMapping(modelBuilder);

            this.FileRelationMapping(modelBuilder);
            this.CustomizeFileRelationMapping(modelBuilder);

            this.FileMapping(modelBuilder);
            this.CustomizeFileMapping(modelBuilder);

            this.FileTypeMapping(modelBuilder);
            this.CustomizeFileTypeMapping(modelBuilder);

            this.InvoiceItemMapping(modelBuilder);
            this.CustomizeInvoiceItemMapping(modelBuilder);

            this.InvoiceMapping(modelBuilder);
            this.CustomizeInvoiceMapping(modelBuilder);

            this.JobMapping(modelBuilder);
            this.CustomizeJobMapping(modelBuilder);

            this.LanguageMapping(modelBuilder);
            this.CustomizeLanguageMapping(modelBuilder);

            this.LeanerDisabilityOptionMapping(modelBuilder);
            this.CustomizeLeanerDisabilityOptionMapping(modelBuilder);

            this.LeanerPriorEducationMapping(modelBuilder);
            this.CustomizeLeanerPriorEducationMapping(modelBuilder);

            this.LearnerInfoMapping(modelBuilder);
            this.CustomizeLearnerInfoMapping(modelBuilder);

            this.LearnerPostAddressInfoMapping(modelBuilder);
            this.CustomizeLearnerPostAddressInfoMapping(modelBuilder);

            this.LocationMapping(modelBuilder);
            this.CustomizeLocationMapping(modelBuilder);

            this.ModuleMapping(modelBuilder);
            this.CustomizeModuleMapping(modelBuilder);

            this.NotifyEventMapping(modelBuilder);
            this.CustomizeNotifyEventMapping(modelBuilder);

            this.NotifyReceiverMapping(modelBuilder);
            this.CustomizeNotifyReceiverMapping(modelBuilder);

            this.NotifyMapping(modelBuilder);
            this.CustomizeNotifyMapping(modelBuilder);

            this.OrganizationAddressInfoMapping(modelBuilder);
            this.CustomizeOrganizationAddressInfoMapping(modelBuilder);

            this.OrganizationMapping(modelBuilder);
            this.CustomizeOrganizationMapping(modelBuilder);

            this.OrganizationTypeMapping(modelBuilder);
            this.CustomizeOrganizationTypeMapping(modelBuilder);

            this.OrganizationUserMapping(modelBuilder);
            this.CustomizeOrganizationUserMapping(modelBuilder);

            this.PermissionMapping(modelBuilder);
            this.CustomizePermissionMapping(modelBuilder);

            this.PriorEducationMapping(modelBuilder);
            this.CustomizePriorEducationMapping(modelBuilder);

            this.ProductFileNoteMapping(modelBuilder);
            this.CustomizeProductFileNoteMapping(modelBuilder);

            this.ProductFileMapping(modelBuilder);
            this.CustomizeProductFileMapping(modelBuilder);

            this.QualificationGroupFilterMapping(modelBuilder);
            this.CustomizeQualificationGroupFilterMapping(modelBuilder);

            this.QualificationGroupRuleMapping(modelBuilder);
            this.CustomizeQualificationGroupRuleMapping(modelBuilder);

            this.QualificationGroupMapping(modelBuilder);
            this.CustomizeQualificationGroupMapping(modelBuilder);

            this.QualificationGroupSetRuleMapping(modelBuilder);
            this.CustomizeQualificationGroupSetRuleMapping(modelBuilder);

            this.QualificationGroupSetMapping(modelBuilder);
            this.CustomizeQualificationGroupSetMapping(modelBuilder);

            this.QualificationMasterMapping(modelBuilder);
            this.CustomizeQualificationMasterMapping(modelBuilder);

            this.QualificationOrgMapping(modelBuilder);
            this.CustomizeQualificationOrgMapping(modelBuilder);

            this.QualificationOrgUnitMapping(modelBuilder);
            this.CustomizeQualificationOrgUnitMapping(modelBuilder);

            this.QualificationMapping(modelBuilder);
            this.CustomizeQualificationMapping(modelBuilder);

            this.QualificationScopeMapping(modelBuilder);
            this.CustomizeQualificationScopeMapping(modelBuilder);

            this.QualificationTranProductMapping(modelBuilder);
            this.CustomizeQualificationTranProductMapping(modelBuilder);

            this.QualificationTranMapping(modelBuilder);
            this.CustomizeQualificationTranMapping(modelBuilder);

            this.QualificationTranUnitMapping(modelBuilder);
            this.CustomizeQualificationTranUnitMapping(modelBuilder);

            this.QualificationUnitMasterMapping(modelBuilder);
            this.CustomizeQualificationUnitMasterMapping(modelBuilder);

            this.QualificationUnitMapping(modelBuilder);
            this.CustomizeQualificationUnitMapping(modelBuilder);

            this.QuestionFillBlankOptionMapping(modelBuilder);
            this.CustomizeQuestionFillBlankOptionMapping(modelBuilder);

            this.QuestionFillBlankMapping(modelBuilder);
            this.CustomizeQuestionFillBlankMapping(modelBuilder);

            this.QuestionFreeTextMapping(modelBuilder);
            this.CustomizeQuestionFreeTextMapping(modelBuilder);

            this.QuestionOptionMapping(modelBuilder);
            this.CustomizeQuestionOptionMapping(modelBuilder);

            this.QuestionMapping(modelBuilder);
            this.CustomizeQuestionMapping(modelBuilder);

            this.QuestionTypeMapping(modelBuilder);
            this.CustomizeQuestionTypeMapping(modelBuilder);

            this.RandomizeQuestionMapping(modelBuilder);
            this.CustomizeRandomizeQuestionMapping(modelBuilder);

            this.RoleMapping(modelBuilder);
            this.CustomizeRoleMapping(modelBuilder);

            this.RtoAddressInfoMapping(modelBuilder);
            this.CustomizeRtoAddressInfoMapping(modelBuilder);

            this.RtoInfoMapping(modelBuilder);
            this.CustomizeRtoInfoMapping(modelBuilder);

            this.RtoOrganizationMapping(modelBuilder);
            this.CustomizeRtoOrganizationMapping(modelBuilder);

            this.RtoUserMapping(modelBuilder);
            this.CustomizeRtoUserMapping(modelBuilder);

            this.ScormMapping(modelBuilder);
            this.CustomizeScormMapping(modelBuilder);

            this.SectionMapping(modelBuilder);
            this.CustomizeSectionMapping(modelBuilder);

            this.SettingMapping(modelBuilder);
            this.CustomizeSettingMapping(modelBuilder);

            this.StateInfoMapping(modelBuilder);
            this.CustomizeStateInfoMapping(modelBuilder);

            this.StudentClassInfoMapping(modelBuilder);
            this.CustomizeStudentClassInfoMapping(modelBuilder);

            this.StudentNoteMapping(modelBuilder);
            this.CustomizeStudentNoteMapping(modelBuilder);

            this.TestQuestionMapping(modelBuilder);
            this.CustomizeTestQuestionMapping(modelBuilder);

            this.TestMapping(modelBuilder);
            this.CustomizeTestMapping(modelBuilder);

            this.TimeZoneMapping(modelBuilder);
            this.CustomizeTimeZoneMapping(modelBuilder);

            this.TrainerClassInfoMapping(modelBuilder);
            this.CustomizeTrainerClassInfoMapping(modelBuilder);

            this.TrainingPackageMapping(modelBuilder);
            this.CustomizeTrainingPackageMapping(modelBuilder);

            this.TrainingQualificationMapping(modelBuilder);
            this.CustomizeTrainingQualificationMapping(modelBuilder);

            this.UnitAssignmentMapping(modelBuilder);
            this.CustomizeUnitAssignmentMapping(modelBuilder);

            this.UnitContentMapping(modelBuilder);
            this.CustomizeUnitContentMapping(modelBuilder);

            this.UnitMasterMapping(modelBuilder);
            this.CustomizeUnitMasterMapping(modelBuilder);

            this.UnitMapping(modelBuilder);
            this.CustomizeUnitMapping(modelBuilder);

            this.UnitScormMapping(modelBuilder);
            this.CustomizeUnitScormMapping(modelBuilder);

            this.UnitSectionMapping(modelBuilder);
            this.CustomizeUnitSectionMapping(modelBuilder);

            this.UnitTestMapping(modelBuilder);
            this.CustomizeUnitTestMapping(modelBuilder);

            this.UnitUploadFileMapping(modelBuilder);
            this.CustomizeUnitUploadFileMapping(modelBuilder);

            this.UploadFileMapping(modelBuilder);
            this.CustomizeUploadFileMapping(modelBuilder);

            this.UserAddressInfoMapping(modelBuilder);
            this.CustomizeUserAddressInfoMapping(modelBuilder);

            this.UserAssignmentMapping(modelBuilder);
            this.CustomizeUserAssignmentMapping(modelBuilder);

            this.UserClaimMapping(modelBuilder);
            this.CustomizeUserClaimMapping(modelBuilder);

            this.UserContentMapping(modelBuilder);
            this.CustomizeUserContentMapping(modelBuilder);

            this.UserDocumentMapping(modelBuilder);
            this.CustomizeUserDocumentMapping(modelBuilder);

            this.UserGroupDetailMapping(modelBuilder);
            this.CustomizeUserGroupDetailMapping(modelBuilder);

            this.UserGroupMapping(modelBuilder);
            this.CustomizeUserGroupMapping(modelBuilder);

            this.UserLoginMapping(modelBuilder);
            this.CustomizeUserLoginMapping(modelBuilder);

            this.UserQualificationMapping(modelBuilder);
            this.CustomizeUserQualificationMapping(modelBuilder);

            this.UserQuestionAnswerMapping(modelBuilder);
            this.CustomizeUserQuestionAnswerMapping(modelBuilder);

            this.UserQuestionAttemptMapping(modelBuilder);
            this.CustomizeUserQuestionAttemptMapping(modelBuilder);

            this.UserQuestionFillBlankOptionMapping(modelBuilder);
            this.CustomizeUserQuestionFillBlankOptionMapping(modelBuilder);

            this.UserQuestionFillBlankMapping(modelBuilder);
            this.CustomizeUserQuestionFillBlankMapping(modelBuilder);

            this.UserQuestionOptionMapping(modelBuilder);
            this.CustomizeUserQuestionOptionMapping(modelBuilder);

            this.UserQuestionOptionTemplateMapping(modelBuilder);
            this.CustomizeUserQuestionOptionTemplateMapping(modelBuilder);

            this.UserQuestionMapping(modelBuilder);
            this.CustomizeUserQuestionMapping(modelBuilder);

            this.UserQuestionTemplateMapping(modelBuilder);
            this.CustomizeUserQuestionTemplateMapping(modelBuilder);

            this.UserRandomizeQuestionMapping(modelBuilder);
            this.CustomizeUserRandomizeQuestionMapping(modelBuilder);

            this.UserRegistrationTokenMapping(modelBuilder);
            this.CustomizeUserRegistrationTokenMapping(modelBuilder);

            this.UserRoleMapping(modelBuilder);
            this.CustomizeUserRoleMapping(modelBuilder);

            this.UserMapping(modelBuilder);
            this.CustomizeUserMapping(modelBuilder);

            this.UserScormMapping(modelBuilder);
            this.CustomizeUserScormMapping(modelBuilder);

            this.UserStateMapping(modelBuilder);
            this.CustomizeUserStateMapping(modelBuilder);

            this.UserTestAttemptMapping(modelBuilder);
            this.CustomizeUserTestAttemptMapping(modelBuilder);

            this.UserTestQuestionMapping(modelBuilder);
            this.CustomizeUserTestQuestionMapping(modelBuilder);

            this.UserTestMapping(modelBuilder);
            this.CustomizeUserTestMapping(modelBuilder);

            this.UserTestStateMapping(modelBuilder);
            this.CustomizeUserTestStateMapping(modelBuilder);

            this.UserTestTemplateMapping(modelBuilder);
            this.CustomizeUserTestTemplateMapping(modelBuilder);

            this.UserTypePermissionMapping(modelBuilder);
            this.CustomizeUserTypePermissionMapping(modelBuilder);

            this.UserTypeMapping(modelBuilder);
            this.CustomizeUserTypeMapping(modelBuilder);

            this.UserUnitMapping(modelBuilder);
            this.CustomizeUserUnitMapping(modelBuilder);

            this.UserUploadFileMapping(modelBuilder);
            this.CustomizeUserUploadFileMapping(modelBuilder);

            this.ZipContentMapping(modelBuilder);
            this.CustomizeZipContentMapping(modelBuilder);

            this.ZipJobMapping(modelBuilder);
            this.CustomizeZipJobMapping(modelBuilder);

            RelationshipsMapping(modelBuilder);
            CustomizeMapping(ref modelBuilder);
        }
    
        #region ActivityLog Mapping

        private void ActivityLogMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ActivityLog>().ToTable(@"ActivityLogs", @"dbo");
            modelBuilder.Entity<ActivityLog>().Property<long>(x => x.ActivityLogId).HasColumnName(@"ActivityLogId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<ActivityLog>().Property<long>(x => x.ActivityTypeId).HasColumnName(@"ActivityTypeId").HasColumnType(@"bigint").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<ActivityLog>().Property<long>(x => x.UserId).HasColumnName(@"UserId").HasColumnType(@"bigint").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<ActivityLog>().Property<System.Nullable<long>>(x => x.ModuleId).HasColumnName(@"ModuleId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<ActivityLog>().Property<string>(x => x.Action).HasColumnName(@"Action").HasColumnType(@"nvarchar(100)").ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<ActivityLog>().Property<string>(x => x.IPAddress).HasColumnName(@"IPAddress").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<ActivityLog>().Property<string>(x => x.ActivityName).HasColumnName(@"ActivityName").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<ActivityLog>().Property<string>(x => x.ActivityDescription).HasColumnName(@"ActivityDescription").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<ActivityLog>().Property<System.DateTime>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<ActivityLog>().Property<System.Nullable<long>>(x => x.AnyId).HasColumnName(@"AnyId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<ActivityLog>().Property<System.Nullable<long>>(x => x.AnyId2).HasColumnName(@"AnyId2").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<ActivityLog>().Property<System.Nullable<long>>(x => x.ActorId).HasColumnName(@"ActorId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<ActivityLog>().Property<System.Nullable<int>>(x => x.SiteId).HasColumnName(@"SiteId").HasColumnType(@"int").ValueGeneratedNever().HasDefaultValueSql(@"1");
            modelBuilder.Entity<ActivityLog>().Property<System.Nullable<long>>(x => x.OrganizationId).HasColumnName(@"OrganizationId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<ActivityLog>().Property<System.Nullable<long>>(x => x.RtoId).HasColumnName(@"RtoId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<ActivityLog>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<ActivityLog>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<ActivityLog>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<ActivityLog>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<ActivityLog>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<ActivityLog>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<ActivityLog>().HasKey(@"ActivityLogId");
        }
	
        partial void CustomizeActivityLogMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region ActivityType Mapping

        private void ActivityTypeMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ActivityType>().ToTable(@"ActivityTypes", @"dbo");
            modelBuilder.Entity<ActivityType>().Property<long>(x => x.ActivityTypeId).HasColumnName(@"ActivityTypeId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<ActivityType>().Property<long>(x => x.ModuleId).HasColumnName(@"ModuleId").HasColumnType(@"bigint").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<ActivityType>().Property<string>(x => x.ActivityTypeName).HasColumnName(@"ActivityTypeName").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<ActivityType>().Property<string>(x => x.ActivityTypeText).HasColumnName(@"ActivityTypeText").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<ActivityType>().Property<System.DateTime>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<ActivityType>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<ActivityType>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<ActivityType>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<ActivityType>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<ActivityType>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<ActivityType>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<ActivityType>().HasKey(@"ActivityTypeId");
        }
	
        partial void CustomizeActivityTypeMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region AddressInfo Mapping

        private void AddressInfoMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AddressInfo>().ToTable(@"AddressInfos", @"dbo");
            modelBuilder.Entity<AddressInfo>().Property<long>(x => x.AddressId).HasColumnName(@"AddressId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<AddressInfo>().Property<string>(x => x.AddressFirstLine).HasColumnName(@"AddressFirstLine").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<AddressInfo>().Property<string>(x => x.AddressSecondLine).HasColumnName(@"AddressSecondLine").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<AddressInfo>().Property<string>(x => x.Suburb).HasColumnName(@"Suburb").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<AddressInfo>().Property<System.Nullable<long>>(x => x.StateId).HasColumnName(@"StateId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<AddressInfo>().Property<string>(x => x.Postcode).HasColumnName(@"Postcode").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AddressInfo>().Property<System.Nullable<int>>(x => x.AddressTypeId).HasColumnName(@"AddressTypeId").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<AddressInfo>().Property<string>(x => x.BuildingName).HasColumnName(@"BuildingName").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<AddressInfo>().Property<string>(x => x.FlatUnitDetail).HasColumnName(@"FlatUnitDetail").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<AddressInfo>().Property<string>(x => x.StreetNumber).HasColumnName(@"StreetNumber").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<AddressInfo>().Property<string>(x => x.StreetName).HasColumnName(@"StreetName").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<AddressInfo>().Property<string>(x => x.PostalDeliveryBox).HasColumnName(@"PostalDeliveryBox").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AddressInfo>().Property<string>(x => x.LocationSuburb).HasColumnName(@"LocationSuburb").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<AddressInfo>().Property<System.Nullable<long>>(x => x.CountryId).HasColumnName(@"CountryId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<AddressInfo>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<AddressInfo>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<AddressInfo>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<AddressInfo>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<AddressInfo>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<AddressInfo>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<AddressInfo>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<AddressInfo>().HasKey(@"AddressId");
        }
	
        partial void CustomizeAddressInfoMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region Assignment Mapping

        private void AssignmentMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Assignment>().ToTable(@"Assignments", @"dbo");
            modelBuilder.Entity<Assignment>().Property<long>(x => x.AssignmentId).HasColumnName(@"AssignmentId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<Assignment>().Property<string>(x => x.AssignmentName).HasColumnName(@"AssignmentName").HasColumnType(@"nvarchar(250)").IsRequired().ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<Assignment>().Property<System.Nullable<long>>(x => x.CompleteTypeId).HasColumnName(@"CompleteTypeId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Assignment>().Property<string>(x => x.AssignmentDescription).HasColumnName(@"AssignmentDescription").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<Assignment>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Assignment>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Assignment>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Assignment>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Assignment>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Assignment>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Assignment>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Assignment>().HasKey(@"AssignmentId");
        }
	
        partial void CustomizeAssignmentMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region AvetmisEnrollment Mapping

        private void AvetmisEnrollmentMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AvetmisEnrollment>().ToTable(@"AvetmisEnrollments", @"dbo");
            modelBuilder.Entity<AvetmisEnrollment>().Property<long>(x => x.AvetmisEnrollmentId).HasColumnName(@"AvetmisEnrollmentId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<AvetmisEnrollment>().Property<System.Nullable<long>>(x => x.UserId).HasColumnName(@"UserId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<AvetmisEnrollment>().Property<System.Nullable<long>>(x => x.QualificationOrgId).HasColumnName(@"QualificationOrgId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<AvetmisEnrollment>().Property<System.Nullable<long>>(x => x.UnitId).HasColumnName(@"UnitId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<AvetmisEnrollment>().Property<System.Nullable<long>>(x => x.DeliveryLocationId).HasColumnName(@"DeliveryLocationId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<AvetmisEnrollment>().Property<System.Nullable<System.DateTime>>(x => x.ActivityStartDate).HasColumnName(@"ActivityStartDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<AvetmisEnrollment>().Property<System.Nullable<System.DateTime>>(x => x.ActivityEndDate).HasColumnName(@"ActivityEndDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<AvetmisEnrollment>().Property<string>(x => x.NationalFundingSourceId).HasColumnName(@"NationalFundingSourceId").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AvetmisEnrollment>().Property<string>(x => x.CommencingProgramId).HasColumnName(@"CommencingProgramId").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AvetmisEnrollment>().Property<string>(x => x.StateFundingSourceId).HasColumnName(@"StateFundingSourceId").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AvetmisEnrollment>().Property<string>(x => x.FeeExemptionConcessionId).HasColumnName(@"FeeExemptionConcessionId").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AvetmisEnrollment>().Property<string>(x => x.OrgOutcomeId).HasColumnName(@"OrgOutcomeId").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AvetmisEnrollment>().Property<System.Nullable<long>>(x => x.OrgOutcomeBy).HasColumnName(@"OrgOutcomeBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<AvetmisEnrollment>().Property<System.Nullable<System.DateTime>>(x => x.OrgOutcomeDate).HasColumnName(@"OrgOutcomeDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<AvetmisEnrollment>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<AvetmisEnrollment>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<AvetmisEnrollment>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<AvetmisEnrollment>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<AvetmisEnrollment>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<AvetmisEnrollment>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<AvetmisEnrollment>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<AvetmisEnrollment>().Property<long>(x => x.EnrollYear).HasColumnName(@"EnrollYear").HasColumnType(@"bigint").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<AvetmisEnrollment>().HasKey(@"AvetmisEnrollmentId");
        }
	
        partial void CustomizeAvetmisEnrollmentMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region Category Mapping

        private void CategoryMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Category>().ToTable(@"Categories", @"dbo");
            modelBuilder.Entity<Category>().Property<long>(x => x.CategoryId).HasColumnName(@"CategoryId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<Category>().Property<string>(x => x.CategoryName).HasColumnName(@"CategoryName").HasColumnType(@"nvarchar(100)").IsRequired().ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<Category>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Category>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Category>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Category>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Category>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Category>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Category>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Category>().HasKey(@"CategoryId");
        }
	
        partial void CustomizeCategoryMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region Certificate Mapping

        private void CertificateMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Certificate>().ToTable(@"Certificates", @"dbo");
            modelBuilder.Entity<Certificate>().Property<long>(x => x.CertificateId).HasColumnName(@"CertificateId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<Certificate>().Property<string>(x => x.CertificateName).HasColumnName(@"CertificateName").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<Certificate>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Certificate>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Certificate>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Certificate>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Certificate>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Certificate>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Certificate>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Certificate>().HasKey(@"CertificateId");
        }
	
        partial void CustomizeCertificateMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region ClassInfo Mapping

        private void ClassInfoMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ClassInfo>().ToTable(@"ClassInfos", @"dbo");
            modelBuilder.Entity<ClassInfo>().Property<long>(x => x.ClassId).HasColumnName(@"ClassId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<ClassInfo>().Property<System.Nullable<long>>(x => x.OrganizationId).HasColumnName(@"OrganizationId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<ClassInfo>().Property<System.Nullable<long>>(x => x.QualificationOrgId).HasColumnName(@"QualificationOrgId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<ClassInfo>().Property<System.Nullable<long>>(x => x.UnitId).HasColumnName(@"UnitId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<ClassInfo>().Property<string>(x => x.ClassName).HasColumnName(@"ClassName").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<ClassInfo>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<ClassInfo>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<ClassInfo>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<ClassInfo>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<ClassInfo>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<ClassInfo>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<ClassInfo>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<ClassInfo>().Property<bool>(x => x.IsDefaultClass).HasColumnName(@"IsDefaultClass").HasColumnType(@"bit").IsRequired().ValueGeneratedNever().HasDefaultValueSql(@"0");
            modelBuilder.Entity<ClassInfo>().HasKey(@"ClassId");
        }
	
        partial void CustomizeClassInfoMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region ClientBackground Mapping

        private void ClientBackgroundMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ClientBackground>().ToTable(@"ClientBackgrounds", @"dbo");
            modelBuilder.Entity<ClientBackground>().Property<long>(x => x.ClientBackgroundId).HasColumnName(@"ClientBackgroundId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<ClientBackground>().Property<System.Nullable<long>>(x => x.UserId).HasColumnName(@"UserId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<ClientBackground>().Property<string>(x => x.Usi).HasColumnName(@"Usi").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<ClientBackground>().Property<System.Nullable<int>>(x => x.SchoolLevelCompleteId).HasColumnName(@"SchoolLevelCompleteId").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<ClientBackground>().Property<string>(x => x.YearHighest).HasColumnName(@"YearHighest").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ClientBackground>().Property<string>(x => x.AtSchool).HasColumnName(@"AtSchool").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<ClientBackground>().Property<System.Nullable<int>>(x => x.IndigenousStatusId).HasColumnName(@"IndigenousStatusId").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<ClientBackground>().Property<string>(x => x.CountryOfBirthId).HasColumnName(@"CountryOfBirthId").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ClientBackground>().Property<string>(x => x.HomeLanguageId).HasColumnName(@"HomeLanguageId").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ClientBackground>().Property<System.Nullable<int>>(x => x.LabourForceStatusId).HasColumnName(@"LabourForceStatusId").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<ClientBackground>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<ClientBackground>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<ClientBackground>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<ClientBackground>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<ClientBackground>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<ClientBackground>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<ClientBackground>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<ClientBackground>().HasKey(@"ClientBackgroundId");
        }
	
        partial void CustomizeClientBackgroundMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region Client Mapping

        private void ClientMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Client>().ToTable(@"Clients", @"dbo");
            modelBuilder.Entity<Client>().Property<long>(x => x.ClientId).HasColumnName(@"ClientId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<Client>().Property<string>(x => x.ClientCode).HasColumnName(@"ClientCode").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Client>().Property<string>(x => x.Title).HasColumnName(@"Title").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Client>().Property<string>(x => x.FirstName).HasColumnName(@"FirstName").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<Client>().Property<string>(x => x.LastName).HasColumnName(@"LastName").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<Client>().Property<System.Nullable<int>>(x => x.Sex).HasColumnName(@"Sex").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Client>().Property<System.Nullable<System.DateTime>>(x => x.Dob).HasColumnName(@"Dob").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Client>().Property<string>(x => x.Email).HasColumnName(@"Email").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<Client>().Property<string>(x => x.TelephoneMobile).HasColumnName(@"TelephoneMobile").HasColumnType(@"nvarchar(100)").ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<Client>().Property<string>(x => x.TelephoneHome).HasColumnName(@"TelephoneHome").HasColumnType(@"nvarchar(100)").ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<Client>().Property<string>(x => x.TelephoneWork).HasColumnName(@"TelephoneWork").HasColumnType(@"nvarchar(100)").ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<Client>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Client>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Client>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Client>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Client>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Client>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Client>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Client>().HasKey(@"ClientId");
        }
	
        partial void CustomizeClientMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region CompleteType Mapping

        private void CompleteTypeMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<CompleteType>().ToTable(@"CompleteTypes", @"dbo");
            modelBuilder.Entity<CompleteType>().Property<long>(x => x.CompleteTypeId).HasColumnName(@"CompleteTypeId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<CompleteType>().Property<string>(x => x.CompleteTypeName).HasColumnName(@"CompleteTypeName").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<CompleteType>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<CompleteType>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<CompleteType>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<CompleteType>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<CompleteType>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<CompleteType>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<CompleteType>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<CompleteType>().HasKey(@"CompleteTypeId");
        }
	
        partial void CustomizeCompleteTypeMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region Content Mapping

        private void ContentMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Content>().ToTable(@"Contents", @"dbo");
            modelBuilder.Entity<Content>().Property<long>(x => x.ContentId).HasColumnName(@"ContentId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<Content>().Property<string>(x => x.ContentName).HasColumnName(@"ContentName").HasColumnType(@"nvarchar(250)").IsRequired().ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<Content>().Property<string>(x => x.ContentDescription).HasColumnName(@"ContentDescription").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<Content>().Property<System.Nullable<long>>(x => x.CompleteTypeId).HasColumnName(@"CompleteTypeId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Content>().Property<System.Nullable<int>>(x => x.TimeLimit).HasColumnName(@"TimeLimit").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Content>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Content>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Content>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Content>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Content>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Content>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Content>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Content>().HasKey(@"ContentId");
        }
	
        partial void CustomizeContentMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region ContentType Mapping

        private void ContentTypeMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ContentType>().ToTable(@"ContentTypes", @"dbo");
            modelBuilder.Entity<ContentType>().Property<long>(x => x.ContentTypeId).HasColumnName(@"ContentTypeId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<ContentType>().Property<string>(x => x.ContentTypeName).HasColumnName(@"ContentTypeName").HasColumnType(@"nvarchar(250)").IsRequired().ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<ContentType>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<ContentType>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<ContentType>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<ContentType>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<ContentType>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<ContentType>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<ContentType>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<ContentType>().HasKey(@"ContentTypeId");
        }
	
        partial void CustomizeContentTypeMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region CountryInfo Mapping

        private void CountryInfoMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<CountryInfo>().ToTable(@"CountryInfos", @"dbo");
            modelBuilder.Entity<CountryInfo>().Property<long>(x => x.CountryId).HasColumnName(@"CountryId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<CountryInfo>().Property<string>(x => x.CountryCode).HasColumnName(@"CountryCode").HasColumnType(@"nvarchar(10)").ValueGeneratedNever().HasMaxLength(10);
            modelBuilder.Entity<CountryInfo>().Property<string>(x => x.CountryName).HasColumnName(@"CountryName").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<CountryInfo>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<CountryInfo>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<CountryInfo>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<CountryInfo>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<CountryInfo>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<CountryInfo>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<CountryInfo>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<CountryInfo>().HasKey(@"CountryId");
        }
	
        partial void CustomizeCountryInfoMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region CourseContent Mapping

        private void CourseContentMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<CourseContent>().ToTable(@"CourseContents", @"dbo");
            modelBuilder.Entity<CourseContent>().Property<long>(x => x.CourseContentId).HasColumnName(@"CourseContentId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<CourseContent>().Property<long>(x => x.ContentId).HasColumnName(@"ContentId").HasColumnType(@"bigint").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<CourseContent>().Property<long>(x => x.CourseId).HasColumnName(@"CourseId").HasColumnType(@"bigint").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<CourseContent>().Property<System.Nullable<int>>(x => x.Sequence).HasColumnName(@"Sequence").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<CourseContent>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<CourseContent>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<CourseContent>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<CourseContent>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<CourseContent>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<CourseContent>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<CourseContent>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<CourseContent>().HasKey(@"CourseContentId");
        }
	
        partial void CustomizeCourseContentMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region CourseInfo Mapping

        private void CourseInfoMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<CourseInfo>().ToTable(@"CourseInfos", @"dbo");
            modelBuilder.Entity<CourseInfo>().Property<long>(x => x.CourseId).HasColumnName(@"CourseId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<CourseInfo>().Property<string>(x => x.CourseName).HasColumnName(@"CourseName").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<CourseInfo>().Property<System.Nullable<int>>(x => x.CourseForId).HasColumnName(@"CourseForId").HasColumnType(@"int").ValueGeneratedNever().HasDefaultValueSql(@"1");
            modelBuilder.Entity<CourseInfo>().Property<System.Nullable<long>>(x => x.RtoId).HasColumnName(@"RtoId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<CourseInfo>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<CourseInfo>().Property<System.Nullable<int>>(x => x.Status).HasColumnName(@"Status").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<CourseInfo>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<CourseInfo>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<CourseInfo>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<CourseInfo>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<CourseInfo>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<CourseInfo>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<CourseInfo>().HasKey(@"CourseId");
        }
	
        partial void CustomizeCourseInfoMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region CourseTest Mapping

        private void CourseTestMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<CourseTest>().ToTable(@"CourseTests", @"dbo");
            modelBuilder.Entity<CourseTest>().Property<long>(x => x.CourseTestId).HasColumnName(@"CourseTestId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<CourseTest>().Property<long>(x => x.TestId).HasColumnName(@"TestId").HasColumnType(@"bigint").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<CourseTest>().Property<long>(x => x.CourseId).HasColumnName(@"CourseId").HasColumnType(@"bigint").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<CourseTest>().Property<System.Nullable<int>>(x => x.Sequence).HasColumnName(@"Sequence").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<CourseTest>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<CourseTest>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<CourseTest>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<CourseTest>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<CourseTest>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<CourseTest>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<CourseTest>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<CourseTest>().HasKey(@"CourseTestId");
        }
	
        partial void CustomizeCourseTestMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region CourseUploadFile Mapping

        private void CourseUploadFileMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<CourseUploadFile>().ToTable(@"CourseUploadFiles", @"dbo");
            modelBuilder.Entity<CourseUploadFile>().Property<long>(x => x.CourseUploadFileId).HasColumnName(@"CourseUploadFileId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<CourseUploadFile>().Property<System.Nullable<long>>(x => x.CourseId).HasColumnName(@"CourseId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<CourseUploadFile>().Property<System.Nullable<long>>(x => x.UploadFileId).HasColumnName(@"UploadFileId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<CourseUploadFile>().Property<System.Nullable<int>>(x => x.Sequence).HasColumnName(@"Sequence").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<CourseUploadFile>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<CourseUploadFile>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<CourseUploadFile>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<CourseUploadFile>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<CourseUploadFile>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<CourseUploadFile>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<CourseUploadFile>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<CourseUploadFile>().HasKey(@"CourseUploadFileId");
        }
	
        partial void CustomizeCourseUploadFileMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region Currency Mapping

        private void CurrencyMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Currency>().ToTable(@"Currencies", @"dbo");
            modelBuilder.Entity<Currency>().Property<long>(x => x.CurrencyId).HasColumnName(@"CurrencyId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<Currency>().Property<string>(x => x.CurrencyCode).HasColumnName(@"CurrencyCode").HasColumnType(@"nvarchar(3)").IsRequired().ValueGeneratedNever().HasMaxLength(3);
            modelBuilder.Entity<Currency>().Property<string>(x => x.CurrencyName).HasColumnName(@"CurrencyName").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Currency>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Currency>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Currency>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Currency>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Currency>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Currency>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Currency>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Currency>().HasKey(@"CurrencyId");
        }
	
        partial void CustomizeCurrencyMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region DeliveryLocation Mapping

        private void DeliveryLocationMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<DeliveryLocation>().ToTable(@"DeliveryLocations", @"dbo");
            modelBuilder.Entity<DeliveryLocation>().Property<long>(x => x.DeliveryLocationId).HasColumnName(@"DeliveryLocationId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<DeliveryLocation>().Property<System.Nullable<long>>(x => x.OrganizationId).HasColumnName(@"OrganizationId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<DeliveryLocation>().Property<System.Nullable<long>>(x => x.RtoId).HasColumnName(@"RtoId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<DeliveryLocation>().Property<System.Nullable<long>>(x => x.AddressId).HasColumnName(@"AddressId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<DeliveryLocation>().Property<System.Nullable<long>>(x => x.QualificationId).HasColumnName(@"QualificationId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<DeliveryLocation>().Property<System.Nullable<long>>(x => x.QualificationTranId).HasColumnName(@"QualificationTranId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<DeliveryLocation>().Property<System.Nullable<long>>(x => x.QualificationOrgId).HasColumnName(@"QualificationOrgId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<DeliveryLocation>().Property<string>(x => x.DeliverLocation).HasColumnName(@"DeliverLocation").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<DeliveryLocation>().Property<string>(x => x.DeliverLocationName).HasColumnName(@"DeliverLocationName").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<DeliveryLocation>().Property<System.Nullable<bool>>(x => x.IsRto).HasColumnName(@"IsRto").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<DeliveryLocation>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<DeliveryLocation>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<DeliveryLocation>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<DeliveryLocation>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<DeliveryLocation>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<DeliveryLocation>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<DeliveryLocation>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<DeliveryLocation>().HasKey(@"DeliveryLocationId");
        }
	
        partial void CustomizeDeliveryLocationMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region DisabilityOption Mapping

        private void DisabilityOptionMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<DisabilityOption>().ToTable(@"DisabilityOptions", @"dbo");
            modelBuilder.Entity<DisabilityOption>().Property<long>(x => x.DisabilityOptionId).HasColumnName(@"DisabilityOptionId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<DisabilityOption>().Property<string>(x => x.DisabilityOptionCode).HasColumnName(@"DisabilityOptionCode").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<DisabilityOption>().Property<string>(x => x.DisabilityOptionName).HasColumnName(@"DisabilityOptionName").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<DisabilityOption>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<DisabilityOption>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<DisabilityOption>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<DisabilityOption>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<DisabilityOption>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<DisabilityOption>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<DisabilityOption>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<DisabilityOption>().HasKey(@"DisabilityOptionId");
        }
	
        partial void CustomizeDisabilityOptionMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region Envet Mapping

        private void EnvetMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Envet>().ToTable(@"Envets", @"dbo");
            modelBuilder.Entity<Envet>().Property<long>(x => x.EnvetId).HasColumnName(@"EnvetId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<Envet>().Property<System.Nullable<long>>(x => x.OrganizationId).HasColumnName(@"OrganizationId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Envet>().Property<System.Nullable<long>>(x => x.QualificationId).HasColumnName(@"QualificationId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Envet>().Property<System.Nullable<long>>(x => x.QualificationOrgId).HasColumnName(@"QualificationOrgId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Envet>().Property<System.Nullable<long>>(x => x.RtoId).HasColumnName(@"RtoId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Envet>().Property<System.Nullable<long>>(x => x.UnitId).HasColumnName(@"UnitId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Envet>().Property<System.Nullable<long>>(x => x.ProductFileId).HasColumnName(@"ProductFileId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Envet>().Property<System.Nullable<long>>(x => x.UserId).HasColumnName(@"UserId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Envet>().Property<System.Nullable<int>>(x => x.EnrollYear).HasColumnName(@"EnrollYear").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Envet>().Property<System.Nullable<int>>(x => x.SchoolYear).HasColumnName(@"SchoolYear").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Envet>().Property<System.Nullable<System.DateTime>>(x => x.EnrolledDate).HasColumnName(@"EnrolledDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Envet>().Property<System.Nullable<System.DateTime>>(x => x.CompletionDate).HasColumnName(@"CompletionDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Envet>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Envet>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Envet>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Envet>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Envet>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Envet>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Envet>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Envet>().Property<string>(x => x.USI).HasColumnName(@"USI").HasColumnType(@"nvarchar(200)").ValueGeneratedNever().HasMaxLength(200);
            modelBuilder.Entity<Envet>().HasKey(@"EnvetId");
        }
	
        partial void CustomizeEnvetMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region ErrorLog Mapping

        private void ErrorLogMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ErrorLog>().ToTable(@"ErrorLogs", @"dbo");
            modelBuilder.Entity<ErrorLog>().Property<int>(x => x.Id).HasColumnName(@"Id").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<ErrorLog>().Property<System.DateTime>(x => x.EventDateTime).HasColumnName(@"EventDateTime").HasColumnType(@"datetime").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<ErrorLog>().Property<string>(x => x.EventLevel).HasColumnName(@"EventLevel").HasColumnType(@"nvarchar(100)").IsRequired().ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<ErrorLog>().Property<string>(x => x.Url).HasColumnName(@"Url").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<ErrorLog>().Property<string>(x => x.UserName).HasColumnName(@"UserName").HasColumnType(@"nvarchar(100)").IsRequired().ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<ErrorLog>().Property<string>(x => x.MachineName).HasColumnName(@"MachineName").HasColumnType(@"nvarchar(100)").IsRequired().ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<ErrorLog>().Property<string>(x => x.EventMessage).HasColumnName(@"EventMessage").HasColumnType(@"nvarchar(max)").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<ErrorLog>().Property<string>(x => x.ErrorSource).HasColumnName(@"ErrorSource").HasColumnType(@"nvarchar(100)").ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<ErrorLog>().Property<string>(x => x.ErrorClass).HasColumnName(@"ErrorClass").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<ErrorLog>().Property<string>(x => x.ErrorMethod).HasColumnName(@"ErrorMethod").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<ErrorLog>().Property<string>(x => x.ErrorMessage).HasColumnName(@"ErrorMessage").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<ErrorLog>().Property<string>(x => x.InnerErrorMessage).HasColumnName(@"InnerErrorMessage").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<ErrorLog>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<ErrorLog>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<ErrorLog>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<ErrorLog>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<ErrorLog>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<ErrorLog>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<ErrorLog>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<ErrorLog>().HasKey(@"Id");
        }
	
        partial void CustomizeErrorLogMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region Evidence Mapping

        private void EvidenceMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Evidence>().ToTable(@"Evidences", @"dbo");
            modelBuilder.Entity<Evidence>().Property<long>(x => x.EvidenceId).HasColumnName(@"EvidenceId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<Evidence>().Property<System.Nullable<long>>(x => x.QualificationOrgId).HasColumnName(@"QualificationOrgId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Evidence>().Property<string>(x => x.Title).HasColumnName(@"Title").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<Evidence>().Property<System.Nullable<long>>(x => x.UnitId).HasColumnName(@"UnitId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Evidence>().Property<string>(x => x.FileName).HasColumnName(@"FileName").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<Evidence>().Property<string>(x => x.FileUrl).HasColumnName(@"FileUrl").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<Evidence>().Property<System.Nullable<long>>(x => x.UserId).HasColumnName(@"UserId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Evidence>().Property<System.Nullable<long>>(x => x.ToUserId).HasColumnName(@"ToUserId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Evidence>().Property<System.Nullable<bool>>(x => x.IsLeanerUpload).HasColumnName(@"IsLeanerUpload").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<Evidence>().Property<System.Nullable<bool>>(x => x.IsDisplayComp).HasColumnName(@"IsDisplayComp").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<Evidence>().Property<System.Nullable<int>>(x => x.EvidenceAction).HasColumnName(@"EvidenceAction").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Evidence>().Property<string>(x => x.Message).HasColumnName(@"Message").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<Evidence>().Property<System.Nullable<int>>(x => x.Status).HasColumnName(@"Status").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Evidence>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Evidence>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Evidence>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Evidence>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Evidence>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Evidence>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Evidence>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Evidence>().HasKey(@"EvidenceId");
        }
	
        partial void CustomizeEvidenceMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region FileRelation Mapping

        private void FileRelationMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<FileRelation>().ToTable(@"FileRelations", @"dbo");
            modelBuilder.Entity<FileRelation>().Property<long>(x => x.FileRelationId).HasColumnName(@"FileRelationId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<FileRelation>().Property<System.Nullable<long>>(x => x.FileId).HasColumnName(@"FileId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<FileRelation>().Property<System.Nullable<long>>(x => x.ParentId).HasColumnName(@"ParentId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<FileRelation>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<FileRelation>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<FileRelation>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<FileRelation>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<FileRelation>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<FileRelation>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<FileRelation>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<FileRelation>().HasKey(@"FileRelationId");
        }
	
        partial void CustomizeFileRelationMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region File Mapping

        private void FileMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<File>().ToTable(@"Files", @"dbo");
            modelBuilder.Entity<File>().Property<long>(x => x.FileId).HasColumnName(@"FileId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<File>().Property<string>(x => x.FileName).HasColumnName(@"FileName").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<File>().Property<string>(x => x.FilePath).HasColumnName(@"FilePath").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<File>().Property<System.Nullable<long>>(x => x.FileTypeId).HasColumnName(@"FileTypeId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<File>().Property<System.Nullable<int>>(x => x.FileSize).HasColumnName(@"FileSize").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<File>().Property<string>(x => x.FileUrl).HasColumnName(@"FileUrl").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<File>().Property<System.Nullable<bool>>(x => x.IsShared).HasColumnName(@"IsShared").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<File>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<File>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<File>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<File>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<File>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<File>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<File>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<File>().Property<System.Nullable<bool>>(x => x.FileAvailable).HasColumnName(@"FileAvailable").HasColumnType(@"bit").ValueGeneratedNever().HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<File>().HasKey(@"FileId");
        }
	
        partial void CustomizeFileMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region FileType Mapping

        private void FileTypeMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<FileType>().ToTable(@"FileTypes", @"dbo");
            modelBuilder.Entity<FileType>().Property<long>(x => x.FileTypeId).HasColumnName(@"FileTypeId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<FileType>().Property<string>(x => x.FileTypeName).HasColumnName(@"FileTypeName").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<FileType>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<FileType>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<FileType>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<FileType>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<FileType>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<FileType>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<FileType>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<FileType>().HasKey(@"FileTypeId");
        }
	
        partial void CustomizeFileTypeMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region InvoiceItem Mapping

        private void InvoiceItemMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<InvoiceItem>().ToTable(@"InvoiceItems", @"dbo");
            modelBuilder.Entity<InvoiceItem>().Property<long>(x => x.InvoiceItemId).HasColumnName(@"InvoiceItemId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<InvoiceItem>().Property<long>(x => x.InvoiceId).HasColumnName(@"InvoiceId").HasColumnType(@"bigint").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<InvoiceItem>().Property<string>(x => x.InvoiceLineText).HasColumnName(@"InvoiceLineText").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<InvoiceItem>().Property<string>(x => x.InvoiceLineNote).HasColumnName(@"InvoiceLineNote").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<InvoiceItem>().Property<System.Nullable<decimal>>(x => x.Price).HasColumnName(@"Price").HasColumnType(@"decimal(18,2)").ValueGeneratedNever();
            modelBuilder.Entity<InvoiceItem>().Property<System.Nullable<int>>(x => x.Quantity).HasColumnName(@"Quantity").HasColumnType(@"int").ValueGeneratedNever().HasDefaultValueSql(@"1");
            modelBuilder.Entity<InvoiceItem>().Property<System.Nullable<decimal>>(x => x.Tax).HasColumnName(@"Tax").HasColumnType(@"decimal(18,2)").ValueGeneratedNever();
            modelBuilder.Entity<InvoiceItem>().Property<System.Nullable<bool>>(x => x.IsIncludeTax).HasColumnName(@"IsIncludeTax").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<InvoiceItem>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<InvoiceItem>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<InvoiceItem>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<InvoiceItem>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<InvoiceItem>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<InvoiceItem>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<InvoiceItem>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<InvoiceItem>().HasKey(@"InvoiceItemId");
        }
	
        partial void CustomizeInvoiceItemMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region Invoice Mapping

        private void InvoiceMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Invoice>().ToTable(@"Invoices", @"dbo");
            modelBuilder.Entity<Invoice>().Property<long>(x => x.InvoiceId).HasColumnName(@"InvoiceId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<Invoice>().Property<System.Nullable<decimal>>(x => x.TotalDue).HasColumnName(@"TotalDue").HasColumnType(@"decimal(18,2)").ValueGeneratedNever();
            modelBuilder.Entity<Invoice>().Property<System.Nullable<decimal>>(x => x.TotalTaxDue).HasColumnName(@"TotalTaxDue").HasColumnType(@"decimal(18,2)").ValueGeneratedNever();
            modelBuilder.Entity<Invoice>().Property<System.Nullable<int>>(x => x.NoLineItems).HasColumnName(@"NoLineItems").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Invoice>().Property<System.Nullable<System.DateTime>>(x => x.DueDate).HasColumnName(@"DueDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Invoice>().Property<System.Nullable<int>>(x => x.InvoiceType).HasColumnName(@"InvoiceType").HasColumnType(@"int").ValueGeneratedNever().HasDefaultValueSql(@"1");
            modelBuilder.Entity<Invoice>().Property<System.Nullable<long>>(x => x.RtoId).HasColumnName(@"RtoId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Invoice>().Property<System.Nullable<long>>(x => x.OrganizationId).HasColumnName(@"OrganizationId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Invoice>().Property<System.Nullable<long>>(x => x.ProductFileId).HasColumnName(@"ProductFileId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Invoice>().Property<System.Nullable<int>>(x => x.Status).HasColumnName(@"Status").HasColumnType(@"int").ValueGeneratedNever().HasDefaultValueSql(@"1");
            modelBuilder.Entity<Invoice>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Invoice>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Invoice>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Invoice>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Invoice>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Invoice>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Invoice>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Invoice>().Property<System.Nullable<decimal>>(x => x.Price).HasColumnName(@"Price").HasColumnType(@"decimal(18,2)").ValueGeneratedNever();
            modelBuilder.Entity<Invoice>().Property<string>(x => x.InvoiceNumber).HasColumnName(@"InvoiceNumber").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Invoice>().Property<System.Nullable<long>>(x => x.FileId).HasColumnName(@"FileId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Invoice>().HasKey(@"InvoiceId");
        }
	
        partial void CustomizeInvoiceMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region Job Mapping

        private void JobMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Job>().ToTable(@"Jobs", @"dbo");
            modelBuilder.Entity<Job>().Property<long>(x => x.JobId).HasColumnName(@"JobId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<Job>().Property<int>(x => x.Status).HasColumnName(@"Status").HasColumnType(@"int").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Job>().Property<System.Nullable<int>>(x => x.RetryCount).HasColumnName(@"RetryCount").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Job>().Property<System.DateTime>(x => x.QueuedOn).HasColumnName(@"QueuedOn").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Job>().Property<long>(x => x.QueuedBy).HasColumnName(@"QueuedBy").HasColumnType(@"bigint").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Job>().Property<System.Nullable<System.DateTime>>(x => x.StartedOn).HasColumnName(@"StartedOn").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Job>().Property<System.Nullable<System.DateTime>>(x => x.CompletedOn).HasColumnName(@"CompletedOn").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Job>().Property<System.Nullable<System.DateTime>>(x => x.FailedOn).HasColumnName(@"FailedOn").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Job>().Property<int>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Job>().HasKey(@"JobId");
        }
	
        partial void CustomizeJobMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region Language Mapping

        private void LanguageMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Language>().ToTable(@"Languages", @"dbo");
            modelBuilder.Entity<Language>().Property<long>(x => x.LanguageId).HasColumnName(@"LanguageId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<Language>().Property<string>(x => x.LanguageCode).HasColumnName(@"LanguageCode").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Language>().Property<string>(x => x.LanguageName).HasColumnName(@"LanguageName").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<Language>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Language>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Language>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Language>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Language>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Language>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Language>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Language>().HasKey(@"LanguageId");
        }
	
        partial void CustomizeLanguageMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region LeanerDisabilityOption Mapping

        private void LeanerDisabilityOptionMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<LeanerDisabilityOption>().ToTable(@"LeanerDisabilityOptions", @"dbo");
            modelBuilder.Entity<LeanerDisabilityOption>().Property<long>(x => x.LeanerDisabilityOptionId).HasColumnName(@"LeanerDisabilityOptionId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<LeanerDisabilityOption>().Property<System.Nullable<long>>(x => x.LearnerId).HasColumnName(@"LearnerId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<LeanerDisabilityOption>().Property<System.Nullable<long>>(x => x.DisabilityOptionId).HasColumnName(@"DisabilityOptionId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<LeanerDisabilityOption>().Property<System.Nullable<bool>>(x => x.DisabilityFlag).HasColumnName(@"DisabilityFlag").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<LeanerDisabilityOption>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<LeanerDisabilityOption>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<LeanerDisabilityOption>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<LeanerDisabilityOption>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<LeanerDisabilityOption>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<LeanerDisabilityOption>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<LeanerDisabilityOption>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<LeanerDisabilityOption>().HasKey(@"LeanerDisabilityOptionId");
        }
	
        partial void CustomizeLeanerDisabilityOptionMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region LeanerPriorEducation Mapping

        private void LeanerPriorEducationMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<LeanerPriorEducation>().ToTable(@"LeanerPriorEducations", @"dbo");
            modelBuilder.Entity<LeanerPriorEducation>().Property<long>(x => x.LeanerPriorEducationId).HasColumnName(@"LeanerPriorEducationId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<LeanerPriorEducation>().Property<System.Nullable<long>>(x => x.LearnerId).HasColumnName(@"LearnerId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<LeanerPriorEducation>().Property<System.Nullable<long>>(x => x.PriorEducationId).HasColumnName(@"PriorEducationId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<LeanerPriorEducation>().Property<System.Nullable<bool>>(x => x.PriorEducationFlag).HasColumnName(@"PriorEducationFlag").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<LeanerPriorEducation>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<LeanerPriorEducation>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<LeanerPriorEducation>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<LeanerPriorEducation>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<LeanerPriorEducation>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<LeanerPriorEducation>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<LeanerPriorEducation>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<LeanerPriorEducation>().HasKey(@"LeanerPriorEducationId");
        }
	
        partial void CustomizeLeanerPriorEducationMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region LearnerInfo Mapping

        private void LearnerInfoMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<LearnerInfo>().ToTable(@"LearnerInfos", @"dbo");
            modelBuilder.Entity<LearnerInfo>().Property<long>(x => x.LearnerId).HasColumnName(@"LearnerId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<LearnerInfo>().Property<System.Nullable<long>>(x => x.UserId).HasColumnName(@"UserId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<LearnerInfo>().Property<string>(x => x.USI).HasColumnName(@"USI").HasColumnType(@"nvarchar(200)").ValueGeneratedNever().HasMaxLength(200);
            modelBuilder.Entity<LearnerInfo>().Property<System.Nullable<bool>>(x => x.DisabilityFlag).HasColumnName(@"DisabilityFlag").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<LearnerInfo>().Property<System.Nullable<bool>>(x => x.PriorEducationFlag).HasColumnName(@"PriorEducationFlag").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<LearnerInfo>().Property<string>(x => x.HighestSchoolLevel).HasColumnName(@"HighestSchoolLevel").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LearnerInfo>().Property<string>(x => x.YearHighestSchool).HasColumnName(@"YearHighestSchool").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<LearnerInfo>().Property<string>(x => x.IndigenousStatus).HasColumnName(@"IndigenousStatus").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LearnerInfo>().Property<System.Nullable<long>>(x => x.LanguageId).HasColumnName(@"LanguageId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<LearnerInfo>().Property<string>(x => x.LabourForceStatus).HasColumnName(@"LabourForceStatus").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LearnerInfo>().Property<System.Nullable<long>>(x => x.ProficiencyLanguage).HasColumnName(@"ProficiencyLanguage").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<LearnerInfo>().Property<System.Nullable<long>>(x => x.CountryOfBirthId).HasColumnName(@"CountryOfBirthId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<LearnerInfo>().Property<string>(x => x.AtSchool).HasColumnName(@"AtSchool").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LearnerInfo>().Property<string>(x => x.AddressLocation).HasColumnName(@"AddressLocation").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<LearnerInfo>().Property<string>(x => x.Postcode).HasColumnName(@"Postcode").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LearnerInfo>().Property<System.Nullable<long>>(x => x.StateId).HasColumnName(@"StateId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<LearnerInfo>().Property<System.Nullable<long>>(x => x.CountryId).HasColumnName(@"CountryId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<LearnerInfo>().Property<string>(x => x.AddressBuildingPropertyName).HasColumnName(@"AddressBuildingPropertyName").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<LearnerInfo>().Property<string>(x => x.AddressDwellingType).HasColumnName(@"AddressDwellingType").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LearnerInfo>().Property<string>(x => x.AddressUnitNumber).HasColumnName(@"AddressUnitNumber").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LearnerInfo>().Property<string>(x => x.AddressFloor).HasColumnName(@"AddressFloor").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LearnerInfo>().Property<string>(x => x.AddressRoadNumber).HasColumnName(@"AddressRoadNumber").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LearnerInfo>().Property<string>(x => x.AddressLotNumber).HasColumnName(@"AddressLotNumber").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LearnerInfo>().Property<string>(x => x.AddressRoadName).HasColumnName(@"AddressRoadName").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<LearnerInfo>().Property<string>(x => x.AddressRoadType).HasColumnName(@"AddressRoadType").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LearnerInfo>().Property<string>(x => x.AddressRoadSuffix).HasColumnName(@"AddressRoadSuffix").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LearnerInfo>().Property<string>(x => x.StatisticalAreaLevel1).HasColumnName(@"StatisticalAreaLevel1").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LearnerInfo>().Property<string>(x => x.StatisticalAreaLevel2).HasColumnName(@"StatisticalAreaLevel2").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LearnerInfo>().Property<System.Nullable<int>>(x => x.EnglishMainLanguageFlag).HasColumnName(@"EnglishMainLanguageFlag").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<LearnerInfo>().Property<string>(x => x.EducationIdentifier).HasColumnName(@"EducationIdentifier").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<LearnerInfo>().Property<System.Nullable<bool>>(x => x.IsSameAddress).HasColumnName(@"IsSameAddress").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<LearnerInfo>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<LearnerInfo>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<LearnerInfo>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<LearnerInfo>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<LearnerInfo>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<LearnerInfo>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<LearnerInfo>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<LearnerInfo>().HasKey(@"LearnerId");
        }
	
        partial void CustomizeLearnerInfoMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region LearnerPostAddressInfo Mapping

        private void LearnerPostAddressInfoMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<LearnerPostAddressInfo>().ToTable(@"LearnerPostAddressInfos", @"dbo");
            modelBuilder.Entity<LearnerPostAddressInfo>().Property<long>(x => x.LearnerPostAddressId).HasColumnName(@"LearnerPostAddressId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<LearnerPostAddressInfo>().Property<System.Nullable<long>>(x => x.UserId).HasColumnName(@"UserId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<LearnerPostAddressInfo>().Property<string>(x => x.ClientIdentifier).HasColumnName(@"ClientIdentifier").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LearnerPostAddressInfo>().Property<string>(x => x.AddressBuildingPropertyName).HasColumnName(@"AddressBuildingPropertyName").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<LearnerPostAddressInfo>().Property<string>(x => x.AddressDwellingType).HasColumnName(@"AddressDwellingType").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LearnerPostAddressInfo>().Property<string>(x => x.AddressUnitNumber).HasColumnName(@"AddressUnitNumber").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LearnerPostAddressInfo>().Property<string>(x => x.AddressFloor).HasColumnName(@"AddressFloor").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LearnerPostAddressInfo>().Property<string>(x => x.AddressRoadNumber).HasColumnName(@"AddressRoadNumber").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LearnerPostAddressInfo>().Property<string>(x => x.AddressLotNumber).HasColumnName(@"AddressLotNumber").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LearnerPostAddressInfo>().Property<string>(x => x.AddressRoadName).HasColumnName(@"AddressRoadName").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LearnerPostAddressInfo>().Property<string>(x => x.AddressRoadType).HasColumnName(@"AddressRoadType").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LearnerPostAddressInfo>().Property<string>(x => x.AddressRoadSuffix).HasColumnName(@"AddressRoadSuffix").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LearnerPostAddressInfo>().Property<string>(x => x.AddressPostalDeliveryBox).HasColumnName(@"AddressPostalDeliveryBox").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LearnerPostAddressInfo>().Property<string>(x => x.AddressLocation).HasColumnName(@"AddressLocation").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LearnerPostAddressInfo>().Property<string>(x => x.Postcode).HasColumnName(@"Postcode").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LearnerPostAddressInfo>().Property<System.Nullable<long>>(x => x.StateId).HasColumnName(@"StateId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<LearnerPostAddressInfo>().Property<System.Nullable<long>>(x => x.CountryId).HasColumnName(@"CountryId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<LearnerPostAddressInfo>().Property<string>(x => x.TelephoneNumberMobile).HasColumnName(@"TelephoneNumberMobile").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LearnerPostAddressInfo>().Property<string>(x => x.TelephoneNumberHome).HasColumnName(@"TelephoneNumberHome").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LearnerPostAddressInfo>().Property<string>(x => x.TelephoneNumberWork).HasColumnName(@"TelephoneNumberWork").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LearnerPostAddressInfo>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<LearnerPostAddressInfo>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<LearnerPostAddressInfo>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<LearnerPostAddressInfo>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<LearnerPostAddressInfo>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<LearnerPostAddressInfo>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<LearnerPostAddressInfo>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<LearnerPostAddressInfo>().HasKey(@"LearnerPostAddressId");
        }
	
        partial void CustomizeLearnerPostAddressInfoMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region Location Mapping

        private void LocationMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Location>().ToTable(@"Locations", @"dbo");
            modelBuilder.Entity<Location>().Property<long>(x => x.LocationId).HasColumnName(@"LocationId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<Location>().Property<string>(x => x.OrganizationDelivery).HasColumnName(@"OrganizationDelivery").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<Location>().Property<string>(x => x.OrganisationDeliveryId).HasColumnName(@"OrganisationDeliveryId").HasColumnType(@"nvarchar(250)").IsRequired().ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<Location>().Property<string>(x => x.OrganizationDeliveryName).HasColumnName(@"OrganizationDeliveryName").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<Location>().Property<string>(x => x.Address).HasColumnName(@"Address").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<Location>().Property<string>(x => x.StateId).HasColumnName(@"StateId").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Location>().Property<string>(x => x.PostCode).HasColumnName(@"PostCode").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Location>().Property<string>(x => x.CountryId).HasColumnName(@"CountryId").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Location>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Location>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Location>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Location>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Location>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Location>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Location>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Location>().HasKey(@"LocationId");
        }
	
        partial void CustomizeLocationMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region Module Mapping

        private void ModuleMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Module>().ToTable(@"Modules", @"dbo");
            modelBuilder.Entity<Module>().Property<long>(x => x.ModuleId).HasColumnName(@"ModuleId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<Module>().Property<string>(x => x.ModuleName).HasColumnName(@"ModuleName").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<Module>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Module>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Module>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Module>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Module>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Module>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Module>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Module>().HasKey(@"ModuleId");
        }
	
        partial void CustomizeModuleMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region NotifyEvent Mapping

        private void NotifyEventMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<NotifyEvent>().ToTable(@"NotifyEvents", @"dbo");
            modelBuilder.Entity<NotifyEvent>().Property<long>(x => x.NotifyEventId).HasColumnName(@"NotifyEventId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<NotifyEvent>().Property<string>(x => x.NotifyEventName).HasColumnName(@"NotifyEventName").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<NotifyEvent>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<NotifyEvent>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<NotifyEvent>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<NotifyEvent>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<NotifyEvent>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<NotifyEvent>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<NotifyEvent>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<NotifyEvent>().HasKey(@"NotifyEventId");
        }
	
        partial void CustomizeNotifyEventMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region NotifyReceiver Mapping

        private void NotifyReceiverMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<NotifyReceiver>().ToTable(@"NotifyReceivers", @"dbo");
            modelBuilder.Entity<NotifyReceiver>().Property<long>(x => x.NotifyReceiverId).HasColumnName(@"NotifyReceiverId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<NotifyReceiver>().Property<string>(x => x.NotifyReceiverName).HasColumnName(@"NotifyReceiverName").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<NotifyReceiver>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<NotifyReceiver>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<NotifyReceiver>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<NotifyReceiver>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<NotifyReceiver>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<NotifyReceiver>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<NotifyReceiver>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<NotifyReceiver>().HasKey(@"NotifyReceiverId");
        }
	
        partial void CustomizeNotifyReceiverMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region Notify Mapping

        private void NotifyMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Notify>().ToTable(@"Notifys", @"dbo");
            modelBuilder.Entity<Notify>().Property<long>(x => x.NotifyId).HasColumnName(@"NotifyId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<Notify>().Property<System.Nullable<long>>(x => x.NotifyEventId).HasColumnName(@"NotifyEventId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Notify>().Property<System.Nullable<long>>(x => x.NotifyReceiverId).HasColumnName(@"NotifyReceiverId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Notify>().Property<string>(x => x.NotifyName).HasColumnName(@"NotifyName").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<Notify>().Property<string>(x => x.NotifyBody).HasColumnName(@"NotifyBody").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<Notify>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Notify>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Notify>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Notify>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Notify>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Notify>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Notify>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Notify>().HasKey(@"NotifyId");
        }
	
        partial void CustomizeNotifyMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region OrganizationAddressInfo Mapping

        private void OrganizationAddressInfoMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<OrganizationAddressInfo>().ToTable(@"OrganizationAddressInfos", @"dbo");
            modelBuilder.Entity<OrganizationAddressInfo>().Property<long>(x => x.OrganizationAddressId).HasColumnName(@"OrganizationAddressId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<OrganizationAddressInfo>().Property<System.Nullable<long>>(x => x.AddressId).HasColumnName(@"AddressId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<OrganizationAddressInfo>().Property<System.Nullable<long>>(x => x.OrganizationId).HasColumnName(@"OrganizationId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<OrganizationAddressInfo>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever().HasDefaultValueSql(@"1");
            modelBuilder.Entity<OrganizationAddressInfo>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<OrganizationAddressInfo>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<OrganizationAddressInfo>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<OrganizationAddressInfo>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<OrganizationAddressInfo>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<OrganizationAddressInfo>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<OrganizationAddressInfo>().HasKey(@"OrganizationAddressId");
        }
	
        partial void CustomizeOrganizationAddressInfoMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region Organization Mapping

        private void OrganizationMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Organization>().ToTable(@"Organizations", @"dbo");
            modelBuilder.Entity<Organization>().Property<long>(x => x.OrganizationId).HasColumnName(@"OrganizationId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<Organization>().Property<string>(x => x.OrganizationCode).HasColumnName(@"OrganizationCode").HasColumnType(@"varchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Organization>().Property<string>(x => x.OrganizationName).HasColumnName(@"OrganizationName").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<Organization>().Property<System.Nullable<long>>(x => x.OrganizationTypeId).HasColumnName(@"OrganizationTypeId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Organization>().Property<string>(x => x.TelephoneNumber).HasColumnName(@"TelephoneNumber").HasColumnType(@"nvarchar(100)").ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<Organization>().Property<string>(x => x.FacsimileNumber).HasColumnName(@"FacsimileNumber").HasColumnType(@"nvarchar(100)").ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<Organization>().Property<string>(x => x.AccountEmail).HasColumnName(@"AccountEmail").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<Organization>().Property<string>(x => x.Description).HasColumnName(@"Description").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<Organization>().Property<string>(x => x.FinanceEmail).HasColumnName(@"FinanceEmail").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<Organization>().Property<System.Nullable<long>>(x => x.UserRegisterId).HasColumnName(@"UserRegisterId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Organization>().Property<string>(x => x.Logo).HasColumnName(@"Logo").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<Organization>().Property<System.Nullable<long>>(x => x.LanguageId).HasColumnName(@"LanguageId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Organization>().Property<System.Nullable<long>>(x => x.TimeZoneId).HasColumnName(@"TimeZoneId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Organization>().Property<string>(x => x.DateFormat).HasColumnName(@"DateFormat").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Organization>().Property<System.Nullable<long>>(x => x.CurrencyId).HasColumnName(@"CurrencyId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Organization>().Property<string>(x => x.InternalAnnounce).HasColumnName(@"InternalAnnounce").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<Organization>().Property<string>(x => x.ExternalAnnounce).HasColumnName(@"ExternalAnnounce").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<Organization>().Property<System.Nullable<bool>>(x => x.IsSameAddress).HasColumnName(@"IsSameAddress").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<Organization>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Organization>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Organization>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Organization>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Organization>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Organization>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Organization>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Organization>().Property<string>(x => x.Favicon).HasColumnName(@"Favicon").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<Organization>().Property<System.Nullable<bool>>(x => x.IsDownLoadMoA).HasColumnName(@"IsDownLoadMoA").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<Organization>().HasKey(@"OrganizationId");
        }
	
        partial void CustomizeOrganizationMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region OrganizationType Mapping

        private void OrganizationTypeMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<OrganizationType>().ToTable(@"OrganizationTypes", @"dbo");
            modelBuilder.Entity<OrganizationType>().Property<long>(x => x.OrganizationTypeId).HasColumnName(@"OrganizationTypeId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<OrganizationType>().Property<System.Nullable<int>>(x => x.OrganizationTypeCode).HasColumnName(@"OrganizationTypeCode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<OrganizationType>().Property<string>(x => x.OrganizationTypeName).HasColumnName(@"OrganizationTypeName").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<OrganizationType>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<OrganizationType>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<OrganizationType>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<OrganizationType>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<OrganizationType>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<OrganizationType>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<OrganizationType>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<OrganizationType>().HasKey(@"OrganizationTypeId");
        }
	
        partial void CustomizeOrganizationTypeMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region OrganizationUser Mapping

        private void OrganizationUserMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<OrganizationUser>().ToTable(@"OrganizationUsers", @"dbo");
            modelBuilder.Entity<OrganizationUser>().Property<long>(x => x.OrganizationUserId).HasColumnName(@"OrganizationUserId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<OrganizationUser>().Property<System.Nullable<long>>(x => x.UserId).HasColumnName(@"UserId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<OrganizationUser>().Property<System.Nullable<long>>(x => x.OrganizationId).HasColumnName(@"OrganizationId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<OrganizationUser>().Property<System.Nullable<int>>(x => x.Status).HasColumnName(@"Status").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<OrganizationUser>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<OrganizationUser>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<OrganizationUser>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<OrganizationUser>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<OrganizationUser>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<OrganizationUser>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<OrganizationUser>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<OrganizationUser>().HasKey(@"OrganizationUserId");
        }
	
        partial void CustomizeOrganizationUserMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region Permission Mapping

        private void PermissionMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Permission>().ToTable(@"Permissions", @"dbo");
            modelBuilder.Entity<Permission>().Property<long>(x => x.PermissionId).HasColumnName(@"PermissionId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<Permission>().Property<string>(x => x.Area).HasColumnName(@"Area").HasColumnType(@"nvarchar(max)").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Permission>().Property<string>(x => x.Description).HasColumnName(@"Description").HasColumnType(@"nvarchar(max)").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Permission>().Property<string>(x => x.Controller).HasColumnName(@"Controller").HasColumnType(@"nvarchar(max)").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Permission>().Property<string>(x => x.Action).HasColumnName(@"Action").HasColumnType(@"nvarchar(max)").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Permission>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Permission>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Permission>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Permission>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Permission>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Permission>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Permission>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Permission>().HasKey(@"PermissionId");
        }
	
        partial void CustomizePermissionMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region PriorEducation Mapping

        private void PriorEducationMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<PriorEducation>().ToTable(@"PriorEducations", @"dbo");
            modelBuilder.Entity<PriorEducation>().Property<long>(x => x.PriorEducationId).HasColumnName(@"PriorEducationId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<PriorEducation>().Property<string>(x => x.PriorEducationalCode).HasColumnName(@"PriorEducationalCode").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<PriorEducation>().Property<string>(x => x.PriorEducationalName).HasColumnName(@"PriorEducationalName").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<PriorEducation>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<PriorEducation>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<PriorEducation>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<PriorEducation>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<PriorEducation>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<PriorEducation>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<PriorEducation>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<PriorEducation>().HasKey(@"PriorEducationId");
        }
	
        partial void CustomizePriorEducationMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region ProductFileNote Mapping

        private void ProductFileNoteMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ProductFileNote>().ToTable(@"ProductFileNotes", @"dbo");
            modelBuilder.Entity<ProductFileNote>().Property<long>(x => x.ProductFileNoteId).HasColumnName(@"ProductFileNoteId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<ProductFileNote>().Property<System.Nullable<long>>(x => x.ProductFileId).HasColumnName(@"ProductFileId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<ProductFileNote>().Property<string>(x => x.Message).HasColumnName(@"Message").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<ProductFileNote>().Property<System.Nullable<int>>(x => x.NotityType).HasColumnName(@"NotityType").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<ProductFileNote>().Property<System.Nullable<bool>>(x => x.IsNotify).HasColumnName(@"IsNotify").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<ProductFileNote>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<ProductFileNote>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<ProductFileNote>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<ProductFileNote>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<ProductFileNote>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<ProductFileNote>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<ProductFileNote>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<ProductFileNote>().HasKey(@"ProductFileNoteId");
        }
	
        partial void CustomizeProductFileNoteMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region ProductFile Mapping

        private void ProductFileMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ProductFile>().ToTable(@"ProductFiles", @"dbo");
            modelBuilder.Entity<ProductFile>().Property<long>(x => x.ProductFileId).HasColumnName(@"ProductFileId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<ProductFile>().Property<string>(x => x.FileName).HasColumnName(@"FileName").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<ProductFile>().Property<System.Nullable<long>>(x => x.RtoId).HasColumnName(@"RtoId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<ProductFile>().Property<System.Nullable<long>>(x => x.OrganizationId).HasColumnName(@"OrganizationId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<ProductFile>().Property<System.Nullable<int>>(x => x.FileType).HasColumnName(@"FileType").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<ProductFile>().Property<System.Nullable<int>>(x => x.Status).HasColumnName(@"Status").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<ProductFile>().Property<System.Nullable<int>>(x => x.EnrollYear).HasColumnName(@"EnrollYear").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<ProductFile>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<ProductFile>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<ProductFile>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<ProductFile>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<ProductFile>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<ProductFile>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<ProductFile>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<ProductFile>().Property<System.Nullable<long>>(x => x.FileId).HasColumnName(@"FileId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<ProductFile>().HasKey(@"ProductFileId");
        }
	
        partial void CustomizeProductFileMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region QualificationGroupFilter Mapping

        private void QualificationGroupFilterMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<QualificationGroupFilter>().ToTable(@"QualificationGroupFilters", @"dbo");
            modelBuilder.Entity<QualificationGroupFilter>().Property<long>(x => x.QualificationGroupFilterId).HasColumnName(@"QualificationGroupFilterId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<QualificationGroupFilter>().Property<System.Nullable<long>>(x => x.QualificationGroupId).HasColumnName(@"QualificationGroupId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroupFilter>().Property<string>(x => x.FilterType).HasColumnName(@"FilterType").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<QualificationGroupFilter>().Property<System.Nullable<int>>(x => x.FilterValue).HasColumnName(@"FilterValue").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroupFilter>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroupFilter>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroupFilter>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroupFilter>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroupFilter>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroupFilter>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroupFilter>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroupFilter>().HasKey(@"QualificationGroupFilterId");
        }
	
        partial void CustomizeQualificationGroupFilterMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region QualificationGroupRule Mapping

        private void QualificationGroupRuleMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<QualificationGroupRule>().ToTable(@"QualificationGroupRules", @"dbo");
            modelBuilder.Entity<QualificationGroupRule>().Property<long>(x => x.QualificationGroupRuleId).HasColumnName(@"QualificationGroupRuleId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<QualificationGroupRule>().Property<System.Nullable<long>>(x => x.QualificationGroupId).HasColumnName(@"QualificationGroupId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroupRule>().Property<string>(x => x.RuleType).HasColumnName(@"RuleType").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<QualificationGroupRule>().Property<int>(x => x.RuleValue).HasColumnName(@"RuleValue").HasColumnType(@"int").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroupRule>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroupRule>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroupRule>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroupRule>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroupRule>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroupRule>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroupRule>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroupRule>().HasKey(@"QualificationGroupRuleId");
        }
	
        partial void CustomizeQualificationGroupRuleMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region QualificationGroup Mapping

        private void QualificationGroupMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<QualificationGroup>().ToTable(@"QualificationGroups", @"dbo");
            modelBuilder.Entity<QualificationGroup>().Property<long>(x => x.QualificationGroupId).HasColumnName(@"QualificationGroupId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<QualificationGroup>().Property<string>(x => x.QualificationGroupName).HasColumnName(@"QualificationGroupName").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<QualificationGroup>().Property<System.Nullable<long>>(x => x.QualificationGroupSetId).HasColumnName(@"QualificationGroupSetId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroup>().Property<System.Nullable<bool>>(x => x.IsIndividual).HasColumnName(@"IsIndividual").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroup>().Property<System.Nullable<long>>(x => x.QualificationId).HasColumnName(@"QualificationId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroup>().Property<System.Nullable<bool>>(x => x.IsPredetermined).HasColumnName(@"IsPredetermined").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroup>().Property<System.Nullable<bool>>(x => x.IsRestricted).HasColumnName(@"IsRestricted").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroup>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroup>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroup>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroup>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroup>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroup>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroup>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroup>().HasKey(@"QualificationGroupId");
        }
	
        partial void CustomizeQualificationGroupMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region QualificationGroupSetRule Mapping

        private void QualificationGroupSetRuleMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<QualificationGroupSetRule>().ToTable(@"QualificationGroupSetRules", @"dbo");
            modelBuilder.Entity<QualificationGroupSetRule>().Property<long>(x => x.QualificationGroupSetRuleId).HasColumnName(@"QualificationGroupSetRuleId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<QualificationGroupSetRule>().Property<System.Nullable<long>>(x => x.QualificationGroupSetId).HasColumnName(@"QualificationGroupSetId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroupSetRule>().Property<string>(x => x.RuleType).HasColumnName(@"RuleType").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<QualificationGroupSetRule>().Property<int>(x => x.RuleValue).HasColumnName(@"RuleValue").HasColumnType(@"int").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroupSetRule>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroupSetRule>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroupSetRule>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroupSetRule>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroupSetRule>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroupSetRule>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroupSetRule>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroupSetRule>().Property<string>(x => x.RuleFor).HasColumnName(@"RuleFor").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<QualificationGroupSetRule>().HasKey(@"QualificationGroupSetRuleId");
        }
	
        partial void CustomizeQualificationGroupSetRuleMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region QualificationGroupSet Mapping

        private void QualificationGroupSetMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<QualificationGroupSet>().ToTable(@"QualificationGroupSets", @"dbo");
            modelBuilder.Entity<QualificationGroupSet>().Property<long>(x => x.QualificationGroupSetId).HasColumnName(@"QualificationGroupSetId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<QualificationGroupSet>().Property<string>(x => x.QualificationGroupSetName).HasColumnName(@"QualificationGroupSetName").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<QualificationGroupSet>().Property<System.Nullable<long>>(x => x.QualificationId).HasColumnName(@"QualificationId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroupSet>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroupSet>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroupSet>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroupSet>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroupSet>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroupSet>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroupSet>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationGroupSet>().HasKey(@"QualificationGroupSetId");
        }
	
        partial void CustomizeQualificationGroupSetMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region QualificationMaster Mapping

        private void QualificationMasterMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<QualificationMaster>().ToTable(@"QualificationMasters", @"dbo");
            modelBuilder.Entity<QualificationMaster>().Property<long>(x => x.QualificationId).HasColumnName(@"QualificationId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<QualificationMaster>().Property<string>(x => x.QualificationCode).HasColumnName(@"QualificationCode").HasColumnType(@"nvarchar(100)").ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<QualificationMaster>().Property<string>(x => x.QualificationName).HasColumnName(@"QualificationName").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<QualificationMaster>().Property<string>(x => x.Description).HasColumnName(@"Description").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<QualificationMaster>().Property<string>(x => x.PromoVideo).HasColumnName(@"PromoVideo").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<QualificationMaster>().Property<string>(x => x.PromoFile).HasColumnName(@"PromoFile").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<QualificationMaster>().Property<System.Nullable<int>>(x => x.DeliveryOptionId).HasColumnName(@"DeliveryOptionId").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<QualificationMaster>().Property<System.Nullable<int>>(x => x.TrainingArrangement).HasColumnName(@"TrainingArrangement").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<QualificationMaster>().Property<System.Nullable<int>>(x => x.TimeLimit).HasColumnName(@"TimeLimit").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<QualificationMaster>().Property<System.Nullable<long>>(x => x.CertificateId).HasColumnName(@"CertificateId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationMaster>().Property<System.Nullable<int>>(x => x.CertificateDuration).HasColumnName(@"CertificateDuration").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<QualificationMaster>().Property<System.Nullable<bool>>(x => x.CanReExpired).HasColumnName(@"CanReExpired").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<QualificationMaster>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<QualificationMaster>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationMaster>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationMaster>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationMaster>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationMaster>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationMaster>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationMaster>().HasKey(@"QualificationId");
        }
	
        partial void CustomizeQualificationMasterMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region QualificationOrg Mapping

        private void QualificationOrgMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<QualificationOrg>().ToTable(@"QualificationOrgs", @"dbo");
            modelBuilder.Entity<QualificationOrg>().Property<long>(x => x.QualificationOrgId).HasColumnName(@"QualificationOrgId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<QualificationOrg>().Property<string>(x => x.QualificationOrgName).HasColumnName(@"QualificationOrgName").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<QualificationOrg>().Property<System.Nullable<long>>(x => x.OrganizationId).HasColumnName(@"OrganizationId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationOrg>().Property<System.Nullable<long>>(x => x.QualificationTranProductId).HasColumnName(@"QualificationTranProductId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationOrg>().Property<System.Nullable<long>>(x => x.QualificationId).HasColumnName(@"QualificationId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationOrg>().Property<System.Nullable<int>>(x => x.Status).HasColumnName(@"Status").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<QualificationOrg>().Property<System.Nullable<System.DateTime>>(x => x.PublishDate).HasColumnName(@"PublishDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationOrg>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<QualificationOrg>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationOrg>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationOrg>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationOrg>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationOrg>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationOrg>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationOrg>().HasKey(@"QualificationOrgId");
            modelBuilder.Entity<QualificationOrg>().HasIndex(@"QualificationTranProductId").IsUnique(true);
        }
	
        partial void CustomizeQualificationOrgMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region QualificationOrgUnit Mapping

        private void QualificationOrgUnitMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<QualificationOrgUnit>().ToTable(@"QualificationOrgUnits", @"dbo");
            modelBuilder.Entity<QualificationOrgUnit>().Property<long>(x => x.QualificationOrgUnitId).HasColumnName(@"QualificationOrgUnitId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<QualificationOrgUnit>().Property<System.Nullable<long>>(x => x.UnitId).HasColumnName(@"UnitId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationOrgUnit>().Property<System.Nullable<long>>(x => x.QualificationOrgId).HasColumnName(@"QualificationOrgId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationOrgUnit>().Property<System.Nullable<long>>(x => x.QualificationGroupId).HasColumnName(@"QualificationGroupId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationOrgUnit>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<QualificationOrgUnit>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationOrgUnit>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationOrgUnit>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationOrgUnit>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationOrgUnit>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationOrgUnit>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationOrgUnit>().HasKey(@"QualificationOrgUnitId");
        }
	
        partial void CustomizeQualificationOrgUnitMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region Qualification Mapping

        private void QualificationMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Qualification>().ToTable(@"Qualifications", @"dbo");
            modelBuilder.Entity<Qualification>().Property<long>(x => x.QualificationId).HasColumnName(@"QualificationId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<Qualification>().Property<string>(x => x.QualificationCode).HasColumnName(@"QualificationCode").HasColumnType(@"nvarchar(100)").ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<Qualification>().Property<System.Nullable<int>>(x => x.QualificationLevel).HasColumnName(@"QualificationLevel").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Qualification>().Property<string>(x => x.QualificationName).HasColumnName(@"QualificationName").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<Qualification>().Property<System.Nullable<int>>(x => x.UsageRecommendation).HasColumnName(@"UsageRecommendation").HasColumnType(@"int").ValueGeneratedNever().HasDefaultValueSql(@"1");
            modelBuilder.Entity<Qualification>().Property<string>(x => x.PRI).HasColumnName(@"PRI").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<Qualification>().Property<string>(x => x.PLEI).HasColumnName(@"PLEI").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<Qualification>().Property<string>(x => x.PFEI).HasColumnName(@"PFEI").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<Qualification>().Property<string>(x => x.ANZSCO).HasColumnName(@"ANZSCO").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<Qualification>().Property<System.Nullable<decimal>>(x => x.Release).HasColumnName(@"Release").HasColumnType(@"decimal(18,2)").ValueGeneratedNever();
            modelBuilder.Entity<Qualification>().Property<System.Nullable<int>>(x => x.ReleaseStatus).HasColumnName(@"ReleaseStatus").HasColumnType(@"int").ValueGeneratedNever().HasDefaultValueSql(@"1");
            modelBuilder.Entity<Qualification>().Property<System.Nullable<bool>>(x => x.IsPublish).HasColumnName(@"IsPublish").HasColumnType(@"bit").ValueGeneratedNever().HasDefaultValueSql(@"0");
            modelBuilder.Entity<Qualification>().Property<System.Nullable<bool>>(x => x.IsQpr).HasColumnName(@"IsQpr").HasColumnType(@"bit").ValueGeneratedNever().HasDefaultValueSql(@"0");
            modelBuilder.Entity<Qualification>().Property<System.Nullable<bool>>(x => x.IsUnitBuilder).HasColumnName(@"IsUnitBuilder").HasColumnType(@"bit").ValueGeneratedNever().HasDefaultValueSql(@"0");
            modelBuilder.Entity<Qualification>().Property<string>(x => x.Description).HasColumnName(@"Description").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<Qualification>().Property<string>(x => x.PromoVideo).HasColumnName(@"PromoVideo").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<Qualification>().Property<string>(x => x.PromoFile).HasColumnName(@"PromoFile").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<Qualification>().Property<System.Nullable<int>>(x => x.DeliveryOptionId).HasColumnName(@"DeliveryOptionId").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Qualification>().Property<System.Nullable<int>>(x => x.TrainingArrangement).HasColumnName(@"TrainingArrangement").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Qualification>().Property<System.Nullable<int>>(x => x.TimeLimit).HasColumnName(@"TimeLimit").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Qualification>().Property<System.Nullable<long>>(x => x.CertificateId).HasColumnName(@"CertificateId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Qualification>().Property<System.Nullable<int>>(x => x.CertificateDuration).HasColumnName(@"CertificateDuration").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Qualification>().Property<System.Nullable<bool>>(x => x.CanReExpired).HasColumnName(@"CanReExpired").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<Qualification>().Property<System.Nullable<System.DateTime>>(x => x.PublishDate).HasColumnName(@"PublishDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Qualification>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Qualification>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Qualification>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Qualification>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Qualification>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Qualification>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Qualification>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Qualification>().Property<System.Nullable<int>>(x => x.QualificationType).HasColumnName(@"QualificationType").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Qualification>().Property<System.Nullable<System.DateTime>>(x => x.ReleaseDate).HasColumnName(@"ReleaseDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Qualification>().Property<System.Nullable<int>>(x => x.NoCoreUnit).HasColumnName(@"NoCoreUnit").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Qualification>().Property<System.Nullable<int>>(x => x.NoElectiveUnit).HasColumnName(@"NoElectiveUnit").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Qualification>().Property<string>(x => x.TgaUrl).HasColumnName(@"TgaUrl").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<Qualification>().HasKey(@"QualificationId");
        }
	
        partial void CustomizeQualificationMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region QualificationScope Mapping

        private void QualificationScopeMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<QualificationScope>().ToTable(@"QualificationScopes", @"dbo");
            modelBuilder.Entity<QualificationScope>().Property<long>(x => x.QualificationScopeId).HasColumnName(@"QualificationScopeId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<QualificationScope>().Property<System.Nullable<long>>(x => x.QualificationId).HasColumnName(@"QualificationId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationScope>().Property<string>(x => x.QualificationCode).HasColumnName(@"QualificationCode").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<QualificationScope>().Property<System.Nullable<long>>(x => x.RtoId).HasColumnName(@"RtoId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationScope>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<QualificationScope>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationScope>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationScope>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationScope>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationScope>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationScope>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationScope>().HasKey(@"QualificationScopeId");
        }
	
        partial void CustomizeQualificationScopeMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region QualificationTranProduct Mapping

        private void QualificationTranProductMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<QualificationTranProduct>().ToTable(@"QualificationTranProducts", @"dbo");
            modelBuilder.Entity<QualificationTranProduct>().Property<long>(x => x.QualificationTranProductId).HasColumnName(@"QualificationTranProductId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<QualificationTranProduct>().Property<System.Nullable<long>>(x => x.QualificationTranId).HasColumnName(@"QualificationTranId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationTranProduct>().Property<System.Nullable<long>>(x => x.ProductFileId).HasColumnName(@"ProductFileId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationTranProduct>().Property<System.Nullable<long>>(x => x.QualificationId).HasColumnName(@"QualificationId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationTranProduct>().Property<System.Nullable<long>>(x => x.OrganizationId).HasColumnName(@"OrganizationId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationTranProduct>().Property<System.Nullable<long>>(x => x.RtoId).HasColumnName(@"RtoId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationTranProduct>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<QualificationTranProduct>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationTranProduct>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationTranProduct>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationTranProduct>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationTranProduct>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationTranProduct>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationTranProduct>().Property<System.Nullable<int>>(x => x.NoOfStream).HasColumnName(@"NoOfStream").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<QualificationTranProduct>().Property<System.Nullable<decimal>>(x => x.UnitPrice).HasColumnName(@"UnitPrice").HasColumnType(@"decimal(18,2)").ValueGeneratedNever();
            modelBuilder.Entity<QualificationTranProduct>().HasKey(@"QualificationTranProductId");
        }
	
        partial void CustomizeQualificationTranProductMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region QualificationTran Mapping

        private void QualificationTranMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<QualificationTran>().ToTable(@"QualificationTrans", @"dbo");
            modelBuilder.Entity<QualificationTran>().Property<long>(x => x.QualificationTranId).HasColumnName(@"QualificationTranId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<QualificationTran>().Property<System.Nullable<long>>(x => x.QualificationId).HasColumnName(@"QualificationId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationTran>().Property<System.Nullable<long>>(x => x.QualificationScopeId).HasColumnName(@"QualificationScopeId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationTran>().Property<string>(x => x.QualificationCode).HasColumnName(@"QualificationCode").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<QualificationTran>().Property<string>(x => x.QualificationName).HasColumnName(@"QualificationName").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<QualificationTran>().Property<string>(x => x.Description).HasColumnName(@"Description").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<QualificationTran>().Property<string>(x => x.Tag).HasColumnName(@"Tag").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<QualificationTran>().Property<string>(x => x.PromoVideo).HasColumnName(@"PromoVideo").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<QualificationTran>().Property<string>(x => x.PromoFile).HasColumnName(@"PromoFile").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<QualificationTran>().Property<string>(x => x.Logo).HasColumnName(@"Logo").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<QualificationTran>().Property<System.Nullable<int>>(x => x.DeliveryId).HasColumnName(@"DeliveryId").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<QualificationTran>().Property<System.Nullable<bool>>(x => x.IsFullTraining).HasColumnName(@"IsFullTraining").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<QualificationTran>().Property<System.Nullable<int>>(x => x.TimeLimit).HasColumnName(@"TimeLimit").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<QualificationTran>().Property<System.Nullable<int>>(x => x.Status).HasColumnName(@"Status").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<QualificationTran>().Property<System.Nullable<int>>(x => x.Year).HasColumnName(@"Year").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<QualificationTran>().Property<System.Nullable<System.DateTime>>(x => x.PublishDate).HasColumnName(@"PublishDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationTran>().Property<string>(x => x.MaterialUrl).HasColumnName(@"MaterialUrl").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<QualificationTran>().Property<System.Nullable<long>>(x => x.Recognition).HasColumnName(@"Recognition").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationTran>().Property<System.Nullable<long>>(x => x.EducationLevel).HasColumnName(@"EducationLevel").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationTran>().Property<string>(x => x.ProgramField).HasColumnName(@"ProgramField").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<QualificationTran>().Property<string>(x => x.Anzsco).HasColumnName(@"Anzsco").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<QualificationTran>().Property<System.Nullable<long>>(x => x.VetFlag).HasColumnName(@"VetFlag").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationTran>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<QualificationTran>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationTran>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationTran>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationTran>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationTran>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationTran>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationTran>().HasKey(@"QualificationTranId");
        }
	
        partial void CustomizeQualificationTranMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region QualificationTranUnit Mapping

        private void QualificationTranUnitMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<QualificationTranUnit>().ToTable(@"QualificationTranUnits", @"dbo");
            modelBuilder.Entity<QualificationTranUnit>().Property<long>(x => x.QualificationTranUnitId).HasColumnName(@"QualificationTranUnitId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<QualificationTranUnit>().Property<System.Nullable<long>>(x => x.UnitId).HasColumnName(@"UnitId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationTranUnit>().Property<System.Nullable<long>>(x => x.QualificationTranId).HasColumnName(@"QualificationTranId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationTranUnit>().Property<System.Nullable<long>>(x => x.QualificationGroupId).HasColumnName(@"QualificationGroupId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationTranUnit>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<QualificationTranUnit>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationTranUnit>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationTranUnit>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationTranUnit>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationTranUnit>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationTranUnit>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationTranUnit>().HasKey(@"QualificationTranUnitId");
        }
	
        partial void CustomizeQualificationTranUnitMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region QualificationUnitMaster Mapping

        private void QualificationUnitMasterMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<QualificationUnitMaster>().ToTable(@"QualificationUnitMasters", @"dbo");
            modelBuilder.Entity<QualificationUnitMaster>().Property<long>(x => x.QualificationUnitMasterId).HasColumnName(@"QualificationUnitMasterId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<QualificationUnitMaster>().Property<System.Nullable<long>>(x => x.UnitMasterId).HasColumnName(@"UnitMasterId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationUnitMaster>().Property<long>(x => x.QualificationId).HasColumnName(@"QualificationId").HasColumnType(@"bigint").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<QualificationUnitMaster>().Property<int>(x => x.EssentialId).HasColumnName(@"EssentialId").HasColumnType(@"int").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<QualificationUnitMaster>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<QualificationUnitMaster>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationUnitMaster>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationUnitMaster>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationUnitMaster>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationUnitMaster>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationUnitMaster>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationUnitMaster>().HasKey(@"QualificationUnitMasterId");
        }
	
        partial void CustomizeQualificationUnitMasterMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region QualificationUnit Mapping

        private void QualificationUnitMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<QualificationUnit>().ToTable(@"QualificationUnits", @"dbo");
            modelBuilder.Entity<QualificationUnit>().Property<long>(x => x.QualificationUnitId).HasColumnName(@"QualificationUnitId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<QualificationUnit>().Property<System.Nullable<long>>(x => x.UnitMasterId).HasColumnName(@"UnitMasterId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationUnit>().Property<System.Nullable<long>>(x => x.QualificationId).HasColumnName(@"QualificationId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationUnit>().Property<System.Nullable<long>>(x => x.QualificationGroupId).HasColumnName(@"QualificationGroupId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationUnit>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<QualificationUnit>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationUnit>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationUnit>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationUnit>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationUnit>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QualificationUnit>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QualificationUnit>().HasKey(@"QualificationUnitId");
        }
	
        partial void CustomizeQualificationUnitMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region QuestionFillBlankOption Mapping

        private void QuestionFillBlankOptionMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<QuestionFillBlankOption>().ToTable(@"QuestionFillBlankOptions", @"dbo");
            modelBuilder.Entity<QuestionFillBlankOption>().Property<long>(x => x.QuestionFillBlankOptionId).HasColumnName(@"QuestionFillBlankOptionId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<QuestionFillBlankOption>().Property<System.Nullable<long>>(x => x.QuestionFillBlankId).HasColumnName(@"QuestionFillBlankId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QuestionFillBlankOption>().Property<string>(x => x.QuestionFillBlankOptionText).HasColumnName(@"QuestionFillBlankOptionText").HasColumnType(@"nvarchar(1000)").ValueGeneratedNever().HasMaxLength(1000);
            modelBuilder.Entity<QuestionFillBlankOption>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<QuestionFillBlankOption>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QuestionFillBlankOption>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QuestionFillBlankOption>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QuestionFillBlankOption>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QuestionFillBlankOption>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QuestionFillBlankOption>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QuestionFillBlankOption>().HasKey(@"QuestionFillBlankOptionId");
        }
	
        partial void CustomizeQuestionFillBlankOptionMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region QuestionFillBlank Mapping

        private void QuestionFillBlankMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<QuestionFillBlank>().ToTable(@"QuestionFillBlanks", @"dbo");
            modelBuilder.Entity<QuestionFillBlank>().Property<long>(x => x.QuestionFillBlankId).HasColumnName(@"QuestionFillBlankId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<QuestionFillBlank>().Property<System.Nullable<long>>(x => x.QuestionId).HasColumnName(@"QuestionId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QuestionFillBlank>().Property<string>(x => x.QuestionAnswerText).HasColumnName(@"QuestionAnswerText").HasColumnType(@"nvarchar(1000)").ValueGeneratedNever().HasMaxLength(1000);
            modelBuilder.Entity<QuestionFillBlank>().Property<System.Nullable<int>>(x => x.QuestionAnswerIndex).HasColumnName(@"QuestionAnswerIndex").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<QuestionFillBlank>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<QuestionFillBlank>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QuestionFillBlank>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QuestionFillBlank>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QuestionFillBlank>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QuestionFillBlank>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QuestionFillBlank>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QuestionFillBlank>().HasKey(@"QuestionFillBlankId");
        }
	
        partial void CustomizeQuestionFillBlankMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region QuestionFreeText Mapping

        private void QuestionFreeTextMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<QuestionFreeText>().ToTable(@"QuestionFreeTexts", @"dbo");
            modelBuilder.Entity<QuestionFreeText>().Property<long>(x => x.QuestionFreeTextId).HasColumnName(@"QuestionFreeTextId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<QuestionFreeText>().Property<System.Nullable<long>>(x => x.QuestionId).HasColumnName(@"QuestionId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QuestionFreeText>().Property<System.Nullable<bool>>(x => x.IsContain).HasColumnName(@"IsContain").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<QuestionFreeText>().Property<string>(x => x.Words).HasColumnName(@"Words").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<QuestionFreeText>().Property<System.Nullable<int>>(x => x.Point).HasColumnName(@"Point").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<QuestionFreeText>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<QuestionFreeText>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QuestionFreeText>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QuestionFreeText>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QuestionFreeText>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QuestionFreeText>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QuestionFreeText>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QuestionFreeText>().HasKey(@"QuestionFreeTextId");
        }
	
        partial void CustomizeQuestionFreeTextMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region QuestionOption Mapping

        private void QuestionOptionMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<QuestionOption>().ToTable(@"QuestionOptions", @"dbo");
            modelBuilder.Entity<QuestionOption>().Property<long>(x => x.QuestionOptionId).HasColumnName(@"QuestionOptionId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<QuestionOption>().Property<System.Nullable<long>>(x => x.QuestionId).HasColumnName(@"QuestionId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QuestionOption>().Property<string>(x => x.Description).HasColumnName(@"Description").HasColumnType(@"nvarchar(1000)").ValueGeneratedNever().HasMaxLength(1000);
            modelBuilder.Entity<QuestionOption>().Property<string>(x => x.DescriptionMatch).HasColumnName(@"DescriptionMatch").HasColumnType(@"nvarchar(1000)").ValueGeneratedNever().HasMaxLength(1000);
            modelBuilder.Entity<QuestionOption>().Property<string>(x => x.Remark).HasColumnName(@"Remark").HasColumnType(@"nvarchar(1000)").ValueGeneratedNever().HasMaxLength(1000);
            modelBuilder.Entity<QuestionOption>().Property<string>(x => x.QuestionOptionImage).HasColumnName(@"QuestionOptionImage").HasColumnType(@"nvarchar(1000)").ValueGeneratedNever().HasMaxLength(1000);
            modelBuilder.Entity<QuestionOption>().Property<System.Nullable<bool>>(x => x.IsCorrectAnswer).HasColumnName(@"IsCorrectAnswer").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<QuestionOption>().Property<System.Nullable<int>>(x => x.Sequence).HasColumnName(@"Sequence").HasColumnType(@"int").ValueGeneratedNever().HasDefaultValueSql(@"0");
            modelBuilder.Entity<QuestionOption>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<QuestionOption>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QuestionOption>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QuestionOption>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QuestionOption>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QuestionOption>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QuestionOption>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QuestionOption>().Property<string>(x => x.QuestionOptionImageMatch).HasColumnName(@"QuestionOptionImageMatch").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<QuestionOption>().HasKey(@"QuestionOptionId");
        }
	
        partial void CustomizeQuestionOptionMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region Question Mapping

        private void QuestionMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Question>().ToTable(@"Questions", @"dbo");
            modelBuilder.Entity<Question>().Property<long>(x => x.QuestionId).HasColumnName(@"QuestionId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<Question>().Property<string>(x => x.QuestionName).HasColumnName(@"QuestionName").HasColumnType(@"nvarchar(max)").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Question>().Property<System.Nullable<long>>(x => x.QuestionTypeId).HasColumnName(@"QuestionTypeId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Question>().Property<long>(x => x.RtoId).HasColumnName(@"RtoId").HasColumnType(@"bigint").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Question>().Property<System.Nullable<int>>(x => x.Weight).HasColumnName(@"Weight").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Question>().Property<string>(x => x.Feedback).HasColumnName(@"Feedback").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<Question>().Property<System.Nullable<int>>(x => x.RandomSetCount).HasColumnName(@"RandomSetCount").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Question>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Question>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Question>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Question>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Question>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Question>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Question>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Question>().Property<System.Nullable<decimal>>(x => x.AccumulatedPoints).HasColumnName(@"AccumulatedPoints").HasColumnType(@"decimal(18)").ValueGeneratedNever();
            modelBuilder.Entity<Question>().HasKey(@"QuestionId");
        }
	
        partial void CustomizeQuestionMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region QuestionType Mapping

        private void QuestionTypeMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<QuestionType>().ToTable(@"QuestionTypes", @"dbo");
            modelBuilder.Entity<QuestionType>().Property<long>(x => x.QuestionTypeId).HasColumnName(@"QuestionTypeId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<QuestionType>().Property<string>(x => x.QuestionTypeName).HasColumnName(@"QuestionTypeName").HasColumnType(@"nvarchar(250)").IsRequired().ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<QuestionType>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<QuestionType>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QuestionType>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QuestionType>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QuestionType>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QuestionType>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<QuestionType>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<QuestionType>().HasKey(@"QuestionTypeId");
        }
	
        partial void CustomizeQuestionTypeMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region RandomizeQuestion Mapping

        private void RandomizeQuestionMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<RandomizeQuestion>().ToTable(@"RandomizeQuestions", @"dbo");
            modelBuilder.Entity<RandomizeQuestion>().Property<long>(x => x.RandomizeQuestionId).HasColumnName(@"RandomizeQuestionId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<RandomizeQuestion>().Property<long>(x => x.QuestionId).HasColumnName(@"QuestionId").HasColumnType(@"bigint").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<RandomizeQuestion>().Property<System.Nullable<long>>(x => x.RandomQuestionId).HasColumnName(@"RandomQuestionId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<RandomizeQuestion>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<RandomizeQuestion>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<RandomizeQuestion>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<RandomizeQuestion>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<RandomizeQuestion>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<RandomizeQuestion>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<RandomizeQuestion>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<RandomizeQuestion>().HasKey(@"RandomizeQuestionId");
        }
	
        partial void CustomizeRandomizeQuestionMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region Role Mapping

        private void RoleMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Role>().ToTable(@"Role", @"dbo");
            modelBuilder.Entity<Role>().Property<long>(x => x.Id).HasColumnName(@"Id").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<Role>().Property<string>(x => x.Name).HasColumnName(@"Name").HasColumnType(@"nvarchar(max)").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Role>().Property<string>(x => x.Description).HasColumnName(@"Description").HasColumnType(@"nvarchar(300)").ValueGeneratedNever().HasMaxLength(300);
            modelBuilder.Entity<Role>().Property<int>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Role>().Property<long>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Role>().Property<System.DateTime>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Role>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Role>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Role>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Role>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Role>().HasKey(@"Id");
        }
	
        partial void CustomizeRoleMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region RtoAddressInfo Mapping

        private void RtoAddressInfoMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<RtoAddressInfo>().ToTable(@"RtoAddressInfos", @"dbo");
            modelBuilder.Entity<RtoAddressInfo>().Property<long>(x => x.RtoAddressId).HasColumnName(@"RtoAddressId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<RtoAddressInfo>().Property<System.Nullable<long>>(x => x.AddressId).HasColumnName(@"AddressId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<RtoAddressInfo>().Property<System.Nullable<long>>(x => x.RtoId).HasColumnName(@"RtoId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<RtoAddressInfo>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<RtoAddressInfo>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<RtoAddressInfo>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<RtoAddressInfo>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<RtoAddressInfo>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<RtoAddressInfo>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<RtoAddressInfo>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<RtoAddressInfo>().HasKey(@"RtoAddressId");
        }
	
        partial void CustomizeRtoAddressInfoMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region RtoInfo Mapping

        private void RtoInfoMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<RtoInfo>().ToTable(@"RtoInfos", @"dbo");
            modelBuilder.Entity<RtoInfo>().Property<long>(x => x.RtoId).HasColumnName(@"RtoId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<RtoInfo>().Property<string>(x => x.RtoCode).HasColumnName(@"RtoCode").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<RtoInfo>().Property<string>(x => x.RtoName).HasColumnName(@"RtoName").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<RtoInfo>().Property<string>(x => x.RTODescription).HasColumnName(@"RTODescription").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<RtoInfo>().Property<string>(x => x.MainEmail).HasColumnName(@"MainEmail").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<RtoInfo>().Property<string>(x => x.AccountEmail).HasColumnName(@"AccountEmail").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<RtoInfo>().Property<string>(x => x.Logo).HasColumnName(@"Logo").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<RtoInfo>().Property<string>(x => x.Favicon).HasColumnName(@"Favicon").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<RtoInfo>().Property<System.Nullable<long>>(x => x.OrganizationTypeId).HasColumnName(@"OrganizationTypeId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<RtoInfo>().Property<string>(x => x.DeliverLocationId).HasColumnName(@"DeliverLocationId").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<RtoInfo>().Property<string>(x => x.DeliverLocationName).HasColumnName(@"DeliverLocationName").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<RtoInfo>().Property<string>(x => x.ContactName).HasColumnName(@"ContactName").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<RtoInfo>().Property<string>(x => x.TelephoneNumber).HasColumnName(@"TelephoneNumber").HasColumnType(@"nvarchar(100)").ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<RtoInfo>().Property<string>(x => x.FacsimileNumber).HasColumnName(@"FacsimileNumber").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<RtoInfo>().Property<string>(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<RtoInfo>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<RtoInfo>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<RtoInfo>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<RtoInfo>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<RtoInfo>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<RtoInfo>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<RtoInfo>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<RtoInfo>().Property<string>(x => x.Description).HasColumnName(@"Description").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<RtoInfo>().Property<string>(x => x.RtoAbn).HasColumnName(@"RtoAbn").HasColumnType(@"nvarchar(100)").ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<RtoInfo>().HasKey(@"RtoId");
        }
	
        partial void CustomizeRtoInfoMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region RtoOrganization Mapping

        private void RtoOrganizationMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<RtoOrganization>().ToTable(@"RtoOrganizations", @"dbo");
            modelBuilder.Entity<RtoOrganization>().Property<long>(x => x.RtoOrganizationId).HasColumnName(@"RtoOrganizationId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<RtoOrganization>().Property<System.Nullable<long>>(x => x.RtoId).HasColumnName(@"RtoId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<RtoOrganization>().Property<System.Nullable<long>>(x => x.OrganizationId).HasColumnName(@"OrganizationId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<RtoOrganization>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<RtoOrganization>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<RtoOrganization>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<RtoOrganization>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<RtoOrganization>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<RtoOrganization>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<RtoOrganization>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<RtoOrganization>().HasKey(@"RtoOrganizationId");
        }
	
        partial void CustomizeRtoOrganizationMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region RtoUser Mapping

        private void RtoUserMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<RtoUser>().ToTable(@"RtoUsers", @"dbo");
            modelBuilder.Entity<RtoUser>().Property<long>(x => x.RtoUserId).HasColumnName(@"RtoUserId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<RtoUser>().Property<System.Nullable<long>>(x => x.RtoId).HasColumnName(@"RtoId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<RtoUser>().Property<System.Nullable<long>>(x => x.UserId).HasColumnName(@"UserId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<RtoUser>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<RtoUser>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<RtoUser>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<RtoUser>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<RtoUser>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<RtoUser>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<RtoUser>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<RtoUser>().HasKey(@"RtoUserId");
        }
	
        partial void CustomizeRtoUserMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region Scorm Mapping

        private void ScormMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Scorm>().ToTable(@"Scorms", @"dbo");
            modelBuilder.Entity<Scorm>().Property<long>(x => x.ScormId).HasColumnName(@"ScormId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<Scorm>().Property<string>(x => x.ScormName).HasColumnName(@"ScormName").HasColumnType(@"nvarchar(250)").IsRequired().ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<Scorm>().Property<string>(x => x.FileName).HasColumnName(@"FileName").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<Scorm>().Property<string>(x => x.FilePath).HasColumnName(@"FilePath").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<Scorm>().Property<System.Nullable<int>>(x => x.Width).HasColumnName(@"Width").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Scorm>().Property<System.Nullable<int>>(x => x.Height).HasColumnName(@"Height").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Scorm>().Property<System.Nullable<int>>(x => x.ShowAsType).HasColumnName(@"ShowAsType").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Scorm>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Scorm>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Scorm>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Scorm>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Scorm>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Scorm>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Scorm>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Scorm>().HasKey(@"ScormId");
        }
	
        partial void CustomizeScormMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region Section Mapping

        private void SectionMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Section>().ToTable(@"Sections", @"dbo");
            modelBuilder.Entity<Section>().Property<long>(x => x.SectionId).HasColumnName(@"SectionId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<Section>().Property<string>(x => x.SectionName).HasColumnName(@"SectionName").HasColumnType(@"nvarchar(200)").IsRequired().ValueGeneratedNever().HasMaxLength(200);
            modelBuilder.Entity<Section>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Section>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Section>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Section>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Section>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Section>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Section>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Section>().HasKey(@"SectionId");
        }
	
        partial void CustomizeSectionMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region Setting Mapping

        private void SettingMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Setting>().ToTable(@"Settings", @"dbo");
            modelBuilder.Entity<Setting>().Property<long>(x => x.SettingId).HasColumnName(@"SettingId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<Setting>().Property<string>(x => x.SettingKey).HasColumnName(@"SettingKey").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Setting>().Property<string>(x => x.SettingValue).HasColumnName(@"SettingValue").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<Setting>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Setting>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Setting>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Setting>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Setting>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Setting>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Setting>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Setting>().Property<System.Nullable<int>>(x => x.SiteId).HasColumnName(@"SiteId").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Setting>().Property<System.Nullable<long>>(x => x.OrganizationId).HasColumnName(@"OrganizationId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Setting>().Property<System.Nullable<long>>(x => x.RtoId).HasColumnName(@"RtoId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Setting>().HasKey(@"SettingId");
        }
	
        partial void CustomizeSettingMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region StateInfo Mapping

        private void StateInfoMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<StateInfo>().ToTable(@"StateInfos", @"dbo");
            modelBuilder.Entity<StateInfo>().Property<long>(x => x.StateId).HasColumnName(@"StateId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<StateInfo>().Property<string>(x => x.StateName).HasColumnName(@"StateName").HasColumnType(@"varchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<StateInfo>().Property<System.Nullable<long>>(x => x.CountryId).HasColumnName(@"CountryId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<StateInfo>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<StateInfo>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<StateInfo>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<StateInfo>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<StateInfo>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<StateInfo>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<StateInfo>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<StateInfo>().HasKey(@"StateId");
        }
	
        partial void CustomizeStateInfoMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region StudentClassInfo Mapping

        private void StudentClassInfoMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<StudentClassInfo>().ToTable(@"StudentClassInfos", @"dbo");
            modelBuilder.Entity<StudentClassInfo>().Property<long>(x => x.StudentClassId).HasColumnName(@"StudentClassId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<StudentClassInfo>().Property<System.Nullable<long>>(x => x.UserId).HasColumnName(@"UserId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<StudentClassInfo>().Property<System.Nullable<long>>(x => x.ClassId).HasColumnName(@"ClassId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<StudentClassInfo>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<StudentClassInfo>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<StudentClassInfo>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<StudentClassInfo>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<StudentClassInfo>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<StudentClassInfo>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<StudentClassInfo>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<StudentClassInfo>().HasKey(@"StudentClassId");
        }
	
        partial void CustomizeStudentClassInfoMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region StudentNote Mapping

        private void StudentNoteMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<StudentNote>().ToTable(@"StudentNotes", @"dbo");
            modelBuilder.Entity<StudentNote>().Property<long>(x => x.StudentNoteId).HasColumnName(@"StudentNoteId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<StudentNote>().Property<System.Nullable<long>>(x => x.UserId).HasColumnName(@"UserId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<StudentNote>().Property<System.Nullable<long>>(x => x.UnitId).HasColumnName(@"UnitId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<StudentNote>().Property<string>(x => x.NoteTypeId).HasColumnName(@"NoteTypeId").HasColumnType(@"nchar(10)").ValueGeneratedNever().HasMaxLength(10);
            modelBuilder.Entity<StudentNote>().Property<string>(x => x.Status).HasColumnName(@"Status").HasColumnType(@"nchar(10)").ValueGeneratedNever().HasMaxLength(10);
            modelBuilder.Entity<StudentNote>().Property<string>(x => x.Message).HasColumnName(@"Message").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<StudentNote>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<StudentNote>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<StudentNote>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<StudentNote>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<StudentNote>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<StudentNote>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<StudentNote>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<StudentNote>().HasKey(@"StudentNoteId");
        }
	
        partial void CustomizeStudentNoteMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region TestQuestion Mapping

        private void TestQuestionMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<TestQuestion>().ToTable(@"TestQuestions", @"dbo");
            modelBuilder.Entity<TestQuestion>().Property<long>(x => x.TestQuestionId).HasColumnName(@"TestQuestionId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<TestQuestion>().Property<long>(x => x.QuestionId).HasColumnName(@"QuestionId").HasColumnType(@"bigint").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<TestQuestion>().Property<long>(x => x.TestId).HasColumnName(@"TestId").HasColumnType(@"bigint").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<TestQuestion>().Property<System.Nullable<int>>(x => x.Sequence).HasColumnName(@"Sequence").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<TestQuestion>().Property<System.Nullable<int>>(x => x.Status).HasColumnName(@"Status").HasColumnType(@"int").ValueGeneratedNever().HasDefaultValueSql(@"1");
            modelBuilder.Entity<TestQuestion>().Property<System.Nullable<int>>(x => x.QuestionWeight).HasColumnName(@"QuestionWeight").HasColumnType(@"int").ValueGeneratedNever().HasDefaultValueSql(@"0");
            modelBuilder.Entity<TestQuestion>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<TestQuestion>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<TestQuestion>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<TestQuestion>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<TestQuestion>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<TestQuestion>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<TestQuestion>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<TestQuestion>().HasKey(@"TestQuestionId");
        }
	
        partial void CustomizeTestQuestionMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region Test Mapping

        private void TestMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Test>().ToTable(@"Tests", @"dbo");
            modelBuilder.Entity<Test>().Property<long>(x => x.TestId).HasColumnName(@"TestId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<Test>().Property<string>(x => x.TestName).HasColumnName(@"TestName").HasColumnType(@"nvarchar(500)").IsRequired().ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<Test>().Property<System.Nullable<int>>(x => x.Duration).HasColumnName(@"Duration").HasColumnType(@"int").ValueGeneratedNever().HasDefaultValueSql(@"30");
            modelBuilder.Entity<Test>().Property<System.Nullable<decimal>>(x => x.MinPassPercentage).HasColumnName(@"MinPassPercentage").HasColumnType(@"decimal(18,2)").ValueGeneratedNever().HasDefaultValueSql(@"60");
            modelBuilder.Entity<Test>().Property<System.Nullable<bool>>(x => x.IsShuffleQuestion).HasColumnName(@"IsShuffleQuestion").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<Test>().Property<System.Nullable<bool>>(x => x.IsShufflePossibleAns).HasColumnName(@"IsShufflePossibleAns").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<Test>().Property<System.Nullable<bool>>(x => x.Repetition).HasColumnName(@"Repetition").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<Test>().Property<System.Nullable<bool>>(x => x.IsShowCorrectAns).HasColumnName(@"IsShowCorrectAns").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<Test>().Property<System.Nullable<int>>(x => x.ShowCorrectAnsType).HasColumnName(@"ShowCorrectAnsType").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Test>().Property<System.Nullable<bool>>(x => x.IsShowScore).HasColumnName(@"IsShowScore").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<Test>().Property<System.Nullable<bool>>(x => x.IsShowGivenAns).HasColumnName(@"IsShowGivenAns").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<Test>().Property<System.Nullable<bool>>(x => x.IsShowStatisticAfterCom).HasColumnName(@"IsShowStatisticAfterCom").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<Test>().Property<System.Nullable<bool>>(x => x.IsShowCorrectOrWrongIndicator).HasColumnName(@"IsShowCorrectOrWrongIndicator").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<Test>().Property<System.Nullable<bool>>(x => x.IsHideCorrectlyAnsweredQuestion).HasColumnName(@"IsHideCorrectlyAnsweredQuestion").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<Test>().Property<System.Nullable<bool>>(x => x.IsAllowMoveNextPrevQuestion).HasColumnName(@"IsAllowMoveNextPrevQuestion").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<Test>().Property<System.Nullable<bool>>(x => x.IsMustCorrectBeforeNextQuestion).HasColumnName(@"IsMustCorrectBeforeNextQuestion").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<Test>().Property<System.Nullable<bool>>(x => x.IsAbandonWhenNotPassExactly).HasColumnName(@"IsAbandonWhenNotPassExactly").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<Test>().Property<System.Nullable<bool>>(x => x.IsRequireSnapshot).HasColumnName(@"IsRequireSnapshot").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<Test>().Property<string>(x => x.Description).HasColumnName(@"Description").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<Test>().Property<string>(x => x.PassedMessage).HasColumnName(@"PassedMessage").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<Test>().Property<string>(x => x.NotPassedMessage).HasColumnName(@"NotPassedMessage").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<Test>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Test>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Test>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Test>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Test>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Test>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Test>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Test>().HasKey(@"TestId");
        }
	
        partial void CustomizeTestMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region TimeZone Mapping

        private void TimeZoneMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<TimeZone>().ToTable(@"TimeZones", @"dbo");
            modelBuilder.Entity<TimeZone>().Property<long>(x => x.TimeZoneId).HasColumnName(@"TimeZoneId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<TimeZone>().Property<string>(x => x.TimeZoneName).HasColumnName(@"TimeZoneName").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<TimeZone>().Property<System.Nullable<decimal>>(x => x.TimeZoneValue).HasColumnName(@"TimeZoneValue").HasColumnType(@"decimal(18)").ValueGeneratedNever();
            modelBuilder.Entity<TimeZone>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<TimeZone>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<TimeZone>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<TimeZone>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<TimeZone>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<TimeZone>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<TimeZone>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<TimeZone>().HasKey(@"TimeZoneId");
        }
	
        partial void CustomizeTimeZoneMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region TrainerClassInfo Mapping

        private void TrainerClassInfoMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<TrainerClassInfo>().ToTable(@"TrainerClassInfos", @"dbo");
            modelBuilder.Entity<TrainerClassInfo>().Property<long>(x => x.TrainerClassId).HasColumnName(@"TrainerClassId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<TrainerClassInfo>().Property<System.Nullable<long>>(x => x.ClassId).HasColumnName(@"ClassId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<TrainerClassInfo>().Property<System.Nullable<long>>(x => x.UserId).HasColumnName(@"UserId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<TrainerClassInfo>().Property<System.Nullable<bool>>(x => x.IsTrainer).HasColumnName(@"IsTrainer").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<TrainerClassInfo>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<TrainerClassInfo>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<TrainerClassInfo>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<TrainerClassInfo>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<TrainerClassInfo>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<TrainerClassInfo>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<TrainerClassInfo>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<TrainerClassInfo>().HasKey(@"TrainerClassId");
        }
	
        partial void CustomizeTrainerClassInfoMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region TrainingPackage Mapping

        private void TrainingPackageMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<TrainingPackage>().ToTable(@"TrainingPackages", @"dbo");
            modelBuilder.Entity<TrainingPackage>().Property<long>(x => x.TrainingPackageId).HasColumnName(@"TrainingPackageId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<TrainingPackage>().Property<string>(x => x.TrainingPackageCode).HasColumnName(@"TrainingPackageCode").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<TrainingPackage>().Property<string>(x => x.TrainingPackageName).HasColumnName(@"TrainingPackageName").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<TrainingPackage>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<TrainingPackage>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<TrainingPackage>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<TrainingPackage>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<TrainingPackage>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<TrainingPackage>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<TrainingPackage>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<TrainingPackage>().HasKey(@"TrainingPackageId");
        }
	
        partial void CustomizeTrainingPackageMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region TrainingQualification Mapping

        private void TrainingQualificationMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<TrainingQualification>().ToTable(@"TrainingQualifications", @"dbo");
            modelBuilder.Entity<TrainingQualification>().Property<long>(x => x.TrainingQualificationId).HasColumnName(@"TrainingQualificationId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<TrainingQualification>().Property<System.Nullable<long>>(x => x.TrainingPackageId).HasColumnName(@"TrainingPackageId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<TrainingQualification>().Property<System.Nullable<long>>(x => x.QualificationId).HasColumnName(@"QualificationId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<TrainingQualification>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<TrainingQualification>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<TrainingQualification>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<TrainingQualification>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<TrainingQualification>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<TrainingQualification>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<TrainingQualification>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<TrainingQualification>().HasKey(@"TrainingQualificationId");
        }
	
        partial void CustomizeTrainingQualificationMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region UnitAssignment Mapping

        private void UnitAssignmentMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UnitAssignment>().ToTable(@"UnitAssignments", @"dbo");
            modelBuilder.Entity<UnitAssignment>().Property<long>(x => x.UnitAssignmentId).HasColumnName(@"UnitAssignmentId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<UnitAssignment>().Property<long>(x => x.UnitId).HasColumnName(@"UnitId").HasColumnType(@"bigint").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UnitAssignment>().Property<long>(x => x.AssignmentId).HasColumnName(@"AssignmentId").HasColumnType(@"bigint").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UnitAssignment>().Property<System.Nullable<int>>(x => x.Sequence).HasColumnName(@"Sequence").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UnitAssignment>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UnitAssignment>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UnitAssignment>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UnitAssignment>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UnitAssignment>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UnitAssignment>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UnitAssignment>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UnitAssignment>().HasKey(@"UnitAssignmentId");
        }
	
        partial void CustomizeUnitAssignmentMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region UnitContent Mapping

        private void UnitContentMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UnitContent>().ToTable(@"UnitContents", @"dbo");
            modelBuilder.Entity<UnitContent>().Property<long>(x => x.UnitContentId).HasColumnName(@"UnitContentId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<UnitContent>().Property<long>(x => x.UnitId).HasColumnName(@"UnitId").HasColumnType(@"bigint").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UnitContent>().Property<long>(x => x.ContentId).HasColumnName(@"ContentId").HasColumnType(@"bigint").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UnitContent>().Property<System.Nullable<int>>(x => x.Sequence).HasColumnName(@"Sequence").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UnitContent>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UnitContent>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UnitContent>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UnitContent>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UnitContent>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UnitContent>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UnitContent>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UnitContent>().HasKey(@"UnitContentId");
        }
	
        partial void CustomizeUnitContentMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region UnitMaster Mapping

        private void UnitMasterMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UnitMaster>().ToTable(@"UnitMasters", @"dbo");
            modelBuilder.Entity<UnitMaster>().Property<long>(x => x.UnitMasterId).HasColumnName(@"UnitMasterId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<UnitMaster>().Property<string>(x => x.UnitName).HasColumnName(@"UnitName").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<UnitMaster>().Property<string>(x => x.UnitCode).HasColumnName(@"UnitCode").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<UnitMaster>().Property<string>(x => x.SFEI).HasColumnName(@"SFEI").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<UnitMaster>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UnitMaster>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UnitMaster>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UnitMaster>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UnitMaster>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UnitMaster>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UnitMaster>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UnitMaster>().Property<System.Nullable<int>>(x => x.UnitLevel).HasColumnName(@"UnitLevel").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UnitMaster>().HasKey(@"UnitMasterId");
        }
	
        partial void CustomizeUnitMasterMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region Unit Mapping

        private void UnitMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Unit>().ToTable(@"Units", @"dbo");
            modelBuilder.Entity<Unit>().Property<long>(x => x.UnitId).HasColumnName(@"UnitId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<Unit>().Property<System.Nullable<long>>(x => x.UnitMasterId).HasColumnName(@"UnitMasterId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Unit>().Property<string>(x => x.UnitCode).HasColumnName(@"UnitCode").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Unit>().Property<string>(x => x.UnitName).HasColumnName(@"UnitName").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<Unit>().Property<string>(x => x.Description).HasColumnName(@"Description").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<Unit>().Property<System.Nullable<int>>(x => x.DeliveryId).HasColumnName(@"DeliveryId").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Unit>().Property<System.Nullable<long>>(x => x.RtoId).HasColumnName(@"RtoId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Unit>().Property<System.Nullable<long>>(x => x.SubjectFlag).HasColumnName(@"SubjectFlag").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Unit>().Property<System.Nullable<long>>(x => x.SubjectFiled).HasColumnName(@"SubjectFiled").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Unit>().Property<string>(x => x.FieldEducation).HasColumnName(@"FieldEducation").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<Unit>().Property<System.Nullable<int>>(x => x.TimeLimit).HasColumnName(@"TimeLimit").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Unit>().Property<System.Nullable<long>>(x => x.VetFlag).HasColumnName(@"VetFlag").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Unit>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<Unit>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Unit>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Unit>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Unit>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Unit>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<Unit>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<Unit>().Property<System.Nullable<long>>(x => x.TrainerZipFileId).HasColumnName(@"TrainerZipFileId").HasColumnType(@"bigint").ValueGeneratedNever().HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Unit>().Property<System.Nullable<long>>(x => x.StudentZipFileId).HasColumnName(@"StudentZipFileId").HasColumnType(@"bigint").ValueGeneratedNever().HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Unit>().HasKey(@"UnitId");
        }
	
        partial void CustomizeUnitMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region UnitScorm Mapping

        private void UnitScormMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UnitScorm>().ToTable(@"UnitScorms", @"dbo");
            modelBuilder.Entity<UnitScorm>().Property<long>(x => x.UnitScormId).HasColumnName(@"UnitScormId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<UnitScorm>().Property<System.Nullable<long>>(x => x.UnitId).HasColumnName(@"UnitId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UnitScorm>().Property<System.Nullable<long>>(x => x.ScormId).HasColumnName(@"ScormId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UnitScorm>().Property<System.Nullable<int>>(x => x.Sequence).HasColumnName(@"Sequence").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UnitScorm>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UnitScorm>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UnitScorm>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UnitScorm>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UnitScorm>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UnitScorm>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UnitScorm>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UnitScorm>().HasKey(@"UnitScormId");
        }
	
        partial void CustomizeUnitScormMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region UnitSection Mapping

        private void UnitSectionMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UnitSection>().ToTable(@"UnitSections", @"dbo");
            modelBuilder.Entity<UnitSection>().Property<long>(x => x.UnitSectionId).HasColumnName(@"UnitSectionId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<UnitSection>().Property<System.Nullable<long>>(x => x.UnitId).HasColumnName(@"UnitId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UnitSection>().Property<System.Nullable<long>>(x => x.SectionId).HasColumnName(@"SectionId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UnitSection>().Property<System.Nullable<int>>(x => x.Sequence).HasColumnName(@"Sequence").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UnitSection>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UnitSection>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UnitSection>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UnitSection>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UnitSection>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UnitSection>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UnitSection>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UnitSection>().HasKey(@"UnitSectionId");
        }
	
        partial void CustomizeUnitSectionMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region UnitTest Mapping

        private void UnitTestMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UnitTest>().ToTable(@"UnitTests", @"dbo");
            modelBuilder.Entity<UnitTest>().Property<long>(x => x.UnitTestId).HasColumnName(@"UnitTestId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<UnitTest>().Property<long>(x => x.UnitId).HasColumnName(@"UnitId").HasColumnType(@"bigint").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UnitTest>().Property<long>(x => x.TestId).HasColumnName(@"TestId").HasColumnType(@"bigint").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UnitTest>().Property<System.Nullable<int>>(x => x.Sequence).HasColumnName(@"Sequence").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UnitTest>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UnitTest>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UnitTest>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UnitTest>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UnitTest>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UnitTest>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UnitTest>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UnitTest>().HasKey(@"UnitTestId");
        }
	
        partial void CustomizeUnitTestMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region UnitUploadFile Mapping

        private void UnitUploadFileMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UnitUploadFile>().ToTable(@"UnitUploadFiles", @"dbo");
            modelBuilder.Entity<UnitUploadFile>().Property<long>(x => x.UnitUploadFileId).HasColumnName(@"UnitUploadFileId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<UnitUploadFile>().Property<System.Nullable<long>>(x => x.UnitId).HasColumnName(@"UnitId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UnitUploadFile>().Property<System.Nullable<long>>(x => x.UploadFileId).HasColumnName(@"UploadFileId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UnitUploadFile>().Property<System.Nullable<int>>(x => x.Sequence).HasColumnName(@"Sequence").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UnitUploadFile>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UnitUploadFile>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UnitUploadFile>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UnitUploadFile>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UnitUploadFile>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UnitUploadFile>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UnitUploadFile>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UnitUploadFile>().HasKey(@"UnitUploadFileId");
        }
	
        partial void CustomizeUnitUploadFileMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region UploadFile Mapping

        private void UploadFileMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UploadFile>().ToTable(@"UploadFiles", @"dbo");
            modelBuilder.Entity<UploadFile>().Property<long>(x => x.UploadFileId).HasColumnName(@"UploadFileId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<UploadFile>().Property<string>(x => x.UploadFileName).HasColumnName(@"UploadFileName").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<UploadFile>().Property<System.Nullable<long>>(x => x.CompleteTypeId).HasColumnName(@"CompleteTypeId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UploadFile>().Property<System.Nullable<bool>>(x => x.AllowAccess).HasColumnName(@"AllowAccess").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<UploadFile>().Property<System.Nullable<int>>(x => x.TimeLimit).HasColumnName(@"TimeLimit").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UploadFile>().Property<System.Nullable<long>>(x => x.QuestionId).HasColumnName(@"QuestionId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UploadFile>().Property<string>(x => x.FileName).HasColumnName(@"FileName").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<UploadFile>().Property<string>(x => x.FilePath).HasColumnName(@"FilePath").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<UploadFile>().Property<System.Nullable<bool>>(x => x.IsShare).HasColumnName(@"IsShare").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<UploadFile>().Property<string>(x => x.TypeName).HasColumnName(@"TypeName").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<UploadFile>().Property<System.Nullable<decimal>>(x => x.Size).HasColumnName(@"Size").HasColumnType(@"decimal(18,2)").ValueGeneratedNever();
            modelBuilder.Entity<UploadFile>().Property<System.Nullable<bool>>(x => x.IsShow).HasColumnName(@"IsShow").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<UploadFile>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UploadFile>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UploadFile>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UploadFile>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UploadFile>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UploadFile>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UploadFile>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UploadFile>().HasKey(@"UploadFileId");
        }
	
        partial void CustomizeUploadFileMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region UserAddressInfo Mapping

        private void UserAddressInfoMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserAddressInfo>().ToTable(@"UserAddressInfos", @"dbo");
            modelBuilder.Entity<UserAddressInfo>().Property<long>(x => x.UserAddressId).HasColumnName(@"UserAddressId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<UserAddressInfo>().Property<System.Nullable<long>>(x => x.AddressId).HasColumnName(@"AddressId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserAddressInfo>().Property<System.Nullable<long>>(x => x.UserId).HasColumnName(@"UserId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserAddressInfo>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever().HasDefaultValueSql(@"1");
            modelBuilder.Entity<UserAddressInfo>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserAddressInfo>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserAddressInfo>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserAddressInfo>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserAddressInfo>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserAddressInfo>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserAddressInfo>().HasKey(@"UserAddressId");
        }
	
        partial void CustomizeUserAddressInfoMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region UserAssignment Mapping

        private void UserAssignmentMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserAssignment>().ToTable(@"UserAssignments", @"dbo");
            modelBuilder.Entity<UserAssignment>().Property<long>(x => x.UserAssignmentId).HasColumnName(@"UserAssignmentId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<UserAssignment>().Property<System.Nullable<long>>(x => x.UserUnitId).HasColumnName(@"UserUnitId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserAssignment>().Property<System.Nullable<long>>(x => x.AssignmentId).HasColumnName(@"AssignmentId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserAssignment>().Property<string>(x => x.UserAnswerText).HasColumnName(@"UserAnswerText").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<UserAssignment>().Property<string>(x => x.TrainerComment).HasColumnName(@"TrainerComment").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<UserAssignment>().Property<string>(x => x.UserAnswerFileUrl).HasColumnName(@"UserAnswerFileUrl").HasColumnType(@"nvarchar(250)").ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<UserAssignment>().Property<System.Nullable<int>>(x => x.Status).HasColumnName(@"Status").HasColumnType(@"int").ValueGeneratedNever().HasDefaultValueSql(@"0");
            modelBuilder.Entity<UserAssignment>().Property<System.Nullable<bool>>(x => x.IsPassed).HasColumnName(@"IsPassed").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<UserAssignment>().Property<System.Nullable<int>>(x => x.Grade).HasColumnName(@"Grade").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserAssignment>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserAssignment>().Property<System.Nullable<long>>(x => x.TrainerId).HasColumnName(@"TrainerId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserAssignment>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserAssignment>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserAssignment>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserAssignment>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserAssignment>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserAssignment>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserAssignment>().HasKey(@"UserAssignmentId");
        }
	
        partial void CustomizeUserAssignmentMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region UserClaim Mapping

        private void UserClaimMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserClaim>().ToTable(@"UserClaims", @"dbo");
            modelBuilder.Entity<UserClaim>().Property<long>(x => x.Id).HasColumnName(@"Id").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<UserClaim>().Property<long>(x => x.UserId).HasColumnName(@"UserId").HasColumnType(@"bigint").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UserClaim>().Property<string>(x => x.ClaimType).HasColumnName(@"ClaimType").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<UserClaim>().Property<string>(x => x.ClaimValue).HasColumnName(@"ClaimValue").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<UserClaim>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserClaim>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserClaim>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserClaim>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserClaim>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserClaim>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserClaim>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserClaim>().HasKey(@"Id");
        }
	
        partial void CustomizeUserClaimMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region UserContent Mapping

        private void UserContentMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserContent>().ToTable(@"UserContents", @"dbo");
            modelBuilder.Entity<UserContent>().Property<long>(x => x.UserContentId).HasColumnName(@"UserContentId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<UserContent>().Property<System.Nullable<long>>(x => x.UserUnitId).HasColumnName(@"UserUnitId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserContent>().Property<System.Nullable<long>>(x => x.ContentId).HasColumnName(@"ContentId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserContent>().Property<System.Nullable<long>>(x => x.UserAnswer).HasColumnName(@"UserAnswer").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserContent>().Property<string>(x => x.Remark).HasColumnName(@"Remark").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<UserContent>().Property<System.Nullable<int>>(x => x.Status).HasColumnName(@"Status").HasColumnType(@"int").ValueGeneratedNever().HasDefaultValueSql(@"0");
            modelBuilder.Entity<UserContent>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserContent>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserContent>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserContent>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserContent>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserContent>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserContent>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserContent>().HasKey(@"UserContentId");
        }
	
        partial void CustomizeUserContentMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region UserDocument Mapping

        private void UserDocumentMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserDocument>().ToTable(@"UserDocuments", @"dbo");
            modelBuilder.Entity<UserDocument>().Property<long>(x => x.UserDocumentId).HasColumnName(@"UserDocumentId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<UserDocument>().Property<long>(x => x.UserId).HasColumnName(@"UserId").HasColumnType(@"bigint").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UserDocument>().Property<string>(x => x.DocumentId).HasColumnName(@"DocumentId").HasColumnType(@"nvarchar(300)").IsRequired().ValueGeneratedNever().HasMaxLength(300);
            modelBuilder.Entity<UserDocument>().Property<System.Nullable<long>>(x => x.FileId).HasColumnName(@"FileId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserDocument>().Property<string>(x => x.FileExternalLink).HasColumnName(@"FileExternalLink").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<UserDocument>().Property<int>(x => x.Status).HasColumnName(@"Status").HasColumnType(@"int").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UserDocument>().Property<string>(x => x.Message).HasColumnName(@"Message").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<UserDocument>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserDocument>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserDocument>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserDocument>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserDocument>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserDocument>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserDocument>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserDocument>().HasKey(@"UserDocumentId");
        }
	
        partial void CustomizeUserDocumentMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region UserGroupDetail Mapping

        private void UserGroupDetailMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserGroupDetail>().ToTable(@"UserGroupDetails", @"dbo");
            modelBuilder.Entity<UserGroupDetail>().Property<long>(x => x.UserGroupDetailId).HasColumnName(@"UserGroupDetailId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<UserGroupDetail>().Property<long>(x => x.UserId).HasColumnName(@"UserId").HasColumnType(@"bigint").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UserGroupDetail>().Property<long>(x => x.UserGroupId).HasColumnName(@"UserGroupId").HasColumnType(@"bigint").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UserGroupDetail>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserGroupDetail>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserGroupDetail>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserGroupDetail>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserGroupDetail>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserGroupDetail>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserGroupDetail>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserGroupDetail>().HasKey(@"UserGroupDetailId");
        }
	
        partial void CustomizeUserGroupDetailMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region UserGroup Mapping

        private void UserGroupMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserGroup>().ToTable(@"UserGroups", @"dbo");
            modelBuilder.Entity<UserGroup>().Property<long>(x => x.UserGroupId).HasColumnName(@"UserGroupId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<UserGroup>().Property<string>(x => x.UserGroupName).HasColumnName(@"UserGroupName").HasColumnType(@"nvarchar(250)").IsRequired().ValueGeneratedNever().HasMaxLength(250);
            modelBuilder.Entity<UserGroup>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserGroup>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserGroup>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserGroup>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserGroup>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserGroup>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserGroup>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserGroup>().HasKey(@"UserGroupId");
        }
	
        partial void CustomizeUserGroupMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region UserLogin Mapping

        private void UserLoginMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserLogin>().ToTable(@"UserLogins", @"dbo");
            modelBuilder.Entity<UserLogin>().Property<long>(x => x.UserLoginId).HasColumnName(@"UserLoginId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<UserLogin>().Property<long>(x => x.UserId).HasColumnName(@"UserId").HasColumnType(@"bigint").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UserLogin>().Property<string>(x => x.LoginProvider).HasColumnName(@"LoginProvider").HasColumnType(@"nvarchar(128)").IsRequired().ValueGeneratedNever().HasMaxLength(128);
            modelBuilder.Entity<UserLogin>().Property<string>(x => x.ProviderKey).HasColumnName(@"ProviderKey").HasColumnType(@"nvarchar(128)").IsRequired().ValueGeneratedNever().HasMaxLength(128);
            modelBuilder.Entity<UserLogin>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserLogin>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserLogin>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserLogin>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserLogin>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserLogin>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserLogin>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserLogin>().HasKey(@"UserLoginId");
        }
	
        partial void CustomizeUserLoginMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region UserQualification Mapping

        private void UserQualificationMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserQualification>().ToTable(@"UserQualifications", @"dbo");
            modelBuilder.Entity<UserQualification>().Property<long>(x => x.UserQualificationId).HasColumnName(@"UserQualificationId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<UserQualification>().Property<System.Nullable<long>>(x => x.QualificationId).HasColumnName(@"QualificationId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQualification>().Property<System.Nullable<long>>(x => x.QualificationOrgId).HasColumnName(@"QualificationOrgId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQualification>().Property<System.Nullable<long>>(x => x.OrganizationId).HasColumnName(@"OrganizationId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQualification>().Property<System.Nullable<long>>(x => x.UserId).HasColumnName(@"UserId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQualification>().Property<System.Nullable<int>>(x => x.YearId).HasColumnName(@"YearId").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserQualification>().Property<System.Nullable<decimal>>(x => x.Progress).HasColumnName(@"Progress").HasColumnType(@"decimal(18,2)").ValueGeneratedNever().HasDefaultValueSql(@"0");
            modelBuilder.Entity<UserQualification>().Property<System.Nullable<int>>(x => x.Status).HasColumnName(@"Status").HasColumnType(@"int").ValueGeneratedNever().HasDefaultValueSql(@"1");
            modelBuilder.Entity<UserQualification>().Property<System.Nullable<int>>(x => x.NoOfContent).HasColumnName(@"NoOfContent").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserQualification>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserQualification>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQualification>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserQualification>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQualification>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserQualification>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQualification>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserQualification>().Property<System.Nullable<int>>(x => x.StudyReasonId).HasColumnName(@"StudyReasonId").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserQualification>().HasKey(@"UserQualificationId");
        }
	
        partial void CustomizeUserQualificationMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region UserQuestionAnswer Mapping

        private void UserQuestionAnswerMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserQuestionAnswer>().ToTable(@"UserQuestionAnswers", @"dbo");
            modelBuilder.Entity<UserQuestionAnswer>().Property<long>(x => x.UserQuestionAnswerId).HasColumnName(@"UserQuestionAnswerId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<UserQuestionAnswer>().Property<System.Nullable<long>>(x => x.UserQuestionId).HasColumnName(@"UserQuestionId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionAnswer>().Property<string>(x => x.UserAnswerText).HasColumnName(@"UserAnswerText").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionAnswer>().Property<string>(x => x.UserAnswerFileUrl).HasColumnName(@"UserAnswerFileUrl").HasColumnType(@"nvarchar(3000)").ValueGeneratedNever().HasMaxLength(3000);
            modelBuilder.Entity<UserQuestionAnswer>().Property<string>(x => x.TrainerComment).HasColumnName(@"TrainerComment").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionAnswer>().Property<System.Nullable<long>>(x => x.TrainerId).HasColumnName(@"TrainerId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionAnswer>().Property<System.Nullable<System.DateTime>>(x => x.CheckedTimeStamp).HasColumnName(@"CheckedTimeStamp").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionAnswer>().Property<string>(x => x.TrainerCommentFileUrl).HasColumnName(@"TrainerCommentFileUrl").HasColumnType(@"nvarchar(3000)").ValueGeneratedNever().HasMaxLength(3000);
            modelBuilder.Entity<UserQuestionAnswer>().Property<System.Nullable<int>>(x => x.Status).HasColumnName(@"Status").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionAnswer>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionAnswer>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionAnswer>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionAnswer>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionAnswer>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionAnswer>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionAnswer>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionAnswer>().HasKey(@"UserQuestionAnswerId");
        }
	
        partial void CustomizeUserQuestionAnswerMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region UserQuestionAttempt Mapping

        private void UserQuestionAttemptMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserQuestionAttempt>().ToTable(@"UserQuestionAttempts", @"dbo");
            modelBuilder.Entity<UserQuestionAttempt>().Property<long>(x => x.UserQuestionAttemptId).HasColumnName(@"UserQuestionAttemptId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<UserQuestionAttempt>().Property<System.Nullable<long>>(x => x.UserTestAttemptId).HasColumnName(@"UserTestAttemptId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionAttempt>().Property<System.Nullable<long>>(x => x.UserQuestionId).HasColumnName(@"UserQuestionId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionAttempt>().Property<System.Nullable<long>>(x => x.QuestionId).HasColumnName(@"QuestionId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionAttempt>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionAttempt>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionAttempt>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionAttempt>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionAttempt>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionAttempt>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionAttempt>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionAttempt>().HasKey(@"UserQuestionAttemptId");
        }
	
        partial void CustomizeUserQuestionAttemptMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region UserQuestionFillBlankOption Mapping

        private void UserQuestionFillBlankOptionMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserQuestionFillBlankOption>().ToTable(@"UserQuestionFillBlankOptions", @"dbo");
            modelBuilder.Entity<UserQuestionFillBlankOption>().Property<long>(x => x.UserQuestionFillBlankOptionId).HasColumnName(@"UserQuestionFillBlankOptionId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<UserQuestionFillBlankOption>().Property<System.Nullable<long>>(x => x.UserQuestionFillBlankId).HasColumnName(@"UserQuestionFillBlankId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionFillBlankOption>().Property<System.Nullable<long>>(x => x.QuestionFillBlankId).HasColumnName(@"QuestionFillBlankId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionFillBlankOption>().Property<string>(x => x.QuestionFillBlankOptionText).HasColumnName(@"QuestionFillBlankOptionText").HasColumnType(@"nvarchar(1000)").ValueGeneratedNever().HasMaxLength(1000);
            modelBuilder.Entity<UserQuestionFillBlankOption>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionFillBlankOption>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionFillBlankOption>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionFillBlankOption>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionFillBlankOption>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionFillBlankOption>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionFillBlankOption>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionFillBlankOption>().HasKey(@"UserQuestionFillBlankOptionId");
        }
	
        partial void CustomizeUserQuestionFillBlankOptionMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region UserQuestionFillBlank Mapping

        private void UserQuestionFillBlankMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserQuestionFillBlank>().ToTable(@"UserQuestionFillBlanks", @"dbo");
            modelBuilder.Entity<UserQuestionFillBlank>().Property<long>(x => x.UserQuestionFillBlankId).HasColumnName(@"UserQuestionFillBlankId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<UserQuestionFillBlank>().Property<System.Nullable<long>>(x => x.UserQuestionId).HasColumnName(@"UserQuestionId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionFillBlank>().Property<System.Nullable<long>>(x => x.QuestionFillBlankId).HasColumnName(@"QuestionFillBlankId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionFillBlank>().Property<string>(x => x.QuestionAnswerText).HasColumnName(@"QuestionAnswerText").HasColumnType(@"nvarchar(1000)").ValueGeneratedNever().HasMaxLength(1000);
            modelBuilder.Entity<UserQuestionFillBlank>().Property<System.Nullable<int>>(x => x.QuestionAnswerIndex).HasColumnName(@"QuestionAnswerIndex").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionFillBlank>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionFillBlank>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionFillBlank>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionFillBlank>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionFillBlank>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionFillBlank>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionFillBlank>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionFillBlank>().HasKey(@"UserQuestionFillBlankId");
        }
	
        partial void CustomizeUserQuestionFillBlankMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region UserQuestionOption Mapping

        private void UserQuestionOptionMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserQuestionOption>().ToTable(@"UserQuestionOptions", @"dbo");
            modelBuilder.Entity<UserQuestionOption>().Property<long>(x => x.UserQuestionOptionId).HasColumnName(@"UserQuestionOptionId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<UserQuestionOption>().Property<System.Nullable<long>>(x => x.QuestionOptionId).HasColumnName(@"QuestionOptionId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionOption>().Property<System.Nullable<long>>(x => x.QuestionOptionDropId).HasColumnName(@"QuestionOptionDropId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionOption>().Property<System.Nullable<long>>(x => x.UserQuestionId).HasColumnName(@"UserQuestionId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionOption>().Property<System.Nullable<int>>(x => x.Sequence).HasColumnName(@"Sequence").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionOption>().Property<System.Nullable<bool>>(x => x.IsCorrectAnswer).HasColumnName(@"IsCorrectAnswer").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionOption>().Property<System.Nullable<bool>>(x => x.UserAnswer).HasColumnName(@"UserAnswer").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionOption>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionOption>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionOption>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionOption>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionOption>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionOption>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionOption>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionOption>().HasKey(@"UserQuestionOptionId");
        }
	
        partial void CustomizeUserQuestionOptionMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region UserQuestionOptionTemplate Mapping

        private void UserQuestionOptionTemplateMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserQuestionOptionTemplate>().ToTable(@"UserQuestionOptionTemplates", @"dbo");
            modelBuilder.Entity<UserQuestionOptionTemplate>().Property<long>(x => x.UserQuestionOptionTemplateId).HasColumnName(@"UserQuestionOptionTemplateId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<UserQuestionOptionTemplate>().Property<System.Nullable<long>>(x => x.UserQuestionTemplateId).HasColumnName(@"UserQuestionTemplateId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionOptionTemplate>().Property<System.Nullable<long>>(x => x.QuestionOptionId).HasColumnName(@"QuestionOptionId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionOptionTemplate>().Property<System.Nullable<int>>(x => x.Sequence).HasColumnName(@"Sequence").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionOptionTemplate>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionOptionTemplate>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionOptionTemplate>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionOptionTemplate>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionOptionTemplate>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionOptionTemplate>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionOptionTemplate>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionOptionTemplate>().HasKey(@"UserQuestionOptionTemplateId");
        }
	
        partial void CustomizeUserQuestionOptionTemplateMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region UserQuestion Mapping

        private void UserQuestionMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserQuestion>().ToTable(@"UserQuestions", @"dbo");
            modelBuilder.Entity<UserQuestion>().Property<long>(x => x.UserQuestionId).HasColumnName(@"UserQuestionId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<UserQuestion>().Property<System.Nullable<long>>(x => x.UserTestQuestionId).HasColumnName(@"UserTestQuestionId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestion>().Property<System.Nullable<long>>(x => x.QuestionId).HasColumnName(@"QuestionId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestion>().Property<System.Nullable<long>>(x => x.Status).HasColumnName(@"Status").HasColumnType(@"bigint").ValueGeneratedNever().HasDefaultValueSql(@"1");
            modelBuilder.Entity<UserQuestion>().Property<System.Nullable<bool>>(x => x.IsEvaluate).HasColumnName(@"IsEvaluate").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestion>().Property<System.Nullable<bool>>(x => x.IsPassed).HasColumnName(@"IsPassed").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestion>().Property<System.Nullable<long>>(x => x.Grade).HasColumnName(@"Grade").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestion>().Property<string>(x => x.Comment).HasColumnName(@"Comment").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestion>().Property<System.Nullable<decimal>>(x => x.Weight).HasColumnName(@"Weight").HasColumnType(@"decimal(18,2)").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestion>().Property<System.Nullable<long>>(x => x.QuestionTypeId).HasColumnName(@"QuestionTypeId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestion>().Property<System.Nullable<decimal>>(x => x.Point).HasColumnName(@"Point").HasColumnType(@"decimal(18)").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestion>().Property<System.Nullable<long>>(x => x.UserTestId).HasColumnName(@"UserTestId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestion>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestion>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestion>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestion>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestion>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestion>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestion>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestion>().Property<System.Nullable<int>>(x => x.NoOfAttempt).HasColumnName(@"NoOfAttempt").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestion>().HasKey(@"UserQuestionId");
        }
	
        partial void CustomizeUserQuestionMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region UserQuestionTemplate Mapping

        private void UserQuestionTemplateMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserQuestionTemplate>().ToTable(@"UserQuestionTemplates", @"dbo");
            modelBuilder.Entity<UserQuestionTemplate>().Property<long>(x => x.UserQuestionTemplateId).HasColumnName(@"UserQuestionTemplateId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<UserQuestionTemplate>().Property<System.Nullable<long>>(x => x.UserTestTemplateId).HasColumnName(@"UserTestTemplateId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionTemplate>().Property<System.Nullable<long>>(x => x.ParentQuestionId).HasColumnName(@"ParentQuestionId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionTemplate>().Property<System.Nullable<long>>(x => x.QuestionId).HasColumnName(@"QuestionId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionTemplate>().Property<System.Nullable<decimal>>(x => x.Weight).HasColumnName(@"Weight").HasColumnType(@"decimal(18,2)").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionTemplate>().Property<System.Nullable<int>>(x => x.QuestionTemplateType).HasColumnName(@"QuestionTemplateType").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionTemplate>().Property<System.Nullable<int>>(x => x.Sequence).HasColumnName(@"Sequence").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionTemplate>().Property<System.Nullable<bool>>(x => x.IsRandom).HasColumnName(@"IsRandom").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionTemplate>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionTemplate>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionTemplate>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionTemplate>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionTemplate>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionTemplate>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionTemplate>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserQuestionTemplate>().HasKey(@"UserQuestionTemplateId");
        }
	
        partial void CustomizeUserQuestionTemplateMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region UserRandomizeQuestion Mapping

        private void UserRandomizeQuestionMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserRandomizeQuestion>().ToTable(@"UserRandomizeQuestions", @"dbo");
            modelBuilder.Entity<UserRandomizeQuestion>().Property<long>(x => x.UserRandomizeQuestionId).HasColumnName(@"UserRandomizeQuestionId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<UserRandomizeQuestion>().Property<System.Nullable<long>>(x => x.UserQuestionId).HasColumnName(@"UserQuestionId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserRandomizeQuestion>().Property<System.Nullable<long>>(x => x.UserRandomQuestionId).HasColumnName(@"UserRandomQuestionId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserRandomizeQuestion>().Property<System.Nullable<long>>(x => x.RandomizeQuestionId).HasColumnName(@"RandomizeQuestionId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserRandomizeQuestion>().Property<System.Nullable<int>>(x => x.Sequence).HasColumnName(@"Sequence").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserRandomizeQuestion>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserRandomizeQuestion>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserRandomizeQuestion>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserRandomizeQuestion>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserRandomizeQuestion>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserRandomizeQuestion>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserRandomizeQuestion>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserRandomizeQuestion>().HasKey(@"UserRandomizeQuestionId");
        }
	
        partial void CustomizeUserRandomizeQuestionMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region UserRegistrationToken Mapping

        private void UserRegistrationTokenMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserRegistrationToken>().ToTable(@"UserRegistrationToken", @"dbo");
            modelBuilder.Entity<UserRegistrationToken>().Property<long>(x => x.Id).HasColumnName(@"Id").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<UserRegistrationToken>().Property<System.Nullable<long>>(x => x.UserId).HasColumnName(@"UserId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserRegistrationToken>().Property<string>(x => x.Token).HasColumnName(@"Token").HasColumnType(@"nchar(10)").IsRequired().ValueGeneratedNever().HasMaxLength(10);
            modelBuilder.Entity<UserRegistrationToken>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserRegistrationToken>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserRegistrationToken>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserRegistrationToken>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserRegistrationToken>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserRegistrationToken>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserRegistrationToken>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserRegistrationToken>().HasKey(@"Id");
            modelBuilder.Entity<UserRegistrationToken>().HasIndex(@"Token").IsUnique(true);
        }
	
        partial void CustomizeUserRegistrationTokenMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region UserRole Mapping

        private void UserRoleMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserRole>().ToTable(@"UserRole", @"dbo");
            modelBuilder.Entity<UserRole>().Property<long>(x => x.UserId).HasColumnName(@"UserId").HasColumnType(@"bigint").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UserRole>().Property<long>(x => x.RoleId).HasColumnName(@"RoleId").HasColumnType(@"bigint").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UserRole>().Property<long>(x => x.UserRoleId).HasColumnName(@"UserRoleId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<UserRole>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserRole>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserRole>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserRole>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserRole>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserRole>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserRole>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserRole>().HasKey(@"UserRoleId");
        }
	
        partial void CustomizeUserRoleMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region User Mapping

        private void UserMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<User>().ToTable(@"Users", @"dbo");
            modelBuilder.Entity<User>().Property<long>(x => x.Id).HasColumnName(@"Id").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<User>().Property<string>(x => x.Login).HasColumnName(@"Login").HasColumnType(@"nvarchar(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<User>().Property<string>(x => x.Email).HasColumnName(@"Email").HasColumnType(@"nvarchar(255)").IsRequired().ValueGeneratedNever().HasMaxLength(255);
            modelBuilder.Entity<User>().Property<string>(x => x.Password).HasColumnName(@"Password").HasColumnType(@"nvarchar(500)").IsRequired().ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<User>().Property<System.Nullable<System.DateTime>>(x => x.CreationDate).HasColumnName(@"CreationDate").HasColumnType(@"datetime").ValueGeneratedNever();
            modelBuilder.Entity<User>().Property<System.Nullable<System.DateTime>>(x => x.ApprovalDate).HasColumnName(@"ApprovalDate").HasColumnType(@"datetime").ValueGeneratedNever();
            modelBuilder.Entity<User>().Property<System.Nullable<System.DateTime>>(x => x.LastLoginDate).HasColumnName(@"LastLoginDate").HasColumnType(@"datetime").ValueGeneratedNever();
            modelBuilder.Entity<User>().Property<System.Nullable<bool>>(x => x.IsLocked).HasColumnName(@"IsLocked").HasColumnType(@"bit").ValueGeneratedNever().HasDefaultValueSql(@"0");
            modelBuilder.Entity<User>().Property<string>(x => x.PasswordQuestion).HasColumnName(@"PasswordQuestion").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<User>().Property<string>(x => x.PasswordAnswer).HasColumnName(@"PasswordAnswer").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<User>().Property<string>(x => x.ActivationToken).HasColumnName(@"ActivationToken").HasColumnType(@"nvarchar(200)").ValueGeneratedNever().HasMaxLength(200);
            modelBuilder.Entity<User>().Property<System.Nullable<bool>>(x => x.EmailConfirmed).HasColumnName(@"EmailConfirmed").HasColumnType(@"bit").ValueGeneratedNever().HasDefaultValueSql(@"0");
            modelBuilder.Entity<User>().Property<string>(x => x.SecurityStamp).HasColumnName(@"SecurityStamp").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<User>().Property<string>(x => x.PhoneNumber).HasColumnName(@"PhoneNumber").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<User>().Property<string>(x => x.MobileNumber).HasColumnName(@"MobileNumber").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<User>().Property<string>(x => x.WorkPhoneNumber).HasColumnName(@"WorkPhoneNumber").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<User>().Property<System.Nullable<bool>>(x => x.PhoneNumberConfirmed).HasColumnName(@"PhoneNumberConfirmed").HasColumnType(@"bit").ValueGeneratedNever().HasDefaultValueSql(@"0");
            modelBuilder.Entity<User>().Property<System.Nullable<bool>>(x => x.TwoFactorEnabled).HasColumnName(@"TwoFactorEnabled").HasColumnType(@"bit").ValueGeneratedNever().HasDefaultValueSql(@"0");
            modelBuilder.Entity<User>().Property<System.Nullable<System.DateTime>>(x => x.LockoutEndDateUtc).HasColumnName(@"LockoutEndDateUtc").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<User>().Property<System.Nullable<bool>>(x => x.LockoutEnabled).HasColumnName(@"LockoutEnabled").HasColumnType(@"bit").ValueGeneratedNever().HasDefaultValueSql(@"0");
            modelBuilder.Entity<User>().Property<System.Nullable<int>>(x => x.AccessFailedCount).HasColumnName(@"AccessFailedCount").HasColumnType(@"int").ValueGeneratedNever().HasDefaultValueSql(@"0");
            modelBuilder.Entity<User>().Property<System.Nullable<long>>(x => x.UserTypeId).HasColumnName(@"UserTypeId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<User>().Property<string>(x => x.TitleName).HasColumnName(@"TitleName").HasColumnType(@"nvarchar(150)").ValueGeneratedNever().HasMaxLength(150);
            modelBuilder.Entity<User>().Property<string>(x => x.FirstName).HasColumnName(@"FirstName").HasColumnType(@"nvarchar(300)").ValueGeneratedNever().HasMaxLength(300);
            modelBuilder.Entity<User>().Property<string>(x => x.LastName).HasColumnName(@"LastName").HasColumnType(@"nvarchar(300)").ValueGeneratedNever().HasMaxLength(300);
            modelBuilder.Entity<User>().Property<string>(x => x.Sex).HasColumnName(@"Sex").HasColumnType(@"nvarchar(50)").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<User>().Property<string>(x => x.Description).HasColumnName(@"Description").HasColumnType(@"nvarchar(300)").ValueGeneratedNever().HasMaxLength(300);
            modelBuilder.Entity<User>().Property<string>(x => x.Address).HasColumnName(@"Address").HasColumnType(@"nvarchar(3000)").ValueGeneratedNever().HasMaxLength(3000);
            modelBuilder.Entity<User>().Property<string>(x => x.Photo).HasColumnName(@"Photo").HasColumnType(@"nvarchar(3000)").ValueGeneratedNever().HasMaxLength(3000);
            modelBuilder.Entity<User>().Property<System.Nullable<System.DateTime>>(x => x.Dob).HasColumnName(@"Dob").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<User>().Property<string>(x => x.Bio).HasColumnName(@"Bio").HasColumnType(@"nvarchar(max)").ValueGeneratedNever();
            modelBuilder.Entity<User>().Property<System.Nullable<decimal>>(x => x.TimeZone).HasColumnName(@"TimeZone").HasColumnType(@"decimal(18)").ValueGeneratedNever().HasDefaultValueSql(@"81");
            modelBuilder.Entity<User>().Property<System.Nullable<System.DateTime>>(x => x.ExpiryDate).HasColumnName(@"ExpiryDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<User>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever().HasDefaultValueSql(@"1");
            modelBuilder.Entity<User>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<User>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<User>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<User>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<User>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<User>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<User>().Property<System.Nullable<int>>(x => x.SiteId).HasColumnName(@"SiteId").HasColumnType(@"int").ValueGeneratedNever().HasDefaultValueSql(@"1");
            modelBuilder.Entity<User>().Property<System.Nullable<bool>>(x => x.HasTaeCert).HasColumnName(@"HasTaeCert").HasColumnType(@"bit").ValueGeneratedNever().HasDefaultValueSql(@"0");
            modelBuilder.Entity<User>().Property<System.Nullable<bool>>(x => x.HasVocational).HasColumnName(@"HasVocational").HasColumnType(@"bit").ValueGeneratedNever().HasDefaultValueSql(@"0");
            modelBuilder.Entity<User>().Property<System.Nullable<bool>>(x => x.IsDownloadMoa).HasColumnName(@"IsDownloadMoa").HasColumnType(@"bit").ValueGeneratedNever().HasDefaultValueSql(@"0");
            modelBuilder.Entity<User>().Property<System.Nullable<bool>>(x => x.IsShowStartUp).HasColumnName(@"IsShowStartUp").HasColumnType(@"bit").ValueGeneratedNever().HasDefaultValueSql(@"1");
            modelBuilder.Entity<User>().Property<System.Nullable<bool>>(x => x.IsAcceptTerm).HasColumnName(@"IsAcceptTerm").HasColumnType(@"bit").ValueGeneratedNever().HasDefaultValueSql(@"0");
            modelBuilder.Entity<User>().Property<System.Nullable<bool>>(x => x.IsDoneInduction).HasColumnName(@"IsDoneInduction").HasColumnType(@"bit").ValueGeneratedNever().HasDefaultValueSql(@"0");
            modelBuilder.Entity<User>().Property<System.Nullable<System.DateTime>>(x => x.StudentRegistrationInfoSentDate).HasColumnName(@"StudentRegistrationInfoSentDate").HasColumnType(@"datetime").ValueGeneratedNever();
            modelBuilder.Entity<User>().HasKey(@"Id");
            modelBuilder.Entity<User>().HasIndex(@"Login").IsUnique(true);
            modelBuilder.Entity<User>().HasIndex(@"Email").IsUnique(true);
        }
	
        partial void CustomizeUserMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region UserScorm Mapping

        private void UserScormMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserScorm>().ToTable(@"UserScorms", @"dbo");
            modelBuilder.Entity<UserScorm>().Property<long>(x => x.UserScormId).HasColumnName(@"UserScormId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<UserScorm>().Property<System.Nullable<long>>(x => x.UserUnitId).HasColumnName(@"UserUnitId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserScorm>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserScorm>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserScorm>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserScorm>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserScorm>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserScorm>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserScorm>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserScorm>().HasKey(@"UserScormId");
        }
	
        partial void CustomizeUserScormMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region UserState Mapping

        private void UserStateMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserState>().ToTable(@"UserStates", @"dbo");
            modelBuilder.Entity<UserState>().Property<long>(x => x.UserStateId).HasColumnName(@"UserStateId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<UserState>().Property<System.Nullable<long>>(x => x.UserQualificationId).HasColumnName(@"UserQualificationId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserState>().Property<System.Nullable<long>>(x => x.UserUnitId).HasColumnName(@"UserUnitId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserState>().Property<System.Nullable<long>>(x => x.UnitId).HasColumnName(@"UnitId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserState>().Property<System.Nullable<long>>(x => x.ContentTypeId).HasColumnName(@"ContentTypeId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserState>().Property<System.Nullable<long>>(x => x.ItemId).HasColumnName(@"ItemId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserState>().Property<System.Nullable<long>>(x => x.UserItemId).HasColumnName(@"UserItemId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserState>().Property<System.Nullable<int>>(x => x.ModeType).HasColumnName(@"ModeType").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserState>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserState>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserState>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserState>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserState>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserState>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserState>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserState>().HasKey(@"UserStateId");
        }
	
        partial void CustomizeUserStateMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region UserTestAttempt Mapping

        private void UserTestAttemptMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserTestAttempt>().ToTable(@"UserTestAttempts", @"dbo");
            modelBuilder.Entity<UserTestAttempt>().Property<long>(x => x.UserTestAttemptId).HasColumnName(@"UserTestAttemptId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<UserTestAttempt>().Property<System.Nullable<long>>(x => x.UserTestId).HasColumnName(@"UserTestId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserTestAttempt>().Property<System.Nullable<long>>(x => x.TestId).HasColumnName(@"TestId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserTestAttempt>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserTestAttempt>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserTestAttempt>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserTestAttempt>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserTestAttempt>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserTestAttempt>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserTestAttempt>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserTestAttempt>().HasKey(@"UserTestAttemptId");
        }
	
        partial void CustomizeUserTestAttemptMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region UserTestQuestion Mapping

        private void UserTestQuestionMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserTestQuestion>().ToTable(@"UserTestQuestions", @"dbo");
            modelBuilder.Entity<UserTestQuestion>().Property<long>(x => x.UserTestQuestionId).HasColumnName(@"UserTestQuestionId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<UserTestQuestion>().Property<System.Nullable<long>>(x => x.UserTestId).HasColumnName(@"UserTestId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserTestQuestion>().Property<System.Nullable<long>>(x => x.TestQuestionId).HasColumnName(@"TestQuestionId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserTestQuestion>().Property<System.Nullable<long>>(x => x.QuestionId).HasColumnName(@"QuestionId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserTestQuestion>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserTestQuestion>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserTestQuestion>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserTestQuestion>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserTestQuestion>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserTestQuestion>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserTestQuestion>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserTestQuestion>().HasKey(@"UserTestQuestionId");
        }
	
        partial void CustomizeUserTestQuestionMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region UserTest Mapping

        private void UserTestMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserTest>().ToTable(@"UserTests", @"dbo");
            modelBuilder.Entity<UserTest>().Property<long>(x => x.UserTestId).HasColumnName(@"UserTestId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<UserTest>().Property<System.Nullable<long>>(x => x.UserUnitId).HasColumnName(@"UserUnitId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserTest>().Property<System.Nullable<long>>(x => x.TestId).HasColumnName(@"TestId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserTest>().Property<System.Nullable<int>>(x => x.Status).HasColumnName(@"Status").HasColumnType(@"int").ValueGeneratedNever().HasDefaultValueSql(@"0");
            modelBuilder.Entity<UserTest>().Property<System.Nullable<bool>>(x => x.IsEvaluate).HasColumnName(@"IsEvaluate").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<UserTest>().Property<System.Nullable<bool>>(x => x.IsTimeOut).HasColumnName(@"IsTimeOut").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<UserTest>().Property<System.Nullable<bool>>(x => x.IsPassed).HasColumnName(@"IsPassed").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<UserTest>().Property<System.Nullable<decimal>>(x => x.TimeUsed).HasColumnName(@"TimeUsed").HasColumnType(@"decimal(18,2)").ValueGeneratedNever();
            modelBuilder.Entity<UserTest>().Property<System.Nullable<decimal>>(x => x.UserPassPercentage).HasColumnName(@"UserPassPercentage").HasColumnType(@"decimal(18,2)").ValueGeneratedNever();
            modelBuilder.Entity<UserTest>().Property<System.Nullable<int>>(x => x.NoOfQuestion).HasColumnName(@"NoOfQuestion").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserTest>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserTest>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserTest>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserTest>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserTest>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserTest>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserTest>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserTest>().Property<System.Nullable<System.DateTime>>(x => x.TestDated).HasColumnName(@"TestDated").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserTest>().Property<System.Nullable<bool>>(x => x.IsAttempt).HasColumnName(@"IsAttempt").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<UserTest>().HasKey(@"UserTestId");
        }
	
        partial void CustomizeUserTestMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region UserTestState Mapping

        private void UserTestStateMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserTestState>().ToTable(@"UserTestStates", @"dbo");
            modelBuilder.Entity<UserTestState>().Property<long>(x => x.UserTestStateId).HasColumnName(@"UserTestStateId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<UserTestState>().Property<System.Nullable<long>>(x => x.UserQualificationId).HasColumnName(@"UserQualificationId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserTestState>().Property<System.Nullable<long>>(x => x.UnitId).HasColumnName(@"UnitId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserTestState>().Property<System.Nullable<long>>(x => x.TestId).HasColumnName(@"TestId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserTestState>().Property<System.Nullable<long>>(x => x.QuestionId).HasColumnName(@"QuestionId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserTestState>().Property<System.Nullable<decimal>>(x => x.TimeUse).HasColumnName(@"TimeUse").HasColumnType(@"decimal(18,2)").ValueGeneratedNever();
            modelBuilder.Entity<UserTestState>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserTestState>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserTestState>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserTestState>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserTestState>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserTestState>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserTestState>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserTestState>().HasKey(@"UserTestStateId");
        }
	
        partial void CustomizeUserTestStateMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region UserTestTemplate Mapping

        private void UserTestTemplateMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserTestTemplate>().ToTable(@"UserTestTemplates", @"dbo");
            modelBuilder.Entity<UserTestTemplate>().Property<long>(x => x.UserTestTemplateId).HasColumnName(@"UserTestTemplateId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<UserTestTemplate>().Property<System.Nullable<long>>(x => x.UserTestId).HasColumnName(@"UserTestId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserTestTemplate>().Property<System.Nullable<long>>(x => x.TestId).HasColumnName(@"TestId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserTestTemplate>().Property<System.Nullable<bool>>(x => x.IsEvaluate).HasColumnName(@"IsEvaluate").HasColumnType(@"bit").ValueGeneratedNever();
            modelBuilder.Entity<UserTestTemplate>().Property<System.Nullable<decimal>>(x => x.MinPassPercentage).HasColumnName(@"MinPassPercentage").HasColumnType(@"decimal(18,2)").ValueGeneratedNever();
            modelBuilder.Entity<UserTestTemplate>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserTestTemplate>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserTestTemplate>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserTestTemplate>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserTestTemplate>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserTestTemplate>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserTestTemplate>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserTestTemplate>().HasKey(@"UserTestTemplateId");
        }
	
        partial void CustomizeUserTestTemplateMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region UserTypePermission Mapping

        private void UserTypePermissionMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserTypePermission>().ToTable(@"UserTypePermissions", @"dbo");
            modelBuilder.Entity<UserTypePermission>().Property<long>(x => x.UserTypePermissionId).HasColumnName(@"UserTypePermissionId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<UserTypePermission>().Property<long>(x => x.UserTypeId).HasColumnName(@"UserTypeId").HasColumnType(@"bigint").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UserTypePermission>().Property<long>(x => x.PermissionId).HasColumnName(@"PermissionId").HasColumnType(@"bigint").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UserTypePermission>().Property<bool>(x => x.IsAllow).HasColumnName(@"IsAllow").HasColumnType(@"bit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<UserTypePermission>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserTypePermission>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserTypePermission>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserTypePermission>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserTypePermission>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserTypePermission>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserTypePermission>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserTypePermission>().HasKey(@"UserTypePermissionId");
        }
	
        partial void CustomizeUserTypePermissionMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region UserType Mapping

        private void UserTypeMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserType>().ToTable(@"UserTypes", @"dbo");
            modelBuilder.Entity<UserType>().Property<long>(x => x.UserTypeId).HasColumnName(@"UserTypeId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<UserType>().Property<string>(x => x.UserTypeName).HasColumnName(@"UserTypeName").HasColumnType(@"nvarchar(80)").ValueGeneratedNever().HasMaxLength(80);
            modelBuilder.Entity<UserType>().Property<System.Nullable<long>>(x => x.RoleId).HasColumnName(@"RoleId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserType>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserType>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserType>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserType>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserType>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserType>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserType>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserType>().HasKey(@"UserTypeId");
        }
	
        partial void CustomizeUserTypeMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region UserUnit Mapping

        private void UserUnitMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserUnit>().ToTable(@"UserUnits", @"dbo");
            modelBuilder.Entity<UserUnit>().Property<long>(x => x.UserUnitId).HasColumnName(@"UserUnitId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<UserUnit>().Property<System.Nullable<long>>(x => x.UserQualificationId).HasColumnName(@"UserQualificationId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserUnit>().Property<System.Nullable<int>>(x => x.NoOfContent).HasColumnName(@"NoOfContent").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserUnit>().Property<System.Nullable<int>>(x => x.NoOfPending).HasColumnName(@"NoOfPending").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserUnit>().Property<System.Nullable<int>>(x => x.Status).HasColumnName(@"Status").HasColumnType(@"int").ValueGeneratedNever().HasDefaultValueSql(@"0");
            modelBuilder.Entity<UserUnit>().Property<System.Nullable<bool>>(x => x.IsOutcome).HasColumnName(@"IsOutcome").HasColumnType(@"bit").ValueGeneratedNever().HasDefaultValueSql(@"0");
            modelBuilder.Entity<UserUnit>().Property<System.Nullable<long>>(x => x.UnitId).HasColumnName(@"UnitId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserUnit>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserUnit>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserUnit>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserUnit>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserUnit>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserUnit>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserUnit>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserUnit>().Property<System.Nullable<int>>(x => x.NoOfComplete).HasColumnName(@"NoOfComplete").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserUnit>().HasKey(@"UserUnitId");
        }
	
        partial void CustomizeUserUnitMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region UserUploadFile Mapping

        private void UserUploadFileMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UserUploadFile>().ToTable(@"UserUploadFiles", @"dbo");
            modelBuilder.Entity<UserUploadFile>().Property<long>(x => x.UserUploadFileId).HasColumnName(@"UserUploadFileId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<UserUploadFile>().Property<System.Nullable<long>>(x => x.UserUnitId).HasColumnName(@"UserUnitId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserUploadFile>().Property<System.Nullable<long>>(x => x.UploadFileId).HasColumnName(@"UploadFileId").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserUploadFile>().Property<System.Nullable<long>>(x => x.UserAnswer).HasColumnName(@"UserAnswer").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserUploadFile>().Property<string>(x => x.Remark).HasColumnName(@"Remark").HasColumnType(@"nvarchar(500)").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<UserUploadFile>().Property<System.Nullable<int>>(x => x.Status).HasColumnName(@"Status").HasColumnType(@"int").ValueGeneratedNever().HasDefaultValueSql(@"0");
            modelBuilder.Entity<UserUploadFile>().Property<System.Nullable<int>>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<UserUploadFile>().Property<System.Nullable<long>>(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserUploadFile>().Property<System.Nullable<System.DateTime>>(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserUploadFile>().Property<System.Nullable<long>>(x => x.LastModifiedBy).HasColumnName(@"LastModifiedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserUploadFile>().Property<System.Nullable<System.DateTime>>(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserUploadFile>().Property<System.Nullable<long>>(x => x.DeletedBy).HasColumnName(@"DeletedBy").HasColumnType(@"bigint").ValueGeneratedNever();
            modelBuilder.Entity<UserUploadFile>().Property<System.Nullable<System.DateTime>>(x => x.DeletedDate).HasColumnName(@"DeletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<UserUploadFile>().HasKey(@"UserUploadFileId");
        }
	
        partial void CustomizeUserUploadFileMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region ZipContent Mapping

        private void ZipContentMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ZipContent>().ToTable(@"ZipContents", @"dbo");
            modelBuilder.Entity<ZipContent>().Property<long>(x => x.ZipContentId).HasColumnName(@"ZipContentId").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<ZipContent>().Property<long>(x => x.JobId).HasColumnName(@"JobId").HasColumnType(@"bigint").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<ZipContent>().Property<long>(x => x.FileId).HasColumnName(@"FileId").HasColumnType(@"bigint").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<ZipContent>().Property<int>(x => x.Action).HasColumnName(@"Action").HasColumnType(@"int").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<ZipContent>().Property<long>(x => x.ActionBy).HasColumnName(@"ActionBy").HasColumnType(@"bigint").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<ZipContent>().Property<System.DateTime>(x => x.ActionDate).HasColumnName(@"ActionDate").HasColumnType(@"datetime2").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<ZipContent>().Property<int>(x => x.Mode).HasColumnName(@"Mode").HasColumnType(@"int").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<ZipContent>().Property<System.Nullable<int>>(x => x.CompletedAction).HasColumnName(@"CompletedAction").HasColumnType(@"int").ValueGeneratedNever();
            modelBuilder.Entity<ZipContent>().Property<System.Nullable<System.DateTime>>(x => x.CompletedDate).HasColumnName(@"CompletedDate").HasColumnType(@"datetime2").ValueGeneratedNever();
            modelBuilder.Entity<ZipContent>().HasKey(@"ZipContentId");
        }
	
        partial void CustomizeZipContentMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region ZipJob Mapping

        private void ZipJobMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ZipJob>().ToTable(@"ZipJobs", @"dbo");
            modelBuilder.Entity<ZipJob>().Property<long>(x => x.JobId).HasColumnName(@"JobId").HasColumnType(@"bigint").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<ZipJob>().Property<long>(x => x.FileId).HasColumnName(@"FileId").HasColumnType(@"bigint").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<ZipJob>().HasKey(@"JobId");
        }
	
        partial void CustomizeZipJobMapping(ModelBuilder modelBuilder);

        #endregion

        private void RelationshipsMapping(ModelBuilder modelBuilder)
        {

        #region ActivityLog Navigation properties

            modelBuilder.Entity<ActivityLog>().HasOne(x => x.Organization).WithMany(op => op.ActivityLogs).HasForeignKey(@"OrganizationId");
            modelBuilder.Entity<ActivityLog>().HasOne(x => x.ActivityType).WithMany(op => op.ActivityLogs).IsRequired(true).HasForeignKey(@"ActivityTypeId");
            modelBuilder.Entity<ActivityLog>().HasOne(x => x.Module).WithMany(op => op.ActivityLogs).HasForeignKey(@"ModuleId");
            modelBuilder.Entity<ActivityLog>().HasOne(x => x.RtoInfo).WithMany(op => op.ActivityLogs).HasForeignKey(@"RtoId");
            modelBuilder.Entity<ActivityLog>().HasOne(x => x.User).WithMany(op => op.ActivityLogs).IsRequired(true).HasForeignKey(@"UserId");

        #endregion

        #region ActivityType Navigation properties

            modelBuilder.Entity<ActivityType>().HasMany(x => x.ActivityLogs).WithOne(op => op.ActivityType).IsRequired(true).HasForeignKey(@"ActivityTypeId");
            modelBuilder.Entity<ActivityType>().HasOne(x => x.Module).WithMany(op => op.ActivityTypes).IsRequired(true).HasForeignKey(@"ModuleId");

        #endregion

        #region AddressInfo Navigation properties

            modelBuilder.Entity<AddressInfo>().HasOne(x => x.CountryInfo).WithMany(op => op.AddressInfos).HasForeignKey(@"CountryId");
            modelBuilder.Entity<AddressInfo>().HasOne(x => x.StateInfo).WithMany(op => op.AddressInfos).HasForeignKey(@"StateId");
            modelBuilder.Entity<AddressInfo>().HasMany(x => x.DeliveryLocations).WithOne(op => op.AddressInfo).HasForeignKey(@"AddressId");
            modelBuilder.Entity<AddressInfo>().HasMany(x => x.OrganizationAddressInfos).WithOne(op => op.AddressInfo).HasForeignKey(@"AddressId");
            modelBuilder.Entity<AddressInfo>().HasMany(x => x.RtoAddressInfos).WithOne(op => op.AddressInfo).HasForeignKey(@"AddressId");
            modelBuilder.Entity<AddressInfo>().HasMany(x => x.UserAddressInfos).WithOne(op => op.AddressInfo).HasForeignKey(@"AddressId");

        #endregion

        #region Assignment Navigation properties

            modelBuilder.Entity<Assignment>().HasOne(x => x.CompleteType).WithMany(op => op.Assignments).HasForeignKey(@"CompleteTypeId");
            modelBuilder.Entity<Assignment>().HasMany(x => x.UnitAssignments).WithOne(op => op.Assignment).IsRequired(true).HasForeignKey(@"AssignmentId");
            modelBuilder.Entity<Assignment>().HasMany(x => x.UserAssignments).WithOne(op => op.Assignment).HasForeignKey(@"AssignmentId");

        #endregion

        #region AvetmisEnrollment Navigation properties

            modelBuilder.Entity<AvetmisEnrollment>().HasOne(x => x.DeliveryLocation).WithMany(op => op.AvetmisEnrollments).HasForeignKey(@"DeliveryLocationId");
            modelBuilder.Entity<AvetmisEnrollment>().HasOne(x => x.Unit).WithMany(op => op.AvetmisEnrollments).HasForeignKey(@"UnitId");
            modelBuilder.Entity<AvetmisEnrollment>().HasOne(x => x.User).WithMany(op => op.AvetmisEnrollments).HasForeignKey(@"UserId");
            modelBuilder.Entity<AvetmisEnrollment>().HasOne(x => x.QualificationOrg).WithMany(op => op.AvetmisEnrollments).HasForeignKey(@"QualificationOrgId");

        #endregion

        #region ClassInfo Navigation properties

            modelBuilder.Entity<ClassInfo>().HasOne(x => x.Organization).WithMany(op => op.ClassInfos).HasForeignKey(@"OrganizationId");
            modelBuilder.Entity<ClassInfo>().HasOne(x => x.QualificationOrg).WithMany(op => op.ClassInfos).HasForeignKey(@"QualificationOrgId");
            modelBuilder.Entity<ClassInfo>().HasOne(x => x.Unit).WithMany(op => op.ClassInfos).HasForeignKey(@"UnitId");
            modelBuilder.Entity<ClassInfo>().HasMany(x => x.StudentClassInfos).WithOne(op => op.ClassInfo).HasForeignKey(@"ClassId");
            modelBuilder.Entity<ClassInfo>().HasMany(x => x.TrainerClassInfos).WithOne(op => op.ClassInfo).HasForeignKey(@"ClassId");

        #endregion

        #region CompleteType Navigation properties

            modelBuilder.Entity<CompleteType>().HasMany(x => x.Assignments).WithOne(op => op.CompleteType).HasForeignKey(@"CompleteTypeId");
            modelBuilder.Entity<CompleteType>().HasMany(x => x.Contents).WithOne(op => op.CompleteType).HasForeignKey(@"CompleteTypeId");
            modelBuilder.Entity<CompleteType>().HasMany(x => x.UploadFiles).WithOne(op => op.CompleteType).HasForeignKey(@"CompleteTypeId");

        #endregion

        #region Content Navigation properties

            modelBuilder.Entity<Content>().HasOne(x => x.CompleteType).WithMany(op => op.Contents).HasForeignKey(@"CompleteTypeId");
            modelBuilder.Entity<Content>().HasMany(x => x.CourseContents).WithOne(op => op.Content).IsRequired(true).HasForeignKey(@"ContentId");
            modelBuilder.Entity<Content>().HasMany(x => x.UnitContents).WithOne(op => op.Content).IsRequired(true).HasForeignKey(@"ContentId");
            modelBuilder.Entity<Content>().HasMany(x => x.UserContents).WithOne(op => op.Content).HasForeignKey(@"ContentId");

        #endregion

        #region CountryInfo Navigation properties

            modelBuilder.Entity<CountryInfo>().HasMany(x => x.AddressInfos).WithOne(op => op.CountryInfo).HasForeignKey(@"CountryId");
            modelBuilder.Entity<CountryInfo>().HasMany(x => x.LearnerInfos_CountryId).WithOne(op => op.CountryInfo_CountryId).HasForeignKey(@"CountryId");
            modelBuilder.Entity<CountryInfo>().HasMany(x => x.LearnerInfos_CountryOfBirthId).WithOne(op => op.CountryInfo_CountryOfBirthId).HasForeignKey(@"CountryOfBirthId");
            modelBuilder.Entity<CountryInfo>().HasMany(x => x.LearnerPostAddressInfos).WithOne(op => op.CountryInfo).HasForeignKey(@"CountryId");
            modelBuilder.Entity<CountryInfo>().HasMany(x => x.StateInfos).WithOne(op => op.CountryInfo).HasForeignKey(@"CountryId");

        #endregion

        #region CourseContent Navigation properties

            modelBuilder.Entity<CourseContent>().HasOne(x => x.Content).WithMany(op => op.CourseContents).IsRequired(true).HasForeignKey(@"ContentId");
            modelBuilder.Entity<CourseContent>().HasOne(x => x.CourseInfo).WithMany(op => op.CourseContents).IsRequired(true).HasForeignKey(@"CourseId");

        #endregion

        #region CourseInfo Navigation properties

            modelBuilder.Entity<CourseInfo>().HasMany(x => x.CourseContents).WithOne(op => op.CourseInfo).IsRequired(true).HasForeignKey(@"CourseId");
            modelBuilder.Entity<CourseInfo>().HasOne(x => x.RtoInfo).WithMany(op => op.CourseInfos).HasForeignKey(@"RtoId");
            modelBuilder.Entity<CourseInfo>().HasMany(x => x.CourseTests).WithOne(op => op.CourseInfo).IsRequired(true).HasForeignKey(@"CourseId");
            modelBuilder.Entity<CourseInfo>().HasMany(x => x.CourseUploadFiles).WithOne(op => op.CourseInfo).HasForeignKey(@"CourseId");

        #endregion

        #region CourseTest Navigation properties

            modelBuilder.Entity<CourseTest>().HasOne(x => x.CourseInfo).WithMany(op => op.CourseTests).IsRequired(true).HasForeignKey(@"CourseId");
            modelBuilder.Entity<CourseTest>().HasOne(x => x.Test).WithMany(op => op.CourseTests).IsRequired(true).HasForeignKey(@"TestId");

        #endregion

        #region CourseUploadFile Navigation properties

            modelBuilder.Entity<CourseUploadFile>().HasOne(x => x.UploadFile).WithMany(op => op.CourseUploadFiles).HasForeignKey(@"UploadFileId");
            modelBuilder.Entity<CourseUploadFile>().HasOne(x => x.CourseInfo).WithMany(op => op.CourseUploadFiles).HasForeignKey(@"CourseId");

        #endregion

        #region DeliveryLocation Navigation properties

            modelBuilder.Entity<DeliveryLocation>().HasMany(x => x.AvetmisEnrollments).WithOne(op => op.DeliveryLocation).HasForeignKey(@"DeliveryLocationId");
            modelBuilder.Entity<DeliveryLocation>().HasOne(x => x.AddressInfo).WithMany(op => op.DeliveryLocations).HasForeignKey(@"AddressId");

        #endregion

        #region DisabilityOption Navigation properties

            modelBuilder.Entity<DisabilityOption>().HasMany(x => x.LeanerDisabilityOptions).WithOne(op => op.DisabilityOption).HasForeignKey(@"DisabilityOptionId");

        #endregion

        #region Envet Navigation properties

            modelBuilder.Entity<Envet>().HasOne(x => x.Organization).WithMany(op => op.Envets).HasForeignKey(@"OrganizationId");
            modelBuilder.Entity<Envet>().HasOne(x => x.ProductFile).WithMany(op => op.Envets).HasForeignKey(@"ProductFileId");
            modelBuilder.Entity<Envet>().HasOne(x => x.QualificationOrg).WithMany(op => op.Envets).HasForeignKey(@"QualificationOrgId");
            modelBuilder.Entity<Envet>().HasOne(x => x.RtoInfo).WithMany(op => op.Envets).HasForeignKey(@"RtoId");
            modelBuilder.Entity<Envet>().HasOne(x => x.Unit).WithMany(op => op.Envets).HasForeignKey(@"UnitId");
            modelBuilder.Entity<Envet>().HasOne(x => x.User).WithMany(op => op.Envets).HasForeignKey(@"UserId");

        #endregion

        #region Evidence Navigation properties

            modelBuilder.Entity<Evidence>().HasOne(x => x.QualificationOrg).WithMany(op => op.Evidences).HasForeignKey(@"QualificationOrgId");
            modelBuilder.Entity<Evidence>().HasOne(x => x.Unit).WithMany(op => op.Evidences).HasForeignKey(@"UnitId");
            modelBuilder.Entity<Evidence>().HasOne(x => x.User).WithMany(op => op.Evidences).HasForeignKey(@"UserId");

        #endregion

        #region FileRelation Navigation properties

            modelBuilder.Entity<FileRelation>().HasOne(x => x.File).WithMany(op => op.FileRelations).HasForeignKey(@"FileId");

        #endregion

        #region File Navigation properties

            modelBuilder.Entity<File>().HasMany(x => x.FileRelations).WithOne(op => op.File).HasForeignKey(@"FileId");
            modelBuilder.Entity<File>().HasOne(x => x.FileType).WithMany(op => op.Files).HasForeignKey(@"FileTypeId");
            modelBuilder.Entity<File>().HasMany(x => x.Invoices).WithOne(op => op.File).HasForeignKey(@"FileId");
            modelBuilder.Entity<File>().HasMany(x => x.ProductFiles).WithOne(op => op.File).HasForeignKey(@"FileId");
            modelBuilder.Entity<File>().HasMany(x => x.Units_StudentZipFileId).WithOne(op => op.File_StudentZipFileId).HasForeignKey(@"StudentZipFileId");
            modelBuilder.Entity<File>().HasMany(x => x.Units_TrainerZipFileId).WithOne(op => op.File_TrainerZipFileId).HasForeignKey(@"TrainerZipFileId");
            modelBuilder.Entity<File>().HasMany(x => x.UserDocuments).WithOne(op => op.File).HasForeignKey(@"FileId");
            modelBuilder.Entity<File>().HasMany(x => x.ZipContents).WithOne(op => op.File).IsRequired(true).HasForeignKey(@"FileId");
            modelBuilder.Entity<File>().HasMany(x => x.ZipJobs).WithOne(op => op.File).IsRequired(true).HasForeignKey(@"FileId");

        #endregion

        #region FileType Navigation properties

            modelBuilder.Entity<FileType>().HasMany(x => x.Files).WithOne(op => op.FileType).HasForeignKey(@"FileTypeId");

        #endregion

        #region InvoiceItem Navigation properties

            modelBuilder.Entity<InvoiceItem>().HasOne(x => x.Invoice).WithMany(op => op.InvoiceItems).IsRequired(true).HasForeignKey(@"InvoiceId");

        #endregion

        #region Invoice Navigation properties

            modelBuilder.Entity<Invoice>().HasMany(x => x.InvoiceItems).WithOne(op => op.Invoice).IsRequired(true).HasForeignKey(@"InvoiceId");
            modelBuilder.Entity<Invoice>().HasOne(x => x.Organization).WithMany(op => op.Invoices).HasForeignKey(@"OrganizationId");
            modelBuilder.Entity<Invoice>().HasOne(x => x.File).WithMany(op => op.Invoices).HasForeignKey(@"FileId");
            modelBuilder.Entity<Invoice>().HasOne(x => x.ProductFile).WithMany(op => op.Invoices).HasForeignKey(@"ProductFileId");
            modelBuilder.Entity<Invoice>().HasOne(x => x.RtoInfo).WithMany(op => op.Invoices).HasForeignKey(@"RtoId");

        #endregion

        #region Job Navigation properties

            modelBuilder.Entity<Job>().HasOne(x => x.ZipJob).WithOne(op => op.Job).IsRequired(true).HasForeignKey(typeof(ZipJob), @"JobId");

        #endregion

        #region Language Navigation properties

            modelBuilder.Entity<Language>().HasMany(x => x.LearnerInfos).WithOne(op => op.Language).HasForeignKey(@"LanguageId");
            modelBuilder.Entity<Language>().HasMany(x => x.Organizations).WithOne(op => op.Language).HasForeignKey(@"LanguageId");

        #endregion

        #region LeanerDisabilityOption Navigation properties

            modelBuilder.Entity<LeanerDisabilityOption>().HasOne(x => x.LearnerInfo).WithMany(op => op.LeanerDisabilityOptions).HasForeignKey(@"LearnerId");
            modelBuilder.Entity<LeanerDisabilityOption>().HasOne(x => x.DisabilityOption).WithMany(op => op.LeanerDisabilityOptions).HasForeignKey(@"DisabilityOptionId");

        #endregion

        #region LeanerPriorEducation Navigation properties

            modelBuilder.Entity<LeanerPriorEducation>().HasOne(x => x.LearnerInfo).WithMany(op => op.LeanerPriorEducations).HasForeignKey(@"LearnerId");
            modelBuilder.Entity<LeanerPriorEducation>().HasOne(x => x.PriorEducation).WithMany(op => op.LeanerPriorEducations).HasForeignKey(@"PriorEducationId");

        #endregion

        #region LearnerInfo Navigation properties

            modelBuilder.Entity<LearnerInfo>().HasMany(x => x.LeanerDisabilityOptions).WithOne(op => op.LearnerInfo).HasForeignKey(@"LearnerId");
            modelBuilder.Entity<LearnerInfo>().HasMany(x => x.LeanerPriorEducations).WithOne(op => op.LearnerInfo).HasForeignKey(@"LearnerId");
            modelBuilder.Entity<LearnerInfo>().HasOne(x => x.CountryInfo_CountryId).WithMany(op => op.LearnerInfos_CountryId).HasForeignKey(@"CountryId");
            modelBuilder.Entity<LearnerInfo>().HasOne(x => x.CountryInfo_CountryOfBirthId).WithMany(op => op.LearnerInfos_CountryOfBirthId).HasForeignKey(@"CountryOfBirthId");
            modelBuilder.Entity<LearnerInfo>().HasOne(x => x.Language).WithMany(op => op.LearnerInfos).HasForeignKey(@"LanguageId");
            modelBuilder.Entity<LearnerInfo>().HasOne(x => x.StateInfo).WithMany(op => op.LearnerInfos).HasForeignKey(@"StateId");
            modelBuilder.Entity<LearnerInfo>().HasOne(x => x.User).WithMany(op => op.LearnerInfos).HasForeignKey(@"UserId");

        #endregion

        #region LearnerPostAddressInfo Navigation properties

            modelBuilder.Entity<LearnerPostAddressInfo>().HasOne(x => x.CountryInfo).WithMany(op => op.LearnerPostAddressInfos).HasForeignKey(@"CountryId");
            modelBuilder.Entity<LearnerPostAddressInfo>().HasOne(x => x.StateInfo).WithMany(op => op.LearnerPostAddressInfos).HasForeignKey(@"StateId");
            modelBuilder.Entity<LearnerPostAddressInfo>().HasOne(x => x.User).WithMany(op => op.LearnerPostAddressInfos).HasForeignKey(@"UserId");

        #endregion

        #region Module Navigation properties

            modelBuilder.Entity<Module>().HasMany(x => x.ActivityLogs).WithOne(op => op.Module).HasForeignKey(@"ModuleId");
            modelBuilder.Entity<Module>().HasMany(x => x.ActivityTypes).WithOne(op => op.Module).IsRequired(true).HasForeignKey(@"ModuleId");

        #endregion

        #region OrganizationAddressInfo Navigation properties

            modelBuilder.Entity<OrganizationAddressInfo>().HasOne(x => x.AddressInfo).WithMany(op => op.OrganizationAddressInfos).HasForeignKey(@"AddressId");
            modelBuilder.Entity<OrganizationAddressInfo>().HasOne(x => x.Organization).WithMany(op => op.OrganizationAddressInfos).HasForeignKey(@"OrganizationId");

        #endregion

        #region Organization Navigation properties

            modelBuilder.Entity<Organization>().HasMany(x => x.ActivityLogs).WithOne(op => op.Organization).HasForeignKey(@"OrganizationId");
            modelBuilder.Entity<Organization>().HasMany(x => x.ClassInfos).WithOne(op => op.Organization).HasForeignKey(@"OrganizationId");
            modelBuilder.Entity<Organization>().HasMany(x => x.Envets).WithOne(op => op.Organization).HasForeignKey(@"OrganizationId");
            modelBuilder.Entity<Organization>().HasMany(x => x.Invoices).WithOne(op => op.Organization).HasForeignKey(@"OrganizationId");
            modelBuilder.Entity<Organization>().HasMany(x => x.OrganizationAddressInfos).WithOne(op => op.Organization).HasForeignKey(@"OrganizationId");
            modelBuilder.Entity<Organization>().HasOne(x => x.Language).WithMany(op => op.Organizations).HasForeignKey(@"LanguageId");
            modelBuilder.Entity<Organization>().HasOne(x => x.OrganizationType).WithMany(op => op.Organizations).HasForeignKey(@"OrganizationTypeId");
            modelBuilder.Entity<Organization>().HasMany(x => x.OrganizationUsers).WithOne(op => op.Organization).HasForeignKey(@"OrganizationId");
            modelBuilder.Entity<Organization>().HasMany(x => x.ProductFiles).WithOne(op => op.Organization).HasForeignKey(@"OrganizationId");
            modelBuilder.Entity<Organization>().HasMany(x => x.QualificationOrgs).WithOne(op => op.Organization).HasForeignKey(@"OrganizationId");
            modelBuilder.Entity<Organization>().HasMany(x => x.QualificationTranProducts).WithOne(op => op.Organization).HasForeignKey(@"OrganizationId");
            modelBuilder.Entity<Organization>().HasMany(x => x.RtoOrganizations).WithOne(op => op.Organization).HasForeignKey(@"OrganizationId");
            modelBuilder.Entity<Organization>().HasMany(x => x.Settings).WithOne(op => op.Organization).HasForeignKey(@"OrganizationId");
            modelBuilder.Entity<Organization>().HasMany(x => x.UserQualifications).WithOne(op => op.Organization).HasForeignKey(@"OrganizationId");

        #endregion

        #region OrganizationType Navigation properties

            modelBuilder.Entity<OrganizationType>().HasMany(x => x.Organizations).WithOne(op => op.OrganizationType).HasForeignKey(@"OrganizationTypeId");

        #endregion

        #region OrganizationUser Navigation properties

            modelBuilder.Entity<OrganizationUser>().HasOne(x => x.Organization).WithMany(op => op.OrganizationUsers).HasForeignKey(@"OrganizationId");
            modelBuilder.Entity<OrganizationUser>().HasOne(x => x.User).WithMany(op => op.OrganizationUsers).HasForeignKey(@"UserId");

        #endregion

        #region Permission Navigation properties

            modelBuilder.Entity<Permission>().HasMany(x => x.UserTypePermissions).WithOne(op => op.Permission).IsRequired(true).HasForeignKey(@"PermissionId");

        #endregion

        #region PriorEducation Navigation properties

            modelBuilder.Entity<PriorEducation>().HasMany(x => x.LeanerPriorEducations).WithOne(op => op.PriorEducation).HasForeignKey(@"PriorEducationId");

        #endregion

        #region ProductFileNote Navigation properties

            modelBuilder.Entity<ProductFileNote>().HasOne(x => x.ProductFile).WithMany(op => op.ProductFileNotes).HasForeignKey(@"ProductFileId");

        #endregion

        #region ProductFile Navigation properties

            modelBuilder.Entity<ProductFile>().HasMany(x => x.Envets).WithOne(op => op.ProductFile).HasForeignKey(@"ProductFileId");
            modelBuilder.Entity<ProductFile>().HasMany(x => x.Invoices).WithOne(op => op.ProductFile).HasForeignKey(@"ProductFileId");
            modelBuilder.Entity<ProductFile>().HasMany(x => x.ProductFileNotes).WithOne(op => op.ProductFile).HasForeignKey(@"ProductFileId");
            modelBuilder.Entity<ProductFile>().HasOne(x => x.Organization).WithMany(op => op.ProductFiles).HasForeignKey(@"OrganizationId");
            modelBuilder.Entity<ProductFile>().HasOne(x => x.File).WithMany(op => op.ProductFiles).HasForeignKey(@"FileId");
            modelBuilder.Entity<ProductFile>().HasOne(x => x.RtoInfo).WithMany(op => op.ProductFiles).HasForeignKey(@"RtoId");
            modelBuilder.Entity<ProductFile>().HasMany(x => x.QualificationTranProducts).WithOne(op => op.ProductFile).HasForeignKey(@"ProductFileId");

        #endregion

        #region QualificationGroupFilter Navigation properties

            modelBuilder.Entity<QualificationGroupFilter>().HasOne(x => x.QualificationGroup).WithMany(op => op.QualificationGroupFilters).HasForeignKey(@"QualificationGroupId");

        #endregion

        #region QualificationGroupRule Navigation properties

            modelBuilder.Entity<QualificationGroupRule>().HasOne(x => x.QualificationGroup).WithMany(op => op.QualificationGroupRules).HasForeignKey(@"QualificationGroupId");

        #endregion

        #region QualificationGroup Navigation properties

            modelBuilder.Entity<QualificationGroup>().HasMany(x => x.QualificationGroupFilters).WithOne(op => op.QualificationGroup).HasForeignKey(@"QualificationGroupId");
            modelBuilder.Entity<QualificationGroup>().HasMany(x => x.QualificationGroupRules).WithOne(op => op.QualificationGroup).HasForeignKey(@"QualificationGroupId");
            modelBuilder.Entity<QualificationGroup>().HasOne(x => x.QualificationGroupSet).WithMany(op => op.QualificationGroups).HasForeignKey(@"QualificationGroupSetId");
            modelBuilder.Entity<QualificationGroup>().HasOne(x => x.Qualification).WithMany(op => op.QualificationGroups).HasForeignKey(@"QualificationId");
            modelBuilder.Entity<QualificationGroup>().HasMany(x => x.QualificationOrgUnits).WithOne(op => op.QualificationGroup).HasForeignKey(@"QualificationGroupId");
            modelBuilder.Entity<QualificationGroup>().HasMany(x => x.QualificationTranUnits).WithOne(op => op.QualificationGroup).HasForeignKey(@"QualificationGroupId");
            modelBuilder.Entity<QualificationGroup>().HasMany(x => x.QualificationUnits).WithOne(op => op.QualificationGroup).HasForeignKey(@"QualificationGroupId");

        #endregion

        #region QualificationGroupSetRule Navigation properties

            modelBuilder.Entity<QualificationGroupSetRule>().HasOne(x => x.QualificationGroupSet).WithMany(op => op.QualificationGroupSetRules).HasForeignKey(@"QualificationGroupSetId");

        #endregion

        #region QualificationGroupSet Navigation properties

            modelBuilder.Entity<QualificationGroupSet>().HasMany(x => x.QualificationGroups).WithOne(op => op.QualificationGroupSet).HasForeignKey(@"QualificationGroupSetId");
            modelBuilder.Entity<QualificationGroupSet>().HasMany(x => x.QualificationGroupSetRules).WithOne(op => op.QualificationGroupSet).HasForeignKey(@"QualificationGroupSetId");
            modelBuilder.Entity<QualificationGroupSet>().HasOne(x => x.Qualification).WithMany(op => op.QualificationGroupSets).HasForeignKey(@"QualificationId");

        #endregion

        #region QualificationOrg Navigation properties

            modelBuilder.Entity<QualificationOrg>().HasMany(x => x.AvetmisEnrollments).WithOne(op => op.QualificationOrg).HasForeignKey(@"QualificationOrgId");
            modelBuilder.Entity<QualificationOrg>().HasMany(x => x.ClassInfos).WithOne(op => op.QualificationOrg).HasForeignKey(@"QualificationOrgId");
            modelBuilder.Entity<QualificationOrg>().HasMany(x => x.Envets).WithOne(op => op.QualificationOrg).HasForeignKey(@"QualificationOrgId");
            modelBuilder.Entity<QualificationOrg>().HasMany(x => x.Evidences).WithOne(op => op.QualificationOrg).HasForeignKey(@"QualificationOrgId");
            modelBuilder.Entity<QualificationOrg>().HasOne(x => x.Organization).WithMany(op => op.QualificationOrgs).HasForeignKey(@"OrganizationId");
            modelBuilder.Entity<QualificationOrg>().HasOne(x => x.QualificationTranProduct).WithOne(op => op.QualificationOrg).HasForeignKey(typeof(QualificationOrg), @"QualificationTranProductId");
            modelBuilder.Entity<QualificationOrg>().HasMany(x => x.QualificationOrgUnits).WithOne(op => op.QualificationOrg).HasForeignKey(@"QualificationOrgId");
            modelBuilder.Entity<QualificationOrg>().HasMany(x => x.UserQualifications).WithOne(op => op.QualificationOrg).HasForeignKey(@"QualificationOrgId");

        #endregion

        #region QualificationOrgUnit Navigation properties

            modelBuilder.Entity<QualificationOrgUnit>().HasOne(x => x.QualificationGroup).WithMany(op => op.QualificationOrgUnits).HasForeignKey(@"QualificationGroupId");
            modelBuilder.Entity<QualificationOrgUnit>().HasOne(x => x.QualificationOrg).WithMany(op => op.QualificationOrgUnits).HasForeignKey(@"QualificationOrgId");
            modelBuilder.Entity<QualificationOrgUnit>().HasOne(x => x.Unit).WithMany(op => op.QualificationOrgUnits).HasForeignKey(@"UnitId");

        #endregion

        #region Qualification Navigation properties

            modelBuilder.Entity<Qualification>().HasMany(x => x.QualificationGroups).WithOne(op => op.Qualification).HasForeignKey(@"QualificationId");
            modelBuilder.Entity<Qualification>().HasMany(x => x.QualificationGroupSets).WithOne(op => op.Qualification).HasForeignKey(@"QualificationId");
            modelBuilder.Entity<Qualification>().HasMany(x => x.QualificationScopes).WithOne(op => op.Qualification).HasForeignKey(@"QualificationId");
            modelBuilder.Entity<Qualification>().HasMany(x => x.QualificationUnitMasters).WithOne(op => op.Qualification).IsRequired(true).HasForeignKey(@"QualificationId");
            modelBuilder.Entity<Qualification>().HasMany(x => x.QualificationUnits).WithOne(op => op.Qualification).HasForeignKey(@"QualificationId");
            modelBuilder.Entity<Qualification>().HasMany(x => x.TrainingQualifications).WithOne(op => op.Qualification).HasForeignKey(@"QualificationId");
            modelBuilder.Entity<Qualification>().HasMany(x => x.UserQualifications).WithOne(op => op.Qualification).HasForeignKey(@"QualificationId");

        #endregion

        #region QualificationScope Navigation properties

            modelBuilder.Entity<QualificationScope>().HasOne(x => x.RtoInfo).WithMany(op => op.QualificationScopes).HasForeignKey(@"RtoId");
            modelBuilder.Entity<QualificationScope>().HasOne(x => x.Qualification).WithMany(op => op.QualificationScopes).HasForeignKey(@"QualificationId");
            modelBuilder.Entity<QualificationScope>().HasMany(x => x.QualificationTrans).WithOne(op => op.QualificationScope).HasForeignKey(@"QualificationScopeId");

        #endregion

        #region QualificationTranProduct Navigation properties

            modelBuilder.Entity<QualificationTranProduct>().HasOne(x => x.QualificationOrg).WithOne(op => op.QualificationTranProduct).IsRequired(true).HasForeignKey(typeof(QualificationOrg), @"QualificationTranProductId");
            modelBuilder.Entity<QualificationTranProduct>().HasOne(x => x.Organization).WithMany(op => op.QualificationTranProducts).HasForeignKey(@"OrganizationId");
            modelBuilder.Entity<QualificationTranProduct>().HasOne(x => x.ProductFile).WithMany(op => op.QualificationTranProducts).HasForeignKey(@"ProductFileId");
            modelBuilder.Entity<QualificationTranProduct>().HasOne(x => x.QualificationTran).WithMany(op => op.QualificationTranProducts).HasForeignKey(@"QualificationTranId");
            modelBuilder.Entity<QualificationTranProduct>().HasOne(x => x.RtoInfo).WithMany(op => op.QualificationTranProducts).HasForeignKey(@"RtoId");

        #endregion

        #region QualificationTran Navigation properties

            modelBuilder.Entity<QualificationTran>().HasMany(x => x.QualificationTranProducts).WithOne(op => op.QualificationTran).HasForeignKey(@"QualificationTranId");
            modelBuilder.Entity<QualificationTran>().HasOne(x => x.QualificationScope).WithMany(op => op.QualificationTrans).HasForeignKey(@"QualificationScopeId");
            modelBuilder.Entity<QualificationTran>().HasMany(x => x.QualificationTranUnits).WithOne(op => op.QualificationTran).HasForeignKey(@"QualificationTranId");

        #endregion

        #region QualificationTranUnit Navigation properties

            modelBuilder.Entity<QualificationTranUnit>().HasOne(x => x.QualificationGroup).WithMany(op => op.QualificationTranUnits).HasForeignKey(@"QualificationGroupId");
            modelBuilder.Entity<QualificationTranUnit>().HasOne(x => x.QualificationTran).WithMany(op => op.QualificationTranUnits).HasForeignKey(@"QualificationTranId");
            modelBuilder.Entity<QualificationTranUnit>().HasOne(x => x.Unit).WithMany(op => op.QualificationTranUnits).HasForeignKey(@"UnitId");

        #endregion

        #region QualificationUnitMaster Navigation properties

            modelBuilder.Entity<QualificationUnitMaster>().HasOne(x => x.Qualification).WithMany(op => op.QualificationUnitMasters).IsRequired(true).HasForeignKey(@"QualificationId");
            modelBuilder.Entity<QualificationUnitMaster>().HasOne(x => x.UnitMaster).WithMany(op => op.QualificationUnitMasters).HasForeignKey(@"UnitMasterId");

        #endregion

        #region QualificationUnit Navigation properties

            modelBuilder.Entity<QualificationUnit>().HasOne(x => x.UnitMaster).WithMany(op => op.QualificationUnits).HasForeignKey(@"UnitMasterId");
            modelBuilder.Entity<QualificationUnit>().HasOne(x => x.QualificationGroup).WithMany(op => op.QualificationUnits).HasForeignKey(@"QualificationGroupId");
            modelBuilder.Entity<QualificationUnit>().HasOne(x => x.Qualification).WithMany(op => op.QualificationUnits).HasForeignKey(@"QualificationId");

        #endregion

        #region QuestionFillBlankOption Navigation properties

            modelBuilder.Entity<QuestionFillBlankOption>().HasOne(x => x.QuestionFillBlank).WithMany(op => op.QuestionFillBlankOptions).HasForeignKey(@"QuestionFillBlankId");

        #endregion

        #region QuestionFillBlank Navigation properties

            modelBuilder.Entity<QuestionFillBlank>().HasMany(x => x.QuestionFillBlankOptions).WithOne(op => op.QuestionFillBlank).HasForeignKey(@"QuestionFillBlankId");
            modelBuilder.Entity<QuestionFillBlank>().HasOne(x => x.Question).WithMany(op => op.QuestionFillBlanks).HasForeignKey(@"QuestionId");

        #endregion

        #region QuestionFreeText Navigation properties

            modelBuilder.Entity<QuestionFreeText>().HasOne(x => x.Question).WithMany(op => op.QuestionFreeTexts).HasForeignKey(@"QuestionId");

        #endregion

        #region QuestionOption Navigation properties

            modelBuilder.Entity<QuestionOption>().HasOne(x => x.Question).WithMany(op => op.QuestionOptions).HasForeignKey(@"QuestionId");
            modelBuilder.Entity<QuestionOption>().HasMany(x => x.UserQuestionOptions).WithOne(op => op.QuestionOption).HasForeignKey(@"QuestionOptionId");

        #endregion

        #region Question Navigation properties

            modelBuilder.Entity<Question>().HasMany(x => x.QuestionFillBlanks).WithOne(op => op.Question).HasForeignKey(@"QuestionId");
            modelBuilder.Entity<Question>().HasMany(x => x.QuestionFreeTexts).WithOne(op => op.Question).HasForeignKey(@"QuestionId");
            modelBuilder.Entity<Question>().HasMany(x => x.QuestionOptions).WithOne(op => op.Question).HasForeignKey(@"QuestionId");
            modelBuilder.Entity<Question>().HasOne(x => x.QuestionType).WithMany(op => op.Questions).HasForeignKey(@"QuestionTypeId");
            modelBuilder.Entity<Question>().HasOne(x => x.RtoInfo).WithMany(op => op.Questions).IsRequired(true).HasForeignKey(@"RtoId");
            modelBuilder.Entity<Question>().HasMany(x => x.RandomizeQuestions_QuestionId).WithOne(op => op.Question_QuestionId).IsRequired(true).HasForeignKey(@"QuestionId");
            modelBuilder.Entity<Question>().HasMany(x => x.RandomizeQuestions_RandomQuestionId).WithOne(op => op.Question_RandomQuestionId).HasForeignKey(@"RandomQuestionId");
            modelBuilder.Entity<Question>().HasMany(x => x.TestQuestions).WithOne(op => op.Question).IsRequired(true).HasForeignKey(@"QuestionId");
            modelBuilder.Entity<Question>().HasMany(x => x.UploadFiles).WithOne(op => op.Question).HasForeignKey(@"QuestionId");
            modelBuilder.Entity<Question>().HasMany(x => x.UserQuestions).WithOne(op => op.Question).HasForeignKey(@"QuestionId");

        #endregion

        #region QuestionType Navigation properties

            modelBuilder.Entity<QuestionType>().HasMany(x => x.Questions).WithOne(op => op.QuestionType).HasForeignKey(@"QuestionTypeId");

        #endregion

        #region RandomizeQuestion Navigation properties

            modelBuilder.Entity<RandomizeQuestion>().HasOne(x => x.Question_QuestionId).WithMany(op => op.RandomizeQuestions_QuestionId).IsRequired(true).HasForeignKey(@"QuestionId");
            modelBuilder.Entity<RandomizeQuestion>().HasOne(x => x.Question_RandomQuestionId).WithMany(op => op.RandomizeQuestions_RandomQuestionId).HasForeignKey(@"RandomQuestionId");

        #endregion

        #region Role Navigation properties

            modelBuilder.Entity<Role>().HasMany(x => x.UserRoles).WithOne(op => op.Role).OnDelete(DeleteBehavior.Cascade).IsRequired(true).HasForeignKey(@"RoleId");
            modelBuilder.Entity<Role>().HasMany(x => x.UserTypes).WithOne(op => op.Role).HasForeignKey(@"RoleId");

        #endregion

        #region RtoAddressInfo Navigation properties

            modelBuilder.Entity<RtoAddressInfo>().HasOne(x => x.AddressInfo).WithMany(op => op.RtoAddressInfos).HasForeignKey(@"AddressId");
            modelBuilder.Entity<RtoAddressInfo>().HasOne(x => x.RtoInfo).WithMany(op => op.RtoAddressInfos).HasForeignKey(@"RtoId");

        #endregion

        #region RtoInfo Navigation properties

            modelBuilder.Entity<RtoInfo>().HasMany(x => x.ActivityLogs).WithOne(op => op.RtoInfo).HasForeignKey(@"RtoId");
            modelBuilder.Entity<RtoInfo>().HasMany(x => x.CourseInfos).WithOne(op => op.RtoInfo).HasForeignKey(@"RtoId");
            modelBuilder.Entity<RtoInfo>().HasMany(x => x.Envets).WithOne(op => op.RtoInfo).HasForeignKey(@"RtoId");
            modelBuilder.Entity<RtoInfo>().HasMany(x => x.Invoices).WithOne(op => op.RtoInfo).HasForeignKey(@"RtoId");
            modelBuilder.Entity<RtoInfo>().HasMany(x => x.ProductFiles).WithOne(op => op.RtoInfo).HasForeignKey(@"RtoId");
            modelBuilder.Entity<RtoInfo>().HasMany(x => x.QualificationScopes).WithOne(op => op.RtoInfo).HasForeignKey(@"RtoId");
            modelBuilder.Entity<RtoInfo>().HasMany(x => x.QualificationTranProducts).WithOne(op => op.RtoInfo).HasForeignKey(@"RtoId");
            modelBuilder.Entity<RtoInfo>().HasMany(x => x.Questions).WithOne(op => op.RtoInfo).IsRequired(true).HasForeignKey(@"RtoId");
            modelBuilder.Entity<RtoInfo>().HasMany(x => x.RtoAddressInfos).WithOne(op => op.RtoInfo).HasForeignKey(@"RtoId");
            modelBuilder.Entity<RtoInfo>().HasMany(x => x.RtoOrganizations).WithOne(op => op.RtoInfo).HasForeignKey(@"RtoId");
            modelBuilder.Entity<RtoInfo>().HasMany(x => x.RtoUsers).WithOne(op => op.RtoInfo).HasForeignKey(@"RtoId");
            modelBuilder.Entity<RtoInfo>().HasMany(x => x.Settings).WithOne(op => op.RtoInfo).HasForeignKey(@"RtoId");
            modelBuilder.Entity<RtoInfo>().HasMany(x => x.Units).WithOne(op => op.RtoInfo).HasForeignKey(@"RtoId");

        #endregion

        #region RtoOrganization Navigation properties

            modelBuilder.Entity<RtoOrganization>().HasOne(x => x.Organization).WithMany(op => op.RtoOrganizations).HasForeignKey(@"OrganizationId");
            modelBuilder.Entity<RtoOrganization>().HasOne(x => x.RtoInfo).WithMany(op => op.RtoOrganizations).HasForeignKey(@"RtoId");

        #endregion

        #region RtoUser Navigation properties

            modelBuilder.Entity<RtoUser>().HasOne(x => x.RtoInfo).WithMany(op => op.RtoUsers).HasForeignKey(@"RtoId");
            modelBuilder.Entity<RtoUser>().HasOne(x => x.User).WithMany(op => op.RtoUsers).HasForeignKey(@"UserId");

        #endregion

        #region Scorm Navigation properties

            modelBuilder.Entity<Scorm>().HasMany(x => x.UnitScorms).WithOne(op => op.Scorm).HasForeignKey(@"ScormId");

        #endregion

        #region Section Navigation properties

            modelBuilder.Entity<Section>().HasMany(x => x.UnitSections).WithOne(op => op.Section).HasForeignKey(@"SectionId");

        #endregion

        #region Setting Navigation properties

            modelBuilder.Entity<Setting>().HasOne(x => x.Organization).WithMany(op => op.Settings).HasForeignKey(@"OrganizationId");
            modelBuilder.Entity<Setting>().HasOne(x => x.RtoInfo).WithMany(op => op.Settings).HasForeignKey(@"RtoId");

        #endregion

        #region StateInfo Navigation properties

            modelBuilder.Entity<StateInfo>().HasMany(x => x.AddressInfos).WithOne(op => op.StateInfo).HasForeignKey(@"StateId");
            modelBuilder.Entity<StateInfo>().HasMany(x => x.LearnerInfos).WithOne(op => op.StateInfo).HasForeignKey(@"StateId");
            modelBuilder.Entity<StateInfo>().HasMany(x => x.LearnerPostAddressInfos).WithOne(op => op.StateInfo).HasForeignKey(@"StateId");
            modelBuilder.Entity<StateInfo>().HasOne(x => x.CountryInfo).WithMany(op => op.StateInfos).HasForeignKey(@"CountryId");

        #endregion

        #region StudentClassInfo Navigation properties

            modelBuilder.Entity<StudentClassInfo>().HasOne(x => x.ClassInfo).WithMany(op => op.StudentClassInfos).HasForeignKey(@"ClassId");
            modelBuilder.Entity<StudentClassInfo>().HasOne(x => x.User).WithMany(op => op.StudentClassInfos).HasForeignKey(@"UserId");

        #endregion

        #region StudentNote Navigation properties

            modelBuilder.Entity<StudentNote>().HasOne(x => x.User).WithMany(op => op.StudentNotes).HasForeignKey(@"UserId");

        #endregion

        #region TestQuestion Navigation properties

            modelBuilder.Entity<TestQuestion>().HasOne(x => x.Question).WithMany(op => op.TestQuestions).IsRequired(true).HasForeignKey(@"QuestionId");
            modelBuilder.Entity<TestQuestion>().HasOne(x => x.Test).WithMany(op => op.TestQuestions).IsRequired(true).HasForeignKey(@"TestId");

        #endregion

        #region Test Navigation properties

            modelBuilder.Entity<Test>().HasMany(x => x.CourseTests).WithOne(op => op.Test).IsRequired(true).HasForeignKey(@"TestId");
            modelBuilder.Entity<Test>().HasMany(x => x.TestQuestions).WithOne(op => op.Test).IsRequired(true).HasForeignKey(@"TestId");
            modelBuilder.Entity<Test>().HasMany(x => x.UnitTests).WithOne(op => op.Test).IsRequired(true).HasForeignKey(@"TestId");
            modelBuilder.Entity<Test>().HasMany(x => x.UserTests).WithOne(op => op.Test).HasForeignKey(@"TestId");

        #endregion

        #region TrainerClassInfo Navigation properties

            modelBuilder.Entity<TrainerClassInfo>().HasOne(x => x.ClassInfo).WithMany(op => op.TrainerClassInfos).HasForeignKey(@"ClassId");
            modelBuilder.Entity<TrainerClassInfo>().HasOne(x => x.User).WithMany(op => op.TrainerClassInfos).HasForeignKey(@"UserId");

        #endregion

        #region TrainingPackage Navigation properties

            modelBuilder.Entity<TrainingPackage>().HasMany(x => x.TrainingQualifications).WithOne(op => op.TrainingPackage).HasForeignKey(@"TrainingPackageId");

        #endregion

        #region TrainingQualification Navigation properties

            modelBuilder.Entity<TrainingQualification>().HasOne(x => x.Qualification).WithMany(op => op.TrainingQualifications).HasForeignKey(@"QualificationId");
            modelBuilder.Entity<TrainingQualification>().HasOne(x => x.TrainingPackage).WithMany(op => op.TrainingQualifications).HasForeignKey(@"TrainingPackageId");

        #endregion

        #region UnitAssignment Navigation properties

            modelBuilder.Entity<UnitAssignment>().HasOne(x => x.Unit).WithMany(op => op.UnitAssignments).IsRequired(true).HasForeignKey(@"UnitId");
            modelBuilder.Entity<UnitAssignment>().HasOne(x => x.Assignment).WithMany(op => op.UnitAssignments).IsRequired(true).HasForeignKey(@"AssignmentId");

        #endregion

        #region UnitContent Navigation properties

            modelBuilder.Entity<UnitContent>().HasOne(x => x.Unit).WithMany(op => op.UnitContents).IsRequired(true).HasForeignKey(@"UnitId");
            modelBuilder.Entity<UnitContent>().HasOne(x => x.Content).WithMany(op => op.UnitContents).IsRequired(true).HasForeignKey(@"ContentId");

        #endregion

        #region UnitMaster Navigation properties

            modelBuilder.Entity<UnitMaster>().HasMany(x => x.QualificationUnitMasters).WithOne(op => op.UnitMaster).HasForeignKey(@"UnitMasterId");
            modelBuilder.Entity<UnitMaster>().HasMany(x => x.QualificationUnits).WithOne(op => op.UnitMaster).HasForeignKey(@"UnitMasterId");
            modelBuilder.Entity<UnitMaster>().HasMany(x => x.Units).WithOne(op => op.UnitMaster).HasForeignKey(@"UnitMasterId");

        #endregion

        #region Unit Navigation properties

            modelBuilder.Entity<Unit>().HasMany(x => x.AvetmisEnrollments).WithOne(op => op.Unit).HasForeignKey(@"UnitId");
            modelBuilder.Entity<Unit>().HasMany(x => x.ClassInfos).WithOne(op => op.Unit).HasForeignKey(@"UnitId");
            modelBuilder.Entity<Unit>().HasMany(x => x.Envets).WithOne(op => op.Unit).HasForeignKey(@"UnitId");
            modelBuilder.Entity<Unit>().HasMany(x => x.Evidences).WithOne(op => op.Unit).HasForeignKey(@"UnitId");
            modelBuilder.Entity<Unit>().HasMany(x => x.QualificationOrgUnits).WithOne(op => op.Unit).HasForeignKey(@"UnitId");
            modelBuilder.Entity<Unit>().HasMany(x => x.QualificationTranUnits).WithOne(op => op.Unit).HasForeignKey(@"UnitId");
            modelBuilder.Entity<Unit>().HasMany(x => x.UnitAssignments).WithOne(op => op.Unit).IsRequired(true).HasForeignKey(@"UnitId");
            modelBuilder.Entity<Unit>().HasMany(x => x.UnitContents).WithOne(op => op.Unit).IsRequired(true).HasForeignKey(@"UnitId");
            modelBuilder.Entity<Unit>().HasOne(x => x.File_StudentZipFileId).WithMany(op => op.Units_StudentZipFileId).HasForeignKey(@"StudentZipFileId");
            modelBuilder.Entity<Unit>().HasOne(x => x.File_TrainerZipFileId).WithMany(op => op.Units_TrainerZipFileId).HasForeignKey(@"TrainerZipFileId");
            modelBuilder.Entity<Unit>().HasOne(x => x.RtoInfo).WithMany(op => op.Units).HasForeignKey(@"RtoId");
            modelBuilder.Entity<Unit>().HasOne(x => x.UnitMaster).WithMany(op => op.Units).HasForeignKey(@"UnitMasterId");
            modelBuilder.Entity<Unit>().HasMany(x => x.UnitScorms).WithOne(op => op.Unit).HasForeignKey(@"UnitId");
            modelBuilder.Entity<Unit>().HasMany(x => x.UnitSections).WithOne(op => op.Unit).HasForeignKey(@"UnitId");
            modelBuilder.Entity<Unit>().HasMany(x => x.UnitTests).WithOne(op => op.Unit).IsRequired(true).HasForeignKey(@"UnitId");
            modelBuilder.Entity<Unit>().HasMany(x => x.UnitUploadFiles).WithOne(op => op.Unit).HasForeignKey(@"UnitId");
            modelBuilder.Entity<Unit>().HasMany(x => x.UserUnits).WithOne(op => op.Unit).HasForeignKey(@"UnitId");

        #endregion

        #region UnitScorm Navigation properties

            modelBuilder.Entity<UnitScorm>().HasOne(x => x.Scorm).WithMany(op => op.UnitScorms).HasForeignKey(@"ScormId");
            modelBuilder.Entity<UnitScorm>().HasOne(x => x.Unit).WithMany(op => op.UnitScorms).HasForeignKey(@"UnitId");

        #endregion

        #region UnitSection Navigation properties

            modelBuilder.Entity<UnitSection>().HasOne(x => x.Section).WithMany(op => op.UnitSections).HasForeignKey(@"SectionId");
            modelBuilder.Entity<UnitSection>().HasOne(x => x.Unit).WithMany(op => op.UnitSections).HasForeignKey(@"UnitId");

        #endregion

        #region UnitTest Navigation properties

            modelBuilder.Entity<UnitTest>().HasOne(x => x.Test).WithMany(op => op.UnitTests).IsRequired(true).HasForeignKey(@"TestId");
            modelBuilder.Entity<UnitTest>().HasOne(x => x.Unit).WithMany(op => op.UnitTests).IsRequired(true).HasForeignKey(@"UnitId");

        #endregion

        #region UnitUploadFile Navigation properties

            modelBuilder.Entity<UnitUploadFile>().HasOne(x => x.UploadFile).WithMany(op => op.UnitUploadFiles).HasForeignKey(@"UploadFileId");
            modelBuilder.Entity<UnitUploadFile>().HasOne(x => x.Unit).WithMany(op => op.UnitUploadFiles).HasForeignKey(@"UnitId");

        #endregion

        #region UploadFile Navigation properties

            modelBuilder.Entity<UploadFile>().HasMany(x => x.CourseUploadFiles).WithOne(op => op.UploadFile).HasForeignKey(@"UploadFileId");
            modelBuilder.Entity<UploadFile>().HasMany(x => x.UnitUploadFiles).WithOne(op => op.UploadFile).HasForeignKey(@"UploadFileId");
            modelBuilder.Entity<UploadFile>().HasOne(x => x.CompleteType).WithMany(op => op.UploadFiles).HasForeignKey(@"CompleteTypeId");
            modelBuilder.Entity<UploadFile>().HasOne(x => x.Question).WithMany(op => op.UploadFiles).HasForeignKey(@"QuestionId");
            modelBuilder.Entity<UploadFile>().HasMany(x => x.UserUploadFiles).WithOne(op => op.UploadFile).HasForeignKey(@"UploadFileId");

        #endregion

        #region UserAddressInfo Navigation properties

            modelBuilder.Entity<UserAddressInfo>().HasOne(x => x.AddressInfo).WithMany(op => op.UserAddressInfos).HasForeignKey(@"AddressId");
            modelBuilder.Entity<UserAddressInfo>().HasOne(x => x.User).WithMany(op => op.UserAddressInfos).HasForeignKey(@"UserId");

        #endregion

        #region UserAssignment Navigation properties

            modelBuilder.Entity<UserAssignment>().HasOne(x => x.Assignment).WithMany(op => op.UserAssignments).HasForeignKey(@"AssignmentId");
            modelBuilder.Entity<UserAssignment>().HasOne(x => x.UserUnit).WithMany(op => op.UserAssignments).HasForeignKey(@"UserUnitId");

        #endregion

        #region UserClaim Navigation properties

            modelBuilder.Entity<UserClaim>().HasOne(x => x.User).WithMany(op => op.UserClaims).OnDelete(DeleteBehavior.Cascade).IsRequired(true).HasForeignKey(@"UserId");

        #endregion

        #region UserContent Navigation properties

            modelBuilder.Entity<UserContent>().HasOne(x => x.Content).WithMany(op => op.UserContents).HasForeignKey(@"ContentId");
            modelBuilder.Entity<UserContent>().HasOne(x => x.UserUnit).WithMany(op => op.UserContents).HasForeignKey(@"UserUnitId");

        #endregion

        #region UserDocument Navigation properties

            modelBuilder.Entity<UserDocument>().HasOne(x => x.File).WithMany(op => op.UserDocuments).HasForeignKey(@"FileId");
            modelBuilder.Entity<UserDocument>().HasOne(x => x.User).WithMany(op => op.UserDocuments).IsRequired(true).HasForeignKey(@"UserId");

        #endregion

        #region UserGroupDetail Navigation properties

            modelBuilder.Entity<UserGroupDetail>().HasOne(x => x.UserGroup).WithMany(op => op.UserGroupDetails).IsRequired(true).HasForeignKey(@"UserGroupId");

        #endregion

        #region UserGroup Navigation properties

            modelBuilder.Entity<UserGroup>().HasMany(x => x.UserGroupDetails).WithOne(op => op.UserGroup).IsRequired(true).HasForeignKey(@"UserGroupId");

        #endregion

        #region UserLogin Navigation properties

            modelBuilder.Entity<UserLogin>().HasOne(x => x.User).WithMany(op => op.UserLogins).OnDelete(DeleteBehavior.Cascade).IsRequired(true).HasForeignKey(@"UserId");

        #endregion

        #region UserQualification Navigation properties

            modelBuilder.Entity<UserQualification>().HasOne(x => x.Organization).WithMany(op => op.UserQualifications).HasForeignKey(@"OrganizationId");
            modelBuilder.Entity<UserQualification>().HasOne(x => x.QualificationOrg).WithMany(op => op.UserQualifications).HasForeignKey(@"QualificationOrgId");
            modelBuilder.Entity<UserQualification>().HasOne(x => x.Qualification).WithMany(op => op.UserQualifications).HasForeignKey(@"QualificationId");
            modelBuilder.Entity<UserQualification>().HasOne(x => x.User).WithMany(op => op.UserQualifications).HasForeignKey(@"UserId");
            modelBuilder.Entity<UserQualification>().HasMany(x => x.UserStates).WithOne(op => op.UserQualification).HasForeignKey(@"UserQualificationId");
            modelBuilder.Entity<UserQualification>().HasMany(x => x.UserTestStates).WithOne(op => op.UserQualification).HasForeignKey(@"UserQualificationId");
            modelBuilder.Entity<UserQualification>().HasMany(x => x.UserUnits).WithOne(op => op.UserQualification).HasForeignKey(@"UserQualificationId");

        #endregion

        #region UserQuestionAnswer Navigation properties

            modelBuilder.Entity<UserQuestionAnswer>().HasOne(x => x.UserQuestion).WithMany(op => op.UserQuestionAnswers).HasForeignKey(@"UserQuestionId");

        #endregion

        #region UserQuestionAttempt Navigation properties

            modelBuilder.Entity<UserQuestionAttempt>().HasOne(x => x.UserQuestion).WithMany(op => op.UserQuestionAttempts).HasForeignKey(@"UserQuestionId");
            modelBuilder.Entity<UserQuestionAttempt>().HasOne(x => x.UserTestAttempt).WithMany(op => op.UserQuestionAttempts).HasForeignKey(@"UserTestAttemptId");

        #endregion

        #region UserQuestionFillBlankOption Navigation properties

            modelBuilder.Entity<UserQuestionFillBlankOption>().HasOne(x => x.UserQuestionFillBlank).WithMany(op => op.UserQuestionFillBlankOptions).HasForeignKey(@"UserQuestionFillBlankId");

        #endregion

        #region UserQuestionFillBlank Navigation properties

            modelBuilder.Entity<UserQuestionFillBlank>().HasMany(x => x.UserQuestionFillBlankOptions).WithOne(op => op.UserQuestionFillBlank).HasForeignKey(@"UserQuestionFillBlankId");
            modelBuilder.Entity<UserQuestionFillBlank>().HasOne(x => x.UserQuestion).WithMany(op => op.UserQuestionFillBlanks).HasForeignKey(@"UserQuestionId");

        #endregion

        #region UserQuestionOption Navigation properties

            modelBuilder.Entity<UserQuestionOption>().HasOne(x => x.QuestionOption).WithMany(op => op.UserQuestionOptions).HasForeignKey(@"QuestionOptionId");
            modelBuilder.Entity<UserQuestionOption>().HasOne(x => x.UserQuestion).WithMany(op => op.UserQuestionOptions).HasForeignKey(@"UserQuestionId");

        #endregion

        #region UserQuestionOptionTemplate Navigation properties

            modelBuilder.Entity<UserQuestionOptionTemplate>().HasOne(x => x.UserQuestionTemplate).WithMany(op => op.UserQuestionOptionTemplates).HasForeignKey(@"UserQuestionTemplateId");

        #endregion

        #region UserQuestion Navigation properties

            modelBuilder.Entity<UserQuestion>().HasMany(x => x.UserQuestionAnswers).WithOne(op => op.UserQuestion).HasForeignKey(@"UserQuestionId");
            modelBuilder.Entity<UserQuestion>().HasMany(x => x.UserQuestionAttempts).WithOne(op => op.UserQuestion).HasForeignKey(@"UserQuestionId");
            modelBuilder.Entity<UserQuestion>().HasMany(x => x.UserQuestionFillBlanks).WithOne(op => op.UserQuestion).HasForeignKey(@"UserQuestionId");
            modelBuilder.Entity<UserQuestion>().HasMany(x => x.UserQuestionOptions).WithOne(op => op.UserQuestion).HasForeignKey(@"UserQuestionId");
            modelBuilder.Entity<UserQuestion>().HasOne(x => x.Question).WithMany(op => op.UserQuestions).HasForeignKey(@"QuestionId");
            modelBuilder.Entity<UserQuestion>().HasOne(x => x.UserTestQuestion).WithMany(op => op.UserQuestions).HasForeignKey(@"UserTestQuestionId");
            modelBuilder.Entity<UserQuestion>().HasMany(x => x.UserRandomizeQuestions_UserRandomQuestionId).WithOne(op => op.UserQuestion_UserRandomQuestionId).HasForeignKey(@"UserRandomQuestionId");
            modelBuilder.Entity<UserQuestion>().HasMany(x => x.UserRandomizeQuestions_UserQuestionId).WithOne(op => op.UserQuestion_UserQuestionId).HasForeignKey(@"UserQuestionId");

        #endregion

        #region UserQuestionTemplate Navigation properties

            modelBuilder.Entity<UserQuestionTemplate>().HasMany(x => x.UserQuestionOptionTemplates).WithOne(op => op.UserQuestionTemplate).HasForeignKey(@"UserQuestionTemplateId");
            modelBuilder.Entity<UserQuestionTemplate>().HasOne(x => x.UserTestTemplate).WithMany(op => op.UserQuestionTemplates).HasForeignKey(@"UserTestTemplateId");

        #endregion

        #region UserRandomizeQuestion Navigation properties

            modelBuilder.Entity<UserRandomizeQuestion>().HasOne(x => x.UserQuestion_UserRandomQuestionId).WithMany(op => op.UserRandomizeQuestions_UserRandomQuestionId).HasForeignKey(@"UserRandomQuestionId");
            modelBuilder.Entity<UserRandomizeQuestion>().HasOne(x => x.UserQuestion_UserQuestionId).WithMany(op => op.UserRandomizeQuestions_UserQuestionId).HasForeignKey(@"UserQuestionId");

        #endregion

        #region UserRole Navigation properties

            modelBuilder.Entity<UserRole>().HasOne(x => x.Role).WithMany(op => op.UserRoles).OnDelete(DeleteBehavior.Cascade).IsRequired(true).HasForeignKey(@"RoleId");
            modelBuilder.Entity<UserRole>().HasOne(x => x.User).WithMany(op => op.UserRoles).OnDelete(DeleteBehavior.Cascade).IsRequired(true).HasForeignKey(@"UserId");

        #endregion

        #region User Navigation properties

            modelBuilder.Entity<User>().HasMany(x => x.ActivityLogs).WithOne(op => op.User).IsRequired(true).HasForeignKey(@"UserId");
            modelBuilder.Entity<User>().HasMany(x => x.AvetmisEnrollments).WithOne(op => op.User).HasForeignKey(@"UserId");
            modelBuilder.Entity<User>().HasMany(x => x.Envets).WithOne(op => op.User).HasForeignKey(@"UserId");
            modelBuilder.Entity<User>().HasMany(x => x.Evidences).WithOne(op => op.User).HasForeignKey(@"UserId");
            modelBuilder.Entity<User>().HasMany(x => x.LearnerInfos).WithOne(op => op.User).HasForeignKey(@"UserId");
            modelBuilder.Entity<User>().HasMany(x => x.LearnerPostAddressInfos).WithOne(op => op.User).HasForeignKey(@"UserId");
            modelBuilder.Entity<User>().HasMany(x => x.OrganizationUsers).WithOne(op => op.User).HasForeignKey(@"UserId");
            modelBuilder.Entity<User>().HasMany(x => x.RtoUsers).WithOne(op => op.User).HasForeignKey(@"UserId");
            modelBuilder.Entity<User>().HasMany(x => x.StudentClassInfos).WithOne(op => op.User).HasForeignKey(@"UserId");
            modelBuilder.Entity<User>().HasMany(x => x.StudentNotes).WithOne(op => op.User).HasForeignKey(@"UserId");
            modelBuilder.Entity<User>().HasMany(x => x.TrainerClassInfos).WithOne(op => op.User).HasForeignKey(@"UserId");
            modelBuilder.Entity<User>().HasMany(x => x.UserAddressInfos).WithOne(op => op.User).HasForeignKey(@"UserId");
            modelBuilder.Entity<User>().HasMany(x => x.UserClaims).WithOne(op => op.User).OnDelete(DeleteBehavior.Cascade).IsRequired(true).HasForeignKey(@"UserId");
            modelBuilder.Entity<User>().HasMany(x => x.UserDocuments).WithOne(op => op.User).IsRequired(true).HasForeignKey(@"UserId");
            modelBuilder.Entity<User>().HasMany(x => x.UserLogins).WithOne(op => op.User).OnDelete(DeleteBehavior.Cascade).IsRequired(true).HasForeignKey(@"UserId");
            modelBuilder.Entity<User>().HasMany(x => x.UserQualifications).WithOne(op => op.User).HasForeignKey(@"UserId");
            modelBuilder.Entity<User>().HasMany(x => x.UserRoles).WithOne(op => op.User).OnDelete(DeleteBehavior.Cascade).IsRequired(true).HasForeignKey(@"UserId");
            modelBuilder.Entity<User>().HasOne(x => x.UserType).WithMany(op => op.Users).HasForeignKey(@"UserTypeId");

        #endregion

        #region UserScorm Navigation properties

            modelBuilder.Entity<UserScorm>().HasOne(x => x.UserUnit).WithMany(op => op.UserScorms).HasForeignKey(@"UserUnitId");

        #endregion

        #region UserState Navigation properties

            modelBuilder.Entity<UserState>().HasOne(x => x.UserQualification).WithMany(op => op.UserStates).HasForeignKey(@"UserQualificationId");

        #endregion

        #region UserTestAttempt Navigation properties

            modelBuilder.Entity<UserTestAttempt>().HasMany(x => x.UserQuestionAttempts).WithOne(op => op.UserTestAttempt).HasForeignKey(@"UserTestAttemptId");
            modelBuilder.Entity<UserTestAttempt>().HasOne(x => x.UserTest).WithMany(op => op.UserTestAttempts).HasForeignKey(@"UserTestId");

        #endregion

        #region UserTestQuestion Navigation properties

            modelBuilder.Entity<UserTestQuestion>().HasMany(x => x.UserQuestions).WithOne(op => op.UserTestQuestion).HasForeignKey(@"UserTestQuestionId");
            modelBuilder.Entity<UserTestQuestion>().HasOne(x => x.UserTest).WithMany(op => op.UserTestQuestions).HasForeignKey(@"UserTestId");

        #endregion

        #region UserTest Navigation properties

            modelBuilder.Entity<UserTest>().HasMany(x => x.UserTestAttempts).WithOne(op => op.UserTest).HasForeignKey(@"UserTestId");
            modelBuilder.Entity<UserTest>().HasMany(x => x.UserTestQuestions).WithOne(op => op.UserTest).HasForeignKey(@"UserTestId");
            modelBuilder.Entity<UserTest>().HasOne(x => x.Test).WithMany(op => op.UserTests).HasForeignKey(@"TestId");
            modelBuilder.Entity<UserTest>().HasOne(x => x.UserUnit).WithMany(op => op.UserTests).HasForeignKey(@"UserUnitId");
            modelBuilder.Entity<UserTest>().HasMany(x => x.UserTestTemplates).WithOne(op => op.UserTest).HasForeignKey(@"UserTestId");

        #endregion

        #region UserTestState Navigation properties

            modelBuilder.Entity<UserTestState>().HasOne(x => x.UserQualification).WithMany(op => op.UserTestStates).HasForeignKey(@"UserQualificationId");

        #endregion

        #region UserTestTemplate Navigation properties

            modelBuilder.Entity<UserTestTemplate>().HasMany(x => x.UserQuestionTemplates).WithOne(op => op.UserTestTemplate).HasForeignKey(@"UserTestTemplateId");
            modelBuilder.Entity<UserTestTemplate>().HasOne(x => x.UserTest).WithMany(op => op.UserTestTemplates).HasForeignKey(@"UserTestId");

        #endregion

        #region UserTypePermission Navigation properties

            modelBuilder.Entity<UserTypePermission>().HasOne(x => x.Permission).WithMany(op => op.UserTypePermissions).IsRequired(true).HasForeignKey(@"PermissionId");
            modelBuilder.Entity<UserTypePermission>().HasOne(x => x.UserType).WithMany(op => op.UserTypePermissions).IsRequired(true).HasForeignKey(@"UserTypeId");

        #endregion

        #region UserType Navigation properties

            modelBuilder.Entity<UserType>().HasMany(x => x.Users).WithOne(op => op.UserType).HasForeignKey(@"UserTypeId");
            modelBuilder.Entity<UserType>().HasMany(x => x.UserTypePermissions).WithOne(op => op.UserType).IsRequired(true).HasForeignKey(@"UserTypeId");
            modelBuilder.Entity<UserType>().HasOne(x => x.Role).WithMany(op => op.UserTypes).HasForeignKey(@"RoleId");

        #endregion

        #region UserUnit Navigation properties

            modelBuilder.Entity<UserUnit>().HasMany(x => x.UserAssignments).WithOne(op => op.UserUnit).HasForeignKey(@"UserUnitId");
            modelBuilder.Entity<UserUnit>().HasMany(x => x.UserContents).WithOne(op => op.UserUnit).HasForeignKey(@"UserUnitId");
            modelBuilder.Entity<UserUnit>().HasMany(x => x.UserScorms).WithOne(op => op.UserUnit).HasForeignKey(@"UserUnitId");
            modelBuilder.Entity<UserUnit>().HasMany(x => x.UserTests).WithOne(op => op.UserUnit).HasForeignKey(@"UserUnitId");
            modelBuilder.Entity<UserUnit>().HasOne(x => x.Unit).WithMany(op => op.UserUnits).HasForeignKey(@"UnitId");
            modelBuilder.Entity<UserUnit>().HasOne(x => x.UserQualification).WithMany(op => op.UserUnits).HasForeignKey(@"UserQualificationId");
            modelBuilder.Entity<UserUnit>().HasMany(x => x.UserUploadFiles).WithOne(op => op.UserUnit).HasForeignKey(@"UserUnitId");

        #endregion

        #region UserUploadFile Navigation properties

            modelBuilder.Entity<UserUploadFile>().HasOne(x => x.UploadFile).WithMany(op => op.UserUploadFiles).HasForeignKey(@"UploadFileId");
            modelBuilder.Entity<UserUploadFile>().HasOne(x => x.UserUnit).WithMany(op => op.UserUploadFiles).HasForeignKey(@"UserUnitId");

        #endregion

        #region ZipContent Navigation properties

            modelBuilder.Entity<ZipContent>().HasOne(x => x.File).WithMany(op => op.ZipContents).IsRequired(true).HasForeignKey(@"FileId");
            modelBuilder.Entity<ZipContent>().HasOne(x => x.ZipJob).WithMany(op => op.ZipContents).IsRequired(true).HasForeignKey(@"JobId");

        #endregion

        #region ZipJob Navigation properties

            modelBuilder.Entity<ZipJob>().HasMany(x => x.ZipContents).WithOne(op => op.ZipJob).IsRequired(true).HasForeignKey(@"JobId");
            modelBuilder.Entity<ZipJob>().HasOne(x => x.File).WithMany(op => op.ZipJobs).IsRequired(true).HasForeignKey(@"FileId");
            modelBuilder.Entity<ZipJob>().HasOne(x => x.Job).WithOne(op => op.ZipJob).IsRequired(true).HasForeignKey(typeof(ZipJob), @"JobId");

        #endregion
        }

        partial void CustomizeMapping(ref ModelBuilder modelBuilder);

        public bool HasChanges()
        {
            return ChangeTracker.Entries().Any(e => e.State == Microsoft.EntityFrameworkCore.EntityState.Added || e.State == Microsoft.EntityFrameworkCore.EntityState.Modified || e.State == Microsoft.EntityFrameworkCore.EntityState.Deleted);
        }

        partial void OnCreated();
    }
}
