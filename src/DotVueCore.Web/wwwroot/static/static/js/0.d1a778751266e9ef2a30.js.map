{"version":3,"sources":["webpack:///static/js/0.d1a778751266e9ef2a30.js","webpack:///./~/chart.js/src/chart.js","webpack:///./ClientApp/components/views/home/cardTotal.vue","webpack:///./ClientApp/components/Error404.vue","webpack:///./ClientApp/components/views/auth/login.vue","webpack:///./ClientApp/components/views/auth/logout.vue","webpack:///./ClientApp/components/views/auth/register.vue","webpack:///./ClientApp/components/views/home/cardAniversariosPorMes.vue","webpack:///./ClientApp/components/views/home/cardCadastrosPorMes.vue","webpack:///./ClientApp/components/views/home/cardPessoasPorBairro.vue","webpack:///./ClientApp/components/views/home/home.vue","webpack:///./ClientApp/components/views/questiontype/questiontype.vue","webpack:///./ClientApp/components/views/user/user.vue","webpack:///./ClientApp/components ^\\.\\/.*$","webpack:///Error404.vue","webpack:///login.vue","webpack:///logout.vue","webpack:///register.vue","webpack:///cardAniversariosPorMes.vue","webpack:///cardCadastrosPorMes.vue","webpack:///cardPessoasPorBairro.vue","webpack:///cardTotal.vue","webpack:///home.vue","webpack:///questiontype.vue","webpack:///user.vue","webpack:///./~/babel-runtime/core-js/get-iterator.js","webpack:///./~/chart.js/src/charts/Chart.Bar.js","webpack:///./~/chart.js/src/charts/Chart.Bubble.js","webpack:///./~/chart.js/src/charts/Chart.Doughnut.js","webpack:///./~/chart.js/src/charts/Chart.Line.js","webpack:///./~/chart.js/src/charts/Chart.PolarArea.js","webpack:///./~/chart.js/src/charts/Chart.Radar.js","webpack:///./~/chart.js/src/charts/Chart.Scatter.js","webpack:///./~/chart.js/src/controllers/controller.bar.js","webpack:///./~/chart.js/src/controllers/controller.bubble.js","webpack:///./~/chart.js/src/controllers/controller.doughnut.js","webpack:///./~/chart.js/src/controllers/controller.line.js","webpack:///./~/chart.js/src/controllers/controller.polarArea.js","webpack:///./~/chart.js/src/controllers/controller.radar.js","webpack:///./~/chart.js/src/core/core.animation.js","webpack:///./~/chart.js/src/core/core.canvasHelpers.js","webpack:///./~/chart.js/src/core/core.controller.js","webpack:///./~/chart.js/src/core/core.datasetController.js","webpack:///./~/chart.js/src/core/core.element.js","webpack:///./~/chart.js/src/core/core.helpers.js","webpack:///./~/chart.js/src/core/core.interaction.js","webpack:///./~/chart.js/src/core/core.js","webpack:///./~/chart.js/src/core/core.layoutService.js","webpack:///./~/chart.js/src/core/core.legend.js","webpack:///./~/chart.js/src/core/core.plugin.js","webpack:///./~/chart.js/src/core/core.scale.js","webpack:///./~/chart.js/src/core/core.scaleService.js","webpack:///./~/chart.js/src/core/core.ticks.js","webpack:///./~/chart.js/src/core/core.title.js","webpack:///./~/chart.js/src/core/core.tooltip.js","webpack:///./~/chart.js/src/elements/element.arc.js","webpack:///./~/chart.js/src/elements/element.line.js","webpack:///./~/chart.js/src/elements/element.point.js","webpack:///./~/chart.js/src/elements/element.rectangle.js","webpack:///./~/chart.js/src/platforms/platform.dom.js","webpack:///./~/chart.js/src/platforms/platform.js","webpack:///./~/chart.js/src/scales/scale.category.js","webpack:///./~/chart.js/src/scales/scale.linear.js","webpack:///./~/chart.js/src/scales/scale.linearbase.js","webpack:///./~/chart.js/src/scales/scale.logarithmic.js","webpack:///./~/chart.js/src/scales/scale.radialLinear.js","webpack:///./~/chart.js/src/scales/scale.time.js","webpack:///./~/chartjs-color-string/color-string.js","webpack:///./~/chartjs-color/index.js","webpack:///./~/color-convert/conversions.js","webpack:///./~/color-convert/index.js","webpack:///./~/color-name/index.js","webpack:///./~/core-js/library/fn/get-iterator.js","webpack:///./~/core-js/library/modules/core.get-iterator.js","webpack:///./ClientApp/components/views/questiontype/questiontype.vue?26e2","webpack:///./ClientApp/components/views/auth/login.vue?e6cc","webpack:///./ClientApp/components/views/user/user.vue?0346","webpack:///./ClientApp/components/views/home/home.vue?b330","webpack:///./ClientApp/components/views/home/cardPessoasPorBairro.vue?8b2e","webpack:///./ClientApp/components/views/home/cardAniversariosPorMes.vue?1aab","webpack:///./ClientApp/components/views/home/cardCadastrosPorMes.vue?904b","webpack:///./ClientApp/components/views/auth/register.vue?2ea9","webpack:///./ClientApp/components/views/auth/logout.vue?125d","webpack:///./ClientApp/components/views/home/cardTotal.vue?74dd","webpack:///./ClientApp/components/views/questiontype/questiontype.vue?7873","webpack:///./ClientApp/components/views/auth/login.vue?1cb9","webpack:///./ClientApp/components/views/user/user.vue?0ef9","webpack:///./ClientApp/components/views/home/home.vue?ecaa","webpack:///./ClientApp/components/views/home/cardPessoasPorBairro.vue?6aa7","webpack:///./ClientApp/components/views/home/cardAniversariosPorMes.vue?c12d","webpack:///./ClientApp/components/views/home/cardCadastrosPorMes.vue?3623","webpack:///./ClientApp/components/views/auth/register.vue?ae65","webpack:///./ClientApp/components/views/auth/logout.vue?aecd","webpack:///./ClientApp/components/views/home/cardTotal.vue?4138","webpack:///./~/vue-countup-v2/dist/js/app.js","webpack:///./ClientApp/components/views/questiontype/questiontype.vue?e184","webpack:///./ClientApp/components/views/auth/login.vue?a0a3","webpack:///./ClientApp/components/Error404.vue?92db","webpack:///./ClientApp/components/views/user/user.vue?03bc","webpack:///./ClientApp/components/views/home/home.vue?614b","webpack:///./ClientApp/components/views/home/cardPessoasPorBairro.vue?23bd","webpack:///./ClientApp/components/views/home/cardAniversariosPorMes.vue?58f6","webpack:///./ClientApp/components/views/home/cardCadastrosPorMes.vue?b5b7","webpack:///./ClientApp/components/views/auth/register.vue?b6c5","webpack:///./ClientApp/components/views/auth/logout.vue?e182","webpack:///./ClientApp/components/views/home/cardTotal.vue?ba24"],"names":["webpackJsonp","Array","concat","module","exports","__webpack_require__","Chart","window","Component","webpackContext","req","webpackContextResolve","map","Error","./Error404","./Error404.vue","./layout/leftdrawer","./layout/leftdrawer.vue","./layout/rightdrawer","./layout/rightdrawer.vue","./layout/toolbar","./layout/toolbar.vue","./views/auth/login","./views/auth/login.vue","./views/auth/logout","./views/auth/logout.vue","./views/auth/register","./views/auth/register.vue","./views/home/cardAniversariosPorMes","./views/home/cardAniversariosPorMes.vue","./views/home/cardCadastrosPorMes","./views/home/cardCadastrosPorMes.vue","./views/home/cardPessoasPorBairro","./views/home/cardPessoasPorBairro.vue","./views/home/cardTotal","./views/home/cardTotal.vue","./views/home/home","./views/home/home.vue","./views/questiontype/questiontype","./views/questiontype/questiontype.vue","./views/user/user","./views/user/user.vue","keys","Object","resolve","id","defineProperty","value","default","data","canGoBack","history","length","methods","goBack","go","name","credentials","email","password","userLogin","_this","this","$store","dispatch","then","res","loading","$router","push","params","catch","errors","_interopRequireDefault","obj","__esModule","_extends2","_extends3","_vuex","mapActions","mounted","deauthenticateUser","submit","auth","signup","_keys","_keys2","_getIterator2","_getIterator3","_chart","_chart2","getBairrosAgrupados","computed","nomeBairros","bairros","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","bairrosAgrupados","next","done","item","format","Date","locale","ptLocale","err","return","valoresPorBairro","key","dados","labels","datasets","backgroundColor","borderColor","watch","criarChart","tipoGrafico","chart","destroy","vm","$http","get","response","ctx","document","getElementById","type","getTotalAgrupadoPorMesNoAnoEscolhido","nomeMeses","totalAgrupadoPorMes","valoresAgrupados","fill","lineTension","pointHitRadius","ano","_vueCountupV","_vueCountupV2","props","options","separator","components","ICountUp","_cardTotal","_cardTotal2","totalPosts","totalComments","totalTodos","dataForGraph","posts","todos","comments","cardTotal","_quasarFramework","config","title","refresh","columnPicker","leftStickyColumns","rightStickyColumns","bodyStyle","maxHeight","Platform","is","mobile","rowHeight","responsive","pagination","rowsPerPage","selection","messages","noData","noDataAfterFiltering","columns","label","field","width","filter","sort","toLocaleString","bodyHeightProp","bodyHeight","oldPagination","Utils","clone","style","getAllQuestionTypes","mapGetters","getAllUsers","Bar","context","Bubble","Doughnut","Line","PolarArea","Radar","defaultConfig","hover","mode","scales","xAxes","position","yAxes","tooltips","callbacks","tooltipItem","xLabel","yLabel","defaults","scatter","controllers","line","Scatter","helpers","bar","categoryPercentage","barPercentage","gridLines","offsetGridLines","DatasetController","extend","dataElementType","elements","Rectangle","initialize","datasetIndex","prototype","call","me","meta","getMeta","dataset","getDataset","stack","getStackCount","yScale","getScaleForId","yAxisID","stacks","each","dsMeta","getDatasetMeta","isDatasetVisible","stacked","indexOf","update","reset","rectangle","index","updateElement","xScale","xAxisID","scaleBase","getBasePixel","rectangleElementOptions","custom","_xScale","_yScale","_datasetIndex","_index","ruler","getRuler","_model","x","calculateBarX","y","calculateBarY","datasetLabel","horizontal","base","calculateBarBase","calculateBarWidth","getValueAtIndexOrDefault","borderSkipped","borderWidth","pivot","getBaseValue","original","Number","i","currentDs","currentDsMeta","currentVal","Math","min","max","getPixelForValue","stackCount","tickWidth","ticks","categoryWidth","categorySpacing","fullBarWidth","barWidth","barSpacing","barThickness","getStackIndex","j","stackIndex","leftTick","isCombo","sumPos","sumNeg","ds","stackedVal","draw","ease","len","easingDecimal","metaData","canvasHelpers","clipArea","chartArea","d","isNaN","transition","unclipArea","setHoverStyle","model","hoverBackgroundColor","getHoverColor","hoverBorderColor","hoverBorderWidth","removeHoverStyle","horizontalBar","tooltipItems","height","calculateBarHeight","originalBase","tickHeight","categoryHeight","fullBarHeight","barHeight","topTick","bubble","dataPoint","r","Point","points","point","pointElementOptions","dsIndex","getPixelForDecimal","NaN","radius","getRadius","hitRadius","skip","hoverRadius","dataVal","doughnut","animation","animateRotate","animateScale","aspectRatio","legendCallback","text","join","legend","generateLabels","arc","arcOpts","stroke","bw","fillStyle","strokeStyle","lineWidth","hidden","onClick","e","legendItem","ilen","cutoutPercentage","rotation","PI","circumference","dataLabel","isArray","slice","pie","Arc","linkScales","noop","getRingIndex","ringIndex","opts","availableWidth","right","left","availableHeight","bottom","top","minSize","offset","startAngle","endAngle","start","cos","sin","end","contains0","contains90","contains180","contains270","cutout","size","getMaxBorderWidth","outerRadius","innerRadius","radiusLength","getVisibleDatasetCount","offsetX","offsetY","total","calculateTotal","animationOpts","centerX","centerY","calculateCircumference","valueAtIndexOrDefault","element","abs","hoverWidth","lineEnabled","getValueOrDefault","showLine","showLines","spanGaps","datasetElementType","lineElementOptions","scale","tension","_scale","_children","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","steppedLine","stepped","cubicInterpolationMode","scaleTop","scaleBottom","scaleZero","updateBezierControlPoints","getPointBackgroundColor","pointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","pointOptions","includeOffset","pointRadius","calculatePointY","pointStyle","stackedRightValue","getRightValue","rightValue","capControlPoint","pt","controlPoints","area","splineCurveMonotone","splineCurve","previousItem","nextItem","controlPointPreviousX","previous","controlPointPreviousY","controlPointNextX","controlPointNextY","capBezierPoints","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","polarArea","lineArc","beginAtZero","count","countVisibleElements","xCenter","yCenter","visibleCount","datasetStartAngle","distance","getDistanceFromCenterForValue","resetRadius","radar","_loop","getBasePosition","pointPosition","getPointPositionForValue","global","duration","easing","onProgress","onComplete","Animation","Element","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","animationService","frameDuration","animations","dropFrames","request","addAnimation","chartInstance","animationObject","lazy","animating","requestAnimationFrame","cancelAnimation","findIndex","animationWrapper","splice","requestAnimFrame","startDigest","startTime","now","framesToDrop","floor","endTime","drawPoint","edgeLength","xOffset","yOffset","toString","drawImage","beginPath","closePath","sqrt","moveTo","lineTo","SQRT2","fillRect","strokeRect","leftX","topY","sideSize","drawRoundedRectangle","save","rect","clip","restore","initConfig","configMerge","updateConfig","newOptions","forEach","scaleOptions","tooltip","_options","plugins","platform","types","instances","Controller","instance","acquireContext","canvas","uid","_bufferedRender","console","error","notify","retinaScale","bindEvents","resize","ensureScalesHaveIDs","buildScales","initToolTip","clear","stop","silent","maintainAspectRatio","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","responsiveAnimationDuration","scalesOptions","xAxisOptions","yAxisOptions","items","dtype","isDefault","scaleType","scaleClass","scaleService","getScaleConstructor","addScalesToLayout","buildOrUpdateControllers","newControllers","controller","updateIndex","resetElements","animationDuration","_data","buildOrUpdateElements","updateLayout","updateDatasets","_bufferedRequest","layoutService","animationOptions","callback","easingFunction","easingEffects","stepDecimal","easeDecimal","easingValue","boxes","box","drawDatasets","getElementAtEvent","Interaction","modes","single","getElementsAtEvent","intersect","getElementsAtXAxis","getElementsAtEventForMode","method","getDatasetAtEvent","_meta","generateLegend","unbindEvents","releaseContext","toBase64Image","toDataURL","apply","arguments","Tooltip","_chartInstance","listeners","_listeners","listener","eventHandler","events","addEventListener","removeEventListener","updateHoverStyle","enabled","changed","handleEvent","bufferedRequest","hoverOptions","lastActive","active","onHover","native","arrayEquals","listenArrayEvents","array","_chartjs","configurable","enumerable","arrayEvents","charAt","toUpperCase","args","object","unlistenArrayEvents","stub","addElements","scaleID","createMetaDataset","createMetaData","addElementAndReset","resyncElements","elementOpts","valueOrDefault","numMeta","numData","insertElements","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","inherits","configuration","_view","_start","hasOwnProperty","color","mix","rgbString","startVal","tooltipPosition","hasValue","isNumber","parseMaxStyle","styleValue","node","parentProperty","valueInPixels","parseInt","parentNode","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","view","defaultView","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","POSITIVE_INFINITY","loopable","self","reverse","objClone","setFn","_base","extension","baseHasProperty","baseVal","scaleMerge","getScaleDefaults","valueObj","axisType","axisDefaults","defaultValue","where","collection","filterCallback","filtered","scope","findNextWhere","arrayToSearch","startIndex","currentItem","findPreviousWhere","extensions","ChartElement","constructor","Surrogate","__super__","n","parseFloat","isFinite","almostEquals","epsilon","almostWhole","rounded","round","reduce","NEGATIVE_INFINITY","sign","log10","log","LN10","toRadians","degrees","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distanceBetweenPoints","pt1","pt2","pow","aliasPixel","pixelWidth","firstPoint","middlePoint","afterPoint","t","current","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","alphaK","betaK","tauK","squaredMagnitude","deltaX","loop","niceNum","range","niceFraction","exponent","fraction","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","s","p","a","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","getRelativePosition","evt","mouseX","mouseY","originalEvent","currentTarget","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","paddingLeft","getStyle","paddingTop","paddingRight","paddingBottom","currentDevicePixelRatio","addEvent","eventType","attachEvent","removeEvent","handler","detachEvent","getConstraintWidth","getConstraintHeight","container","w","clientWidth","cw","h","clientHeight","ch","el","property","currentStyle","getPropertyValue","pixelRatio","devicePixelRatio","clearRect","fontString","pixelSize","fontStyle","fontFamily","longestText","font","arrayOfThings","cache","gc","garbageCollect","longest","thing","measureText","nestedThing","gcLen","string","textWidth","numberOfLabelLines","numberOfLines","quadraticCurveTo","c","CanvasGradient","defaultColor","a0","a1","v0","v1","callCallback","fn","_tArg","colorValue","CanvasPattern","saturate","darken","parseVisibleItems","jlen","getIntersectItems","inRange","getNearestItems","distanceMetric","minDistance","nearestItems","center","getCenterPoint","indexMode","x-axis","nearest","b","sizeA","getArea","sizeB","ret","intersectsItem","inXRange","inYRange","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","addBox","removeBox","getMinimumBoxSize","isHorizontal","fullWidth","chartWidth","maxChartAreaWidth","horizontalBoxHeight","maxChartAreaHeight","verticalBoxWidth","chartAreaHeight","minBoxSizes","fitBox","minBoxSize","minBox","scaleMargin","totalLeftBoxesWidth","maxHorizontalLeftPadding","totalRightBoxesWidth","maxHorizontalRightPadding","chartHeight","finalFitVerticalBox","totalTopBoxesHeight","totalBottomBoxesHeight","placeBox","leftPadding","rightPadding","layoutOptions","layout","padding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartAreaWidth","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","getPadding","boxPadding","verticalBox","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","getBoxWidth","labelOpts","fontSize","usePointStyle","boxWidth","createNewLegendAndAttach","legendOpts","Legend","display","ci","lineCap","lineDash","lineDashOffset","lineJoin","legendHitBoxes","doughnutMode","beforeUpdate","maxWidth","margins","beforeSetDimensions","setDimensions","afterSetDimensions","beforeBuildLabels","buildLabels","afterBuildLabels","beforeFit","fit","afterFit","afterUpdate","legendItems","globalDefault","itemOrDefault","labelFont","hitboxes","lineWidths","totalHeight","textAlign","textBaseline","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","fontColor","drawLegendBox","isLineWidthZero","setLineDash","offSet","fillText","lh","hitBox","register","beforeInit","afterEvent","_plugins","_cacheId","plugin","unregister","idx","getAll","hook","descriptor","descriptors","pluginService","PluginBase","computeTextSize","tick","parseFontOptions","globalDefaults","family","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","Ticks","formatters","values","Scale","longestTextCache","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","tickOpts","userCallback","tickFont","labelRotation","cosRotation","sinRotation","originalLabelWidth","labelWidth","getPixelForTick","angleRadians","scaleLabelOpts","gridLineOpts","scaleLabelFontSize","isFullWidth","largestTextWidth","tallestLabelHeightInLines","lineSpace","longestLabelWidth","labelHeight","firstTick","firstLabelWidth","lastTick","lastLabelWidth","handleMargins","rawValue","getLabelForIndex","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","skipRatio","maxTicks","optionTicks","isRotated","useAutoskipper","maxTicksLimit","tickFontColor","tl","scaleLabelFontColor","scaleLabelFont","labelRotationRadians","longestRotatedLabel","itemsToDraw","xTickStart","xTickEnd","yTickStart","yTickEnd","isLastTick","shouldSkip","lineColor","zeroLineIndex","tx1","ty1","tx2","ty2","x1","y1","x2","y2","labelX","labelY","xLineValue","labelXOffset","isLeft","tickPadding","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","rotate","scaleLabelX","scaleLabelY","constructors","registerScaleType","scaleConstructor","updateScaleDefaults","additions","generators","generationOptions","dataRange","spacing","stepSize","niceRange","niceMin","niceMax","ceil","numSpaces","logarithmic","exp","significand","tickVal","endExp","endSignificand","minNotZero","tickValue","delta","logDelta","tickString","numDecimal","toFixed","remain","toExponential","createNewTitleBlockAndAttach","titleOpts","Title","titleBlock","pos","titleX","titleY","titleFont","mergeOpacity","colorString","opacity","alpha","rgbaString","pushOrConcat","toPush","createTooltipItem","getBaseModel","tooltipOpts","xPadding","yPadding","xAlign","yAlign","bodyFontColor","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyAlign","bodyFontSize","bodySpacing","titleFontColor","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontStyle","titleFontSize","_titleAlign","titleAlign","titleSpacing","titleMarginBottom","footerFontColor","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontStyle","footerFontSize","_footerAlign","footerAlign","footerSpacing","footerMarginTop","caretSize","cornerRadius","legendColorBackground","multiKeyBackground","displayColors","getTooltipSize","body","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleLineCount","footerLineCount","footer","widthPadding","maxLineWidth","determineAlignment","lf","rf","olf","orf","yf","midX","midY","getBackgroundPoint","alignment","caretPadding","paddingAndSize","radiusAndPadding","beforeTitle","labelCount","afterTitle","beforeLabel","labelColor","activeElement","afterLabel","beforeFooter","afterFooter","getTitle","getBeforeBody","getBody","bodyItems","getAfterBody","getFooter","existingModel","_active","backgroundPoint","tooltipSize","caretX","caretY","labelColors","positioners","_eventPosition","itemSort","dataPoints","drawCaret","tooltipPoint","x3","y3","ptX","ptY","drawTitle","drawBody","textColor","xLinePadding","fillLineOfText","drawColorBoxes","drawFooter","drawBackground","_lastActive","average","eventPosition","nearestElement","tp","globalOpts","inLabelRange","chartX","chartY","pointRelativePosition","betweenAngles","withinRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","sA","eA","lineToPoint","previousPoint","pointVM","bezierCurveTo","fillPoint","lastDrawnIndex","currentVM","globalOptionLineElements","xRange","yRange","errMargin","ratio","isVertical","getBarBounds","halfWidth","halfHeight","cornerAt","corners","startCorner","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","borders","corner","bounds","readUsedSize","matches","match","initCanvas","renderHeight","getAttribute","renderWidth","initial","displayWidth","displayHeight","createEvent","fromNativeEvent","event","eventTypeMap","createResizer","iframe","createElement","className","cssText","tabIndex","contentWindow","addResizeListener","ticking","resizer","insertBefore","firstChild","removeResizeListener","removeChild","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","HTMLCanvasElement","getContext","CanvasRenderingContext2D","prop","removeAttribute","setAttribute","proxies","proxy","implementation","DatasetScale","getLabels","xLabels","yLabels","minIndex","maxIndex","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","LinearScale","LinearScaleBase","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","handleTickRangeOptions","getTickLimit","tickFontSize","handleDirectionalChanges","innerDimension","ticksAsNumbers","minSign","maxSign","suggestedMin","suggestedMax","numericGeneratorOptions","fixedStepSize","LogarithmicScale","tickValues","newVal","getValueCount","getPointLabelFontOptions","pointLabelOptions","pointLabels","measureLabelSize","determineLimits","fitWithPointLabels","textSize","plFont","largestPossibleRadius","furthestLimits","l","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","hLimits","vLimits","setReductions","drawingArea","setCenterPoint","getTextAlignForAngle","adjustPointPositionForLabelHeight","drawPointLabels","angleLineOpts","angleLines","pointLabelOpts","outerDistance","outerPosition","pointLabelPosition","pointLabelFontColor","drawRadiusLine","numberOrZero","param","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","LinearRadialScale","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","tickFontStyle","tickFontFamily","tickLabelFont","yCenterOffset","yHeight","moment","time","units","steps","maxStep","parser","unit","displayFormat","isoWeekday","minUnit","displayFormats","millisecond","second","minute","hour","day","week","month","quarter","year","TimeScale","getLabelMoment","labelMoments","getLabelDiff","labelDiffs","buildLabelDiffs","getMomentStartOf","startOf","tickUnit","scaleLabelMoments","labelMoment","parseTime","isValid","momentsForDataset","datasetVisible","scaleLabelDiffs","diff","diffsForDataset","unitScale","scaleSizeInUnits","unitStepSize","tempFirstLabel","tickFormatFunction","tickLabelWidth","labelCapacity","unitDefinitionIndex","unitDefinition","leadingUnitBuffer","trailingUnitBuffer","add","roundedStart","roundedEnd","newTick","tooltipFormat","formattedTick","tickMoments","asSeconds","getMonth","warn","getRgba","abbr","hex","rgba","per","keyword","rgb","colorNames","getHsla","hsl","getHwb","hwb","getRgb","getHsl","hsla","getAlpha","vals","hexString","hexDouble","percentString","percentaString","g","hslString","hslaString","hwbString","reverseNames","num","str","convert","Color","valid","hsv","cmyk","setValues","red","lightness","v","whiteness","cyan","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","val","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","yiq","light","negate","lighten","desaturate","whiten","blacken","greyscale","clearer","opaquer","mixinColor","weight","color1","w1","w2","toJSON","result","source","target","spaces","maxes","getValues","space","chans","capped","sname","svalues","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","m","k","rgb2keyword","reverseKeywords","JSON","stringify","rgb2xyz","z","rgb2lab","xyz","rgb2lch","lab2lch","hsl2rgb","t1","t2","t3","hsl2hsv","sv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hi","f","q","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","wh","bl","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab","hr","lab2rgb","lch2lab","lch","lch2xyz","lch2rgb","keyword2rgb","cssKeywords","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","conversions","Converter","func","arg","pair","exec","from","to","convs","routeSpace","fspace","anObject","getIterator","it","iterFn","TypeError","version","sources","names","mappings","file","sourceRoot","sourcesContent","content","locals","loaded","required","decimals","Function","deep","init","$el","beforeCreate","created","beforeMount","updated","activated","deactivated","beforeDestroy","destroyed","pauseResume","o","u","cancelAnimationFrame","getTime","clearTimeout","useEasing","useGrouping","easingFn","formattingFn","prefix","suffix","endVal","countDown","frameVal","dec","formatNumber","split","test","replace","printValue","tagName","textContent","innerHTML","timestamp","remaining","rAF","paused","staticRenderFns","_scopeId","$createElement","_self","_c","_vm","_h","staticClass","slot","attrs","directives","rawName","expression","_v","_m","questiontypes","scopedSlots","_u","cell","_s","on","click","$event","changeMessage","deleteRow","placeholder","domProps","input","composing","_e","users","background-color","icon","direction","classNames","nativeOn","class"],"mappings":"AAAAA,cAAc,EAAE,GAAGC,MAAM,IAAIC,QAEvB,SAASC,EAAQC,EAASC,GCChC,GAAAC,GAAAD,EAAA,MAEAA,GAAA,KAAAC,GACAD,EAAA,KAAAC,GACAD,EAAA,KAAAC,GACAD,EAAA,KAAAC,GACAD,EAAA,KAAAC,GACAD,EAAA,KAAAC,GACAD,EAAA,KAAAC,GACAD,EAAA,KAAAC,GACAD,EAAA,KAAAC,GACAD,EAAA,KAAAC,GACAD,EAAA,KAAAC,GACAD,EAAA,KAAAC,GACAD,EAAA,KAAAC,GACAD,EAAA,KAAAC,GACAD,EAAA,KAAAC,GACAD,EAAA,KAAAC,GAEAD,EAAA,KAAAC,GACAD,EAAA,KAAAC,GACAD,EAAA,KAAAC,GACAD,EAAA,KAAAC,GAEAD,EAAA,KAAAC,GACAD,EAAA,KAAAC,GACAD,EAAA,KAAAC,GACAD,EAAA,KAAAC,GACAD,EAAA,KAAAC,GACAD,EAAA,KAAAC,GAIAD,EAAA,KAAAC,GACAD,EAAA,KAAAC,GACAD,EAAA,KAAAC,GACAD,EAAA,KAAAC,GACAD,EAAA,KAAAC,GACAD,EAAA,KAAAC,GAEAD,EAAA,KAAAC,GACAD,EAAA,KAAAC,GACAD,EAAA,KAAAC,GACAD,EAAA,KAAAC,GACAD,EAAA,KAAAC,GACAD,EAAA,KAAAC,GACAD,EAAA,KAAAC,GAEAC,OAAAD,MAAAH,EAAAC,QAAAE,GDQQ,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CAEF,SAASH,EAAQC,EAASC,GEvEhCA,EAAA,IAEA,IAAAG,GAAAH,EAAA,GAEAA,EAAA,KAEAA,EAAA,KAEA,kBAEA,KAGAF,GAAAC,QAAAI,EAAAJ,SF+EQ,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACC,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CAEH,SAASD,EAAQC,EAASC,GGnOhC,GAAAG,GAAAH,EAAA,GAEAA,EAAA,KAEAA,EAAA,KAEA,KAEA,KAGAF,GAAAC,QAAAI,EAAAJ,SH0OM,SAASD,EAAQC,EAASC,GInPhCA,EAAA,IAEA,IAAAG,GAAAH,EAAA,GAEAA,EAAA,KAEAA,EAAA,KAEA,KAEA,KAGAF,GAAAC,QAAAI,EAAAJ,SJ4PM,SAASD,EAAQC,EAASC,GKzQhCA,EAAA,IAEA,IAAAG,GAAAH,EAAA,GAEAA,EAAA,KAEAA,EAAA,KAEA,KAEA,KAGAF,GAAAC,QAAAI,EAAAJ,SLkRM,SAASD,EAAQC,EAASC,GM/RhCA,EAAA,IAEA,IAAAG,GAAAH,EAAA,GAEAA,EAAA,KAEAA,EAAA,KAEA,KAEA,KAGAF,GAAAC,QAAAI,EAAAJ,SNwSM,SAASD,EAAQC,EAASC,GOrThCA,EAAA,IAEA,IAAAG,GAAAH,EAAA,GAEAA,EAAA,KAEAA,EAAA,KAEA,KAEA,KAGAF,GAAAC,QAAAI,EAAAJ,SP8TM,SAASD,EAAQC,EAASC,GQ3UhCA,EAAA,IAEA,IAAAG,GAAAH,EAAA,GAEAA,EAAA,KAEAA,EAAA,KAEA,KAEA,KAGAF,GAAAC,QAAAI,EAAAJ,SRoVM,SAASD,EAAQC,EAASC,GSjWhCA,EAAA,IAEA,IAAAG,GAAAH,EAAA,GAEAA,EAAA,KAEAA,EAAA,KAEA,KAEA,KAGAF,GAAAC,QAAAI,EAAAJ,ST0WM,SAASD,EAAQC,EAASC,GUvXhCA,EAAA,IAEA,IAAAG,GAAAH,EAAA,GAEAA,EAAA,KAEAA,EAAA,KAEA,KAEA,KAGAF,GAAAC,QAAAI,EAAAJ,SVgYM,SAASD,EAAQC,EAASC,GW7YhCA,EAAA,IAEA,IAAAG,GAAAH,EAAA,GAEAA,EAAA,KAEAA,EAAA,KAEA,KAEA,KAGAF,GAAAC,QAAAI,EAAAJ,SXsZM,SAASD,EAAQC,EAASC,GYnahCA,EAAA,IAEA,IAAAG,GAAAH,EAAA,GAEAA,EAAA,KAEAA,EAAA,KAEA,KAEA,KAGAF,GAAAC,QAAAI,EAAAJ,SZ4aM,SAASD,EAAQC,EAASC,Ga7ZhC,QAAAI,GAAAC,GACA,MAAAL,GAAAM,EAAAD,IAEA,QAAAC,GAAAD,GACA,MAAAE,GAAAF,IAAA,WAAiC,SAAAG,OAAA,uBAAAH,EAAA,SAlCjC,GAAAE,IACAE,aAAA,IACAC,iBAAA,IACAC,sBAAA,GACAC,0BAAA,GACAC,uBAAA,GACAC,2BAAA,GACAC,mBAAA,GACAC,uBAAA,GACAC,qBAAA,IACAC,yBAAA,IACAC,sBAAA,IACAC,0BAAA,IACAC,wBAAA,IACAC,4BAAA,IACAC,sCAAA,IACAC,0CAAA,IACAC,mCAAA,IACAC,uCAAA,IACAC,oCAAA,IACAC,wCAAA,IACAC,yBAAA,GACAC,6BAAA,GACAC,oBAAA,IACAC,wBAAA,IACAC,oCAAA,IACAC,wCAAA,IACAC,oBAAA,IACAC,wBAAA,IAQAhC,GAAAiC,KAAA,WACA,MAAAC,QAAAD,KAAA9B,IAEAH,EAAAmC,QAAAjC,EACAR,EAAAC,QAAAK,EACAA,EAAAoC,GAAA,KbicS,CACA,CACA,CACA,CACA,CACA,CACA,CAEH,SAAS1C,EAAQC,GAEtB,YAEAuC,QAAOG,eAAe1C,EAAS,cAC7B2C,OAAO,IAET3C,EAAQ4C,SACNC,KAAM,WACJ,OACEC,UAAW3C,OAAO4C,QAAQC,Oc5djC,IdgeGC,SACEC,OAAQ,WACN/C,OAAO4C,QAAQI,IAAG,OAMhB,CACA,CACA,CAEH,SAASpD,EAAQC,EAASC,GAE/B,YAEAsC,QAAOG,eAAe1C,EAAS,cAC3B2C,OAAO,GezeZ1C,GAAA,Gf8eCD,GAAQ4C,SACJQ,Ke7eL,Qf8eKP,KAAM,WACF,OACIQ,aACIC,Me7ejB,cf8eiBC,Se3ejB,cf+eKN,SACIO,UAAW,We5epB,GAAAC,GAAAC,If+eaA,MAAKC,OAAOC,SAAS,mBAAoBF,Ke9etDL,aAAAQ,KAAA,SAAAC,Gf+eiBL,EAAMM,Se7evB,Ef8eiBN,EAAMO,QAAQC,MACVb,Ke7erB,Of8eqBc,ce1erBC,MAAA,SAAAL,Gf6eiBL,EAAMM,Se3evB,Ef4eiBN,EAAMW,OAASN,Ee3ehCM,afmfM,SAASrE,EAAQC,EAASC,GAE/B,YAYA,SAASoE,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQ1B,QAAS0B,GAVvF/B,OAAOG,eAAe1C,EAAS,cAC3B2C,OAAO,GAGX,IAAI6B,GAAYvE,EAAoB,IAEhCwE,EAAYJ,EAAuBG,GgBpjBxCE,EAAAzE,EAAA,GhB0jBCD,GAAQ4C,SACJQ,KgBzjBL,ShB0jBKP,KAAM,WACF,UgBrjBTI,SAAA,EAAAwB,EAAA7B,aAAA,EAAA8B,EAAAC,aAIA,wBhBojBKC,QAAS,WACLlB,KgBnjBTmB,qBhBojBSnB,KAAKM,QAAQC,MACTb,KgBljBb,ahByjBM,SAASrD,EAAQC,GAEtB,YAEAuC,QAAOG,eAAe1C,EAAS,cAC3B2C,OAAO,IAEX3C,EAAQ4C,SACJQ,KiB3iBL,WjB4iBKP,KAAM,WACF,OACIQ,aACID,KiB3iBjB,GjB4iBiBE,MiB3iBjB,GjB4iBiBC,SiBziBjB,MjB6iBKN,SACI6B,OAAQ,WACJ,GAAIzB,IACAD,KAAMM,KAAKL,YiB3iB5BD,KjB4iBiBE,MAAOI,KAAKL,YiB3iB7BC,MjB4iBiBC,SAAUG,KAAKL,YiB1iBhCE,SjB4iBawB,MAAKC,OAAOtB,KAAML,EiB3iB/B,ajBkjBM,SAAStD,EAAQC,EAASC,GAE/B,YAkBA,SAASoE,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQ1B,QAAS0B,GAhBvF/B,OAAOG,eAAe1C,EAAS,cAC7B2C,OAAO,GAGT,IAAIsC,GAAQhF,EAAoB,IAE5BiF,EAASb,EAAuBY,GAEhCE,EAAgBlF,EAAoB,KAEpCmF,EAAgBf,EAAuBc,GkBjnB5CE,EAAApF,EAAA,IlBqnBKqF,EAAUjB,EAAuBgB,EAIrCrF,GAAQ4C,SACNgC,QAAS,WACPlB,KkBxnBL6B,uBlB2nBGC,UACEC,YAAa,WACX,GAAIC,MkB1nBXC,GAAA,ElB4nBWC,GAAoB,EACpBC,EAAiBC,MAErB,KACE,IAAK,GAAwFC,GAApFC,GAAY,EAAIZ,EAAcxC,UAAS,EAAIsC,EAAOtC,SAASc,KAAKuC,qBAA6BN,GAA6BI,EAAQC,EAAUE,QAAQC,MAAOR,GAA4B,EAAM,CkB9nB/M,GAAAS,GAAAL,EAAApD,KlBioBW+C,GAAQzB,KAAKoC,OAAO,GAAIC,MAAKF,GAAO,OAASG,OkBhoBxDC,alBkoBS,MAAOC,GACPb,GAAoB,EACpBC,EAAiBY,EACjB,QACA,KACOd,GAA6BK,EAAUU,QAC1CV,EAAUU,SAEZ,QACA,GAAId,EACF,KAAMC,IAKZ,MkB/oBPH,IlBipBKiB,iBAAkB,WkB/oBvB,GAAAlD,GAAAC,IlBkpBO,QAAO,EAAIwB,EAAOtC,SAASc,KAAKuC,kBAAkBzF,IAAI,SAAUoG,GAC9D,MAAOnD,GAAMwC,iBkBlpBtBW,MlBqpBKC,MAAO,WACL,OACEC,OAAQpD,KkBnpBjB+B,YlBopBSsB,WACElE,KAAMa,KkBnpBjBiD,iBlBopBWK,iBkBlpBX,wBACA,wBACA,wBACA,wBACA,yBACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBAEA,yBlBuoBWC,akBroBX,qBACA,wBACA,wBACA,wBACA,yBAIA,8BlBkoBGC,OACEjB,iBAAkB,WAChBvC,KkB/nBPyD,clBioBKC,YAAa,WACX1D,KAAK2D,MkB/nBZC,UlBgoBO5D,KkB/nBPyD,elBkoBGtE,KAAM,WACJ,OACEoD,oBACAmB,YkB/nBP,MlBgoBOC,MkB9nBP,KlBkoBGpE,SACEsC,oBAAqB,WACnB,GAAIgC,GkBhoBX7D,IlBioBO6D,GAAGC,MAAMC,IkBhoBhB,kCAAA5D,KAAA,SAAA6D,GlBioBSH,EAAGtB,iBAAmByB,EkB/nB/B7E,QlBkoBKsE,WAAY,WACV,GAAIQ,GAAMC,SAASC,ekB/nB1B,mBlBgoBOnE,MAAK2D,MAAQ,GAAI/B,GAAQ1C,QAAQ+E,GAC/BG,KAAMpE,KkB/nBf0D,YlBgoBSvE,KAAMa,KkB9nBfmD,YlBsoBM,SAAS9G,EAAQC,EAASC,GAE/B,YAcA,SAASoE,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQ1B,QAAS0B,GAZvF/B,OAAOG,eAAe1C,EAAS,cAC7B2C,OAAO,GAGT,IAAIsC,GAAQhF,EAAoB,IAE5BiF,EAASb,EAAuBY,GmBztBrCI,EAAApF,EAAA,InB6tBKqF,EAAUjB,EAAuBgB,EAIrCrF,GAAQ4C,SACNgC,QAAS,WACPlB,KmBhuBLqE,wCnBmuBGvC,UACEwC,UAAW,WACT,OAAO,EAAI9C,EAAOtC,SAASc,KmBjuBlCuE,sBnBmuBKC,iBAAkB,WmBjuBvB,GAAAzE,GAAAC,InBouBO,QAAO,EAAIwB,EAAOtC,SAASc,KAAKuE,qBAAqBzH,IAAI,SAAUoG,GACjE,MAAOnD,GAAMwE,oBmBpuBtBrB,MnBuuBKC,MAAO,WACL,OACEQ,MmBruBT,GnBsuBSP,OAAQpD,KmBruBjBsE,UnBsuBSjB,WACElE,KAAMa,KmBruBjBwE,iBnBsuBWC,MmBruBX,EnBsuBWC,YmBruBX,GnBsuBWpB,gBmBruBX,sBnBsuBWC,YmBruBX,qBnBsuBWoB,emBnuBX,QnBwuBGnB,OACEe,oBAAqB,WACnBvE,KmBruBPyD,cnBuuBKmB,IAAK,WACH5E,KmBruBPqE,uCnBsuBOrE,KAAK2D,MmBpuBZC,UnBsuBO5D,KmBruBPyD,enBwuBGtE,KAAM,WACJ,OACEyF,ImBruBP,OnBsuBOL,yBAIJhF,SACE8E,qCAAsC,WACpC,GAAIR,GmBtuBX7D,InBuuBO6D,GAAGC,MAAMC,IAAI,+CAAiD/D,KmBtuBrE4E,KAAAzE,KAAA,SAAA6D,GnBuuBSH,EAAGU,oBAAsBP,EmBruBlC7E,QnBwuBKsE,WAAY,WACV,GAAIQ,GAAMC,SAASC,emBruB1B,gBnBsuBOnE,MAAK2D,MAAQ,GAAI/B,GAAQ1C,QAAQ+E,GAC/BG,KmBruBT,OnBsuBSjF,KAAMa,KmBpuBfmD,YnB4uBM,SAAS9G,EAAQC,EAASC,GAE/B,YAcA,SAASoE,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQ1B,QAAS0B,GAZvF/B,OAAOG,eAAe1C,EAAS,cAC7B2C,OAAO,GAGT,IAAIsC,GAAQhF,EAAoB,IAE5BiF,EAASb,EAAuBY,GoBlzBrCI,EAAApF,EAAA,IpBszBKqF,EAAUjB,EAAuBgB,EAIrCrF,GAAQ4C,SACNgC,QAAS,WACPlB,KoBzzBL6B,uBpB4zBGC,UACEC,YAAa,WACX,OAAO,EAAIP,EAAOtC,SAASc,KoB1zBlCuC,mBpB4zBKU,iBAAkB,WoB1zBvB,GAAAlD,GAAAC,IpB6zBO,QAAO,EAAIwB,EAAOtC,SAASc,KAAKuC,kBAAkBzF,IAAI,SAAUoG,GAC9D,MAAOnD,GAAMwC,iBoB7zBtBW,MpBg0BKC,MAAO,WACL,OACEC,OAAQpD,KoB9zBjB+B,YpB+zBSsB,WACElE,KAAMa,KoB9zBjBiD,iBpB+zBWK,iBoB7zBX,wBACA,wBACA,wBACA,wBACA,yBAEA,yBpBwzBWC,aoBtzBX,qBACA,wBACA,wBACA,wBACA,yBAIA,8BpBmzBGC,OACEjB,iBAAkB,WAChB,GAAI0B,GAAMC,SAASC,eoBhzB1B,iBpBizBOnE,MAAK2D,MAAQ,GAAI/B,GAAQ1C,QAAQ+E,GAC/BG,KAAMpE,KoBhzBf0D,YpBizBSvE,KAAMa,KoB/yBfmD,SpBkzBKO,YAAa,WACX,GAAIO,GAAMC,SAASC,eoBhzB1B,iBpBizBOnE,MAAK2D,MoBhzBZC,UpBizBO5D,KAAK2D,MAAQ,GAAI/B,GAAQ1C,QAAQ+E,GAC/BG,KAAMpE,KoBhzBf0D,YpBizBSvE,KAAMa,KoB/yBfmD,UpBmzBGhE,KAAM,WACJ,OACEoD,oBACAmB,YoBhzBP,gBpBizBOC,MoB/yBP,KpBmzBGpE,SACEsC,oBAAqB,WACnB,GAAIgC,GoBjzBX7D,IpBkzBO6D,GAAGC,MAAMC,IoBjzBhB,+BAAA5D,KAAA,SAAA6D,GpBkzBSH,EAAGtB,iBAAmByB,EoBhzB/B7E,WpBwzBM,SAAS9C,EAAQC,EAASC,GAE/B,YAUA,SAASoE,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQ1B,QAAS0B,GARvF/B,OAAOG,eAAe1C,EAAS,cAC7B2C,OAAO,GqBt3BV,IAAA4F,GAAAtI,EAAA,KrB23BKuI,EAAgBnE,EAAuBkE,EAI3CvI,GAAQ4C,SACN6F,OAAQ,QAAS,QqB93BpB,mBrB+3BG5F,KAAM,WACJ,OACE6F,SACEC,UqB53BT,OrBi4BGC,YqB73BHC,SAAAL,EAAA5F,WrBo4BM,SAAS7C,EAAQC,EAASC,GAE/B,YAUA,SAASoE,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQ1B,QAAS0B,GARvF/B,OAAOG,eAAe1C,EAAS,cAC3B2C,OAAO,GsBt4BZ,IAAAmG,GAAA7I,EAAA,ItB24BK8I,EAAc1E,EAAuByE,EAIzC9I,GAAQ4C,SACJQ,KsB94BL,OtB+4BKwB,QAAS,aACT/B,KAAM,WACF,OACImG,WsB54Bb,EtB64BaC,csB54Bb,EtB64BaC,WsB34Bb,ItB+4BK1D,UACI2D,aAAc,WACV,OACIC,MAAO1F,KsB74BxBsF,WtB84BiBK,MAAO3F,KsB74BxBwF,WtB84BiBI,SAAU5F,KsB54B3BuF,iBtBg5BKL,YsB34BLW,UAAAR,EAAAnG,StB84BKK,aAKC,SAASlD,EAAQC,EAASC,GAE/B,YAEAsC,QAAOG,eAAe1C,EAAS,cAC3B2C,OAAO,GuBr7BZ,IAAA+B,GAAAzE,EAAA,IAMAuJ,EAAAvJ,EAAA,GvBs7BCD,GAAQ4C,SACJQ,KuBr7BL,evBs7BKP,KAAM,WACF,OACI4G,QACIC,MuBr7BjB,iBvBs7BiBC,SuBr7BjB,EvBs7BiBC,cuBr7BjB,EvBs7BiBC,kBuBr7BjB,EvBs7BiBC,mBuBr7BjB,EvBs7BiBC,WACIC,UAAWR,EAAiBS,SAASC,GAAGC,OAAS,OuBp7BtE,SvBs7BiBC,UuBr7BjB,OvBs7BiBC,YuBr7BjB,EvBs7BiBC,YACIC,YuBr7BrB,GvBs7BqB7B,SAAU,EAAG,GAAI,GAAI,GAAI,GuBp7B9C,MvBs7BiB8B,UuBr7BjB,SvBs7BiBC,UACIC,OuBr7BrB,4CvBs7BqBC,qBuBn7BrB,gEvBs7BaC,UACIC,MuBr7BjB,KvBs7BiBC,MuBr7BjB,iBvBs7BiBC,MuBr7BjB,MvBs7BiBC,QuBr7BjB,EvBs7BiBC,MuBp7BjB,IvBs7BiBJ,MuBp7BjB,OvBq7BiBC,MuBp7BjB,mBvBq7BiBC,MuBp7BjB,MvBq7BiBC,QuBp7BjB,EvBq7BiBC,MuBn7BjB,IvBq7BiBJ,MuBn7BjB,evBo7BiBC,MuBn7BjB,cvBo7BiBC,MuBn7BjB,MvBo7BiBC,QuBn7BjB,EvBo7BiBC,KuBn7BjB,OvBo7BiB5E,OAAQ,SAAgB1D,GACpB,MAAO,IAAI2D,MAAK3D,GuBn7BrCuI,oBvBu7BaZ,YuBl7Bb,EvBm7BaF,UuBl7Bb,GvBm7Bae,euBl7Bb,YvBm7BaC,WuBj7Bb,MvBq7BKlE,OACIoD,WAAY,SAAoB3H,GAC5B,MAAKA,QAMLe,KAAK+F,OAAOa,WAAa5G,KuBn7BtC2H,gBvB86BiB3H,KAAK2H,cAAgB7B,EAAiB8B,MAAMC,MAAM7H,KAAK+F,OuBn7BxEa,iBvBo7BiB5G,KAAK+F,OAAOa,YuBn7B7B,KvBy7BSF,UAAW,SAAmBzH,GAC1Be,KAAK+F,OAAOW,UAAYzH,EuBn7BrC,MvBq7BSyI,WAAY,SAAoBzI,GAC5B,GAAI6I,KACwB,UAAxB9H,KAAKyH,iBACLK,EAAM9H,KAAKyH,gBAAkBxI,EuBn7B9C,MvBq7Bae,KAAK+F,OAAOM,UuBn7BzByB,GvBq7BSL,eAAgB,SAAwBxI,GACpC,GAAI6I,KACU,UAAV7I,IACA6I,EAAM7I,GAASe,KAAK0H,WuBn7BrC,MvBq7Ba1H,KAAK+F,OAAOM,UuBn7BzByB,IvBs7BK5G,QAAS,WACLlB,KuBn7BT+H,uBvBq7BKjG,UAAU,EAAId,EAAMgH,auBj7BzB,kBvBk7BKzI,SAAS,EAAIyB,EAAMC,auB/6BxB,0BvBo7BM,SAAS5E,EAAQC,EAASC,GAE/B,YAEAsC,QAAOG,eAAe1C,EAAS,cAC3B2C,OAAO,GwB7hCZ,IAAA+B,GAAAzE,EAAA,IAMAuJ,EAAAvJ,EAAA,GxB8hCCD,GAAQ4C,SACJQ,KwB7hCL,OxB8hCKP,KAAM,WACF,OACI4G,QACIC,MwB7hCjB,QxB8hCiBC,SwB7hCjB,ExB8hCiBC,cwB7hCjB,ExB8hCiBC,kBwB7hCjB,ExB8hCiBC,mBwB7hCjB,ExB8hCiBC,WACIC,UAAWR,EAAiBS,SAASC,GAAGC,OAAS,OwB5hCtE,SxB8hCiBC,UwB7hCjB,OxB8hCiBC,YwB7hCjB,ExB8hCiBC,YACIC,YwB7hCrB,GxB8hCqB7B,SAAU,EAAG,GAAI,GAAI,GAAI,GwB5hC9C,MxB8hCiB8B,UwB7hCjB,SxB8hCiBC,UACIC,OwB7hCrB,4CxB8hCqBC,qBwB3hCrB,gExB8hCaC,UACIC,MwB7hCjB,KxB8hCiBC,MwB7hCjB,KxB8hCiBC,MwB7hCjB,QxB8hCiBC,QwB7hCjB,ExB8hCiBC,MwB5hCjB,IxB8hCiBJ,MwB5hCjB,YxB6hCiBC,MwB5hCjB,YxB6hCiBE,QwB5hCjB,ExB6hCiBC,MwB3hCjB,IxB6hCiBJ,MwB3hCjB,WxB4hCiBC,MwB3hCjB,WxB4hCiBE,QwB3hCjB,ExB4hCiBC,MwB1hCjB,IxB4hCiBJ,MwB1hCjB,QxB2hCiBC,MwB1hCjB,QxB2hCiBE,QwB1hCjB,ExB2hCiBC,MwBzhCjB,IxB2hCiBJ,MwBzhCjB,QxB0hCiBC,MwBzhCjB,QxB0hCiBE,QwBzhCjB,ExB0hCiBC,MwBxhCjB,IxB0hCiBJ,MwBxhCjB,WxByhCiBC,MwBxhCjB,axByhCiBE,QwBxhCjB,ExByhCiBC,MwBvhCjB,IxByhCiBJ,MwBvhCjB,exBwhCiBC,MwBvhCjB,cxBwhCiBE,QwBvhCjB,ExBwhCiBC,KwBvhCjB,OxBwhCiB5E,OAAQ,SAAgB1D,GACpB,MAAO,IAAI2D,MAAK3D,GwBvhCrCuI,oBxB2hCaZ,YwBthCb,ExBuhCaF,UwBthCb,GxBuhCae,ewBthCb,YxBuhCaC,WwBrhCb,MxByhCKlE,OACIoD,WAAY,SAAoB3H,GAC5B,MAAKA,QAMLe,KAAK+F,OAAOa,WAAa5G,KwBvhCtC2H,gBxBkhCiB3H,KAAK2H,cAAgB7B,EAAiB8B,MAAMC,MAAM7H,KAAK+F,OwBvhCxEa,iBxBwhCiB5G,KAAK+F,OAAOa,YwBvhC7B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CAC,kBAAA,aACAC,YAAA,SACAC,cAAA,YACAC,cAAA,aACAC,gBAAA,YACAC,iBAAA,aACAC,mBAAA,WACAC,iBAAA,YACAC,iBAAA,YACAC,cAAA,WACAC,WAAA,aACAC,WAAA,aACAC,UAAA,aACAC,aAAA,aACAC,MAAA,SACAC,SAAA,aACAC,OAAA,WACAC,WAAA,YACAC,QAAA,WACAC,WAAA,UACAC,QAAA,aACAC,eAAA,aACAC,WAAA,aACAC,eAAA,aACAC,eAAA,aACAC,YAAA,aACAC,WAAA,aACAC,MAAA,YACAC,MAAA,aACAC,MAAA,aACAC,YAAA,aACAC,QAAA,WACAC,eAAA,YACAjP,KAAA,SACAkP,WAAA,aACAC,WAAA,YACAC,aAAA,WACAC,QAAA,aACAC,YAAA,YACAC,UAAA,WACAC,UAAA,aACAC,QAAA,WACAC,QAAA,aACAC,SAAA,aACAC,WAAA,YACAC,WAAA,aACAC,WAAA,aACAC,MAAA,aACAC,aAAA,WACAC,WAAA,YACAC,KAAA,aACAC,MAAA,WACAC,SAAA,aACAC,QAAA,WACAC,WAAA,YACAC,QAAA,aACAC,OAAA,aACAC,OAAA,aACAC,YAAA,aACApP,QAAA,WACAqP,aAAA,cvEgpaM,SAASv2D,EAAQC,EAASC,GwEpyahCA,EAAA,IACAA,EAAA,IACAF,EAAAC,QAAAC,EAAA,MxEyyaS,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CAEH,SAASF,EAAQC,EAASC,GyE50ahC,GAAAi3D,GAAAj3D,EAAA,GACAwH,EAAAxH,EAAA,GACAF,GAAAC,QAAAC,EAAA,GAAAk3D,YAAA,SAAAC,GACA,GAAAC,GAAA5vD,EAAA2vD,EACA,sBAAAC,GAAA,KAAAC,WAAAF,EAAA,oBACA,OAAAF,GAAAG,EAAAnpD,KAAAkpD,MzEk1aS,CACA,CACA,CACA,CACA,CACA,CAEH,SAASr3D,EAAQC,EAASC,G0E91ahCD,EAAA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","file":"static/js/0.d1a778751266e9ef2a30.js","sourcesContent":["webpackJsonp([0,1],Array(25).concat([\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @namespace Chart\n\t */\n\tvar Chart = __webpack_require__(229)();\n\t\n\t__webpack_require__(227)(Chart);\n\t__webpack_require__(243)(Chart);\n\t__webpack_require__(223)(Chart);\n\t__webpack_require__(232)(Chart);\n\t__webpack_require__(226)(Chart);\n\t__webpack_require__(222)(Chart);\n\t__webpack_require__(224)(Chart);\n\t__webpack_require__(225)(Chart);\n\t__webpack_require__(230)(Chart);\n\t__webpack_require__(234)(Chart);\n\t__webpack_require__(235)(Chart);\n\t__webpack_require__(233)(Chart);\n\t__webpack_require__(236)(Chart);\n\t__webpack_require__(231)(Chart);\n\t__webpack_require__(228)(Chart);\n\t__webpack_require__(237)(Chart);\n\t\n\t__webpack_require__(238)(Chart);\n\t__webpack_require__(239)(Chart);\n\t__webpack_require__(240)(Chart);\n\t__webpack_require__(241)(Chart);\n\t\n\t__webpack_require__(246)(Chart);\n\t__webpack_require__(244)(Chart);\n\t__webpack_require__(245)(Chart);\n\t__webpack_require__(247)(Chart);\n\t__webpack_require__(248)(Chart);\n\t__webpack_require__(249)(Chart);\n\t\n\t// Controllers must be loaded after elements\n\t// See Chart.core.datasetController.dataElementType\n\t__webpack_require__(216)(Chart);\n\t__webpack_require__(217)(Chart);\n\t__webpack_require__(218)(Chart);\n\t__webpack_require__(219)(Chart);\n\t__webpack_require__(220)(Chart);\n\t__webpack_require__(221)(Chart);\n\t\n\t__webpack_require__(209)(Chart);\n\t__webpack_require__(210)(Chart);\n\t__webpack_require__(211)(Chart);\n\t__webpack_require__(212)(Chart);\n\t__webpack_require__(213)(Chart);\n\t__webpack_require__(214)(Chart);\n\t__webpack_require__(215)(Chart);\n\t\n\twindow.Chart = module.exports = Chart;\n\n\n/***/ },\n/* 26 */,\n/* 27 */,\n/* 28 */,\n/* 29 */,\n/* 30 */,\n/* 31 */,\n/* 32 */,\n/* 33 */,\n/* 34 */,\n/* 35 */,\n/* 36 */,\n/* 37 */,\n/* 38 */,\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/* styles */\n\t__webpack_require__(319)\n\t\n\tvar Component = __webpack_require__(2)(\n\t  /* script */\n\t  __webpack_require__(200),\n\t  /* template */\n\t  __webpack_require__(339),\n\t  /* scopeId */\n\t  \"data-v-a71aab1e\",\n\t  /* cssModules */\n\t  null\n\t)\n\t\n\tmodule.exports = Component.exports\n\n\n/***/ },\n/* 40 */,\n/* 41 */,\n/* 42 */,\n/* 43 */,\n/* 44 */,\n/* 45 */,\n/* 46 */,\n/* 47 */,\n/* 48 */,\n/* 49 */,\n/* 50 */,\n/* 51 */,\n/* 52 */,\n/* 53 */,\n/* 54 */,\n/* 55 */,\n/* 56 */,\n/* 57 */,\n/* 58 */,\n/* 59 */,\n/* 60 */,\n/* 61 */,\n/* 62 */,\n/* 63 */,\n/* 64 */,\n/* 65 */,\n/* 66 */,\n/* 67 */,\n/* 68 */,\n/* 69 */,\n/* 70 */,\n/* 71 */,\n/* 72 */,\n/* 73 */,\n/* 74 */,\n/* 75 */,\n/* 76 */,\n/* 77 */,\n/* 78 */,\n/* 79 */,\n/* 80 */,\n/* 81 */,\n/* 82 */,\n/* 83 */,\n/* 84 */,\n/* 85 */,\n/* 86 */,\n/* 87 */,\n/* 88 */,\n/* 89 */,\n/* 90 */,\n/* 91 */,\n/* 92 */,\n/* 93 */,\n/* 94 */,\n/* 95 */,\n/* 96 */,\n/* 97 */,\n/* 98 */,\n/* 99 */,\n/* 100 */,\n/* 101 */,\n/* 102 */,\n/* 103 */,\n/* 104 */,\n/* 105 */,\n/* 106 */,\n/* 107 */,\n/* 108 */,\n/* 109 */,\n/* 110 */,\n/* 111 */,\n/* 112 */,\n/* 113 */,\n/* 114 */,\n/* 115 */,\n/* 116 */,\n/* 117 */,\n/* 118 */,\n/* 119 */,\n/* 120 */,\n/* 121 */,\n/* 122 */,\n/* 123 */,\n/* 124 */,\n/* 125 */,\n/* 126 */,\n/* 127 */,\n/* 128 */,\n/* 129 */,\n/* 130 */,\n/* 131 */,\n/* 132 */,\n/* 133 */,\n/* 134 */,\n/* 135 */,\n/* 136 */,\n/* 137 */,\n/* 138 */,\n/* 139 */,\n/* 140 */,\n/* 141 */,\n/* 142 */,\n/* 143 */,\n/* 144 */,\n/* 145 */,\n/* 146 */,\n/* 147 */,\n/* 148 */,\n/* 149 */,\n/* 150 */,\n/* 151 */,\n/* 152 */,\n/* 153 */,\n/* 154 */,\n/* 155 */,\n/* 156 */,\n/* 157 */,\n/* 158 */,\n/* 159 */,\n/* 160 */,\n/* 161 */,\n/* 162 */,\n/* 163 */,\n/* 164 */,\n/* 165 */,\n/* 166 */,\n/* 167 */,\n/* 168 */,\n/* 169 */,\n/* 170 */,\n/* 171 */,\n/* 172 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Component = __webpack_require__(2)(\n\t  /* script */\n\t  __webpack_require__(190),\n\t  /* template */\n\t  __webpack_require__(328),\n\t  /* scopeId */\n\t  null,\n\t  /* cssModules */\n\t  null\n\t)\n\t\n\tmodule.exports = Component.exports\n\n\n/***/ },\n/* 173 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/* styles */\n\t__webpack_require__(308)\n\t\n\tvar Component = __webpack_require__(2)(\n\t  /* script */\n\t  __webpack_require__(194),\n\t  /* template */\n\t  __webpack_require__(327),\n\t  /* scopeId */\n\t  null,\n\t  /* cssModules */\n\t  null\n\t)\n\t\n\tmodule.exports = Component.exports\n\n\n/***/ },\n/* 174 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/* styles */\n\t__webpack_require__(317)\n\t\n\tvar Component = __webpack_require__(2)(\n\t  /* script */\n\t  __webpack_require__(195),\n\t  /* template */\n\t  __webpack_require__(337),\n\t  /* scopeId */\n\t  null,\n\t  /* cssModules */\n\t  null\n\t)\n\t\n\tmodule.exports = Component.exports\n\n\n/***/ },\n/* 175 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/* styles */\n\t__webpack_require__(316)\n\t\n\tvar Component = __webpack_require__(2)(\n\t  /* script */\n\t  __webpack_require__(196),\n\t  /* template */\n\t  __webpack_require__(336),\n\t  /* scopeId */\n\t  null,\n\t  /* cssModules */\n\t  null\n\t)\n\t\n\tmodule.exports = Component.exports\n\n\n/***/ },\n/* 176 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/* styles */\n\t__webpack_require__(313)\n\t\n\tvar Component = __webpack_require__(2)(\n\t  /* script */\n\t  __webpack_require__(197),\n\t  /* template */\n\t  __webpack_require__(333),\n\t  /* scopeId */\n\t  null,\n\t  /* cssModules */\n\t  null\n\t)\n\t\n\tmodule.exports = Component.exports\n\n\n/***/ },\n/* 177 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/* styles */\n\t__webpack_require__(315)\n\t\n\tvar Component = __webpack_require__(2)(\n\t  /* script */\n\t  __webpack_require__(198),\n\t  /* template */\n\t  __webpack_require__(335),\n\t  /* scopeId */\n\t  null,\n\t  /* cssModules */\n\t  null\n\t)\n\t\n\tmodule.exports = Component.exports\n\n\n/***/ },\n/* 178 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/* styles */\n\t__webpack_require__(311)\n\t\n\tvar Component = __webpack_require__(2)(\n\t  /* script */\n\t  __webpack_require__(199),\n\t  /* template */\n\t  __webpack_require__(331),\n\t  /* scopeId */\n\t  null,\n\t  /* cssModules */\n\t  null\n\t)\n\t\n\tmodule.exports = Component.exports\n\n\n/***/ },\n/* 179 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/* styles */\n\t__webpack_require__(310)\n\t\n\tvar Component = __webpack_require__(2)(\n\t  /* script */\n\t  __webpack_require__(201),\n\t  /* template */\n\t  __webpack_require__(330),\n\t  /* scopeId */\n\t  null,\n\t  /* cssModules */\n\t  null\n\t)\n\t\n\tmodule.exports = Component.exports\n\n\n/***/ },\n/* 180 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/* styles */\n\t__webpack_require__(307)\n\t\n\tvar Component = __webpack_require__(2)(\n\t  /* script */\n\t  __webpack_require__(202),\n\t  /* template */\n\t  __webpack_require__(326),\n\t  /* scopeId */\n\t  null,\n\t  /* cssModules */\n\t  null\n\t)\n\t\n\tmodule.exports = Component.exports\n\n\n/***/ },\n/* 181 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/* styles */\n\t__webpack_require__(309)\n\t\n\tvar Component = __webpack_require__(2)(\n\t  /* script */\n\t  __webpack_require__(203),\n\t  /* template */\n\t  __webpack_require__(329),\n\t  /* scopeId */\n\t  null,\n\t  /* cssModules */\n\t  null\n\t)\n\t\n\tmodule.exports = Component.exports\n\n\n/***/ },\n/* 182 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar map = {\n\t\t\"./Error404\": 172,\n\t\t\"./Error404.vue\": 172,\n\t\t\"./layout/leftdrawer\": 36,\n\t\t\"./layout/leftdrawer.vue\": 36,\n\t\t\"./layout/rightdrawer\": 37,\n\t\t\"./layout/rightdrawer.vue\": 37,\n\t\t\"./layout/toolbar\": 38,\n\t\t\"./layout/toolbar.vue\": 38,\n\t\t\"./views/auth/login\": 173,\n\t\t\"./views/auth/login.vue\": 173,\n\t\t\"./views/auth/logout\": 174,\n\t\t\"./views/auth/logout.vue\": 174,\n\t\t\"./views/auth/register\": 175,\n\t\t\"./views/auth/register.vue\": 175,\n\t\t\"./views/home/cardAniversariosPorMes\": 176,\n\t\t\"./views/home/cardAniversariosPorMes.vue\": 176,\n\t\t\"./views/home/cardCadastrosPorMes\": 177,\n\t\t\"./views/home/cardCadastrosPorMes.vue\": 177,\n\t\t\"./views/home/cardPessoasPorBairro\": 178,\n\t\t\"./views/home/cardPessoasPorBairro.vue\": 178,\n\t\t\"./views/home/cardTotal\": 39,\n\t\t\"./views/home/cardTotal.vue\": 39,\n\t\t\"./views/home/home\": 179,\n\t\t\"./views/home/home.vue\": 179,\n\t\t\"./views/questiontype/questiontype\": 180,\n\t\t\"./views/questiontype/questiontype.vue\": 180,\n\t\t\"./views/user/user\": 181,\n\t\t\"./views/user/user.vue\": 181\n\t};\n\tfunction webpackContext(req) {\n\t\treturn __webpack_require__(webpackContextResolve(req));\n\t};\n\tfunction webpackContextResolve(req) {\n\t\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n\t};\n\twebpackContext.keys = function webpackContextKeys() {\n\t\treturn Object.keys(map);\n\t};\n\twebpackContext.resolve = webpackContextResolve;\n\tmodule.exports = webpackContext;\n\twebpackContext.id = 182;\n\n\n/***/ },\n/* 183 */,\n/* 184 */,\n/* 185 */,\n/* 186 */,\n/* 187 */,\n/* 188 */,\n/* 189 */,\n/* 190 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  data: function data() {\n\t    return {\n\t      canGoBack: window.history.length > 1\n\t    };\n\t  },\n\t\n\t  methods: {\n\t    goBack: function goBack() {\n\t      window.history.go(-1);\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 191 */,\n/* 192 */,\n/* 193 */,\n/* 194 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _vuex = __webpack_require__(15);\n\t\n\texports.default = {\n\t    name: \"login\",\n\t    data: function data() {\n\t        return {\n\t            credentials: {\n\t                email: 'rto@rto.com',\n\t                password: '12345678'\n\t            }\n\t        };\n\t    },\n\t    methods: {\n\t        userLogin: function userLogin() {\n\t            var _this = this;\n\t\n\t            this.$store.dispatch('authenticateUser', this.credentials).then(function (res) {\n\t                _this.loading = false;\n\t                _this.$router.push({\n\t                    name: 'home',\n\t                    params: {}\n\t                });\n\t            }).catch(function (res) {\n\t                _this.loading = false;\n\t                _this.errors = res.errors;\n\t            });\n\t        }\n\t    }\n\t};\n\n/***/ },\n/* 195 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _extends2 = __webpack_require__(42);\n\t\n\tvar _extends3 = _interopRequireDefault(_extends2);\n\t\n\tvar _vuex = __webpack_require__(15);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t    name: 'logout',\n\t    data: function data() {\n\t        return {};\n\t    },\n\t    methods: (0, _extends3.default)({}, (0, _vuex.mapActions)(['deauthenticateUser'])),\n\t    mounted: function mounted() {\n\t        this.deauthenticateUser();\n\t        this.$router.push({\n\t            name: 'login'\n\t        });\n\t    }\n\t};\n\n/***/ },\n/* 196 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = {\n\t    name: \"register\",\n\t    data: function data() {\n\t        return {\n\t            credentials: {\n\t                name: '',\n\t                email: '',\n\t                password: ''\n\t            }\n\t        };\n\t    },\n\t    methods: {\n\t        submit: function submit() {\n\t            var credentials = {\n\t                name: this.credentials.name,\n\t                email: this.credentials.email,\n\t                password: this.credentials.password\n\t            };\n\t            auth.signup(this, credentials, 'jokes');\n\t        }\n\t    }\n\t};\n\n/***/ },\n/* 197 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _keys = __webpack_require__(16);\n\t\n\tvar _keys2 = _interopRequireDefault(_keys);\n\t\n\tvar _getIterator2 = __webpack_require__(204);\n\t\n\tvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\t\n\tvar _chart = __webpack_require__(25);\n\t\n\tvar _chart2 = _interopRequireDefault(_chart);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  mounted: function mounted() {\n\t    this.getBairrosAgrupados();\n\t  },\n\t\n\t  computed: {\n\t    nomeBairros: function nomeBairros() {\n\t      var bairros = [];\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\t\n\t      try {\n\t        for (var _iterator = (0, _getIterator3.default)((0, _keys2.default)(this.bairrosAgrupados)), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          var item = _step.value;\n\t\n\t          bairros.push(format(new Date(item), 'MMM', { locale: ptLocale }));\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t\n\t      return bairros;\n\t    },\n\t    valoresPorBairro: function valoresPorBairro() {\n\t      var _this = this;\n\t\n\t      return (0, _keys2.default)(this.bairrosAgrupados).map(function (key) {\n\t        return _this.bairrosAgrupados[key];\n\t      });\n\t    },\n\t    dados: function dados() {\n\t      return {\n\t        labels: this.nomeBairros,\n\t        datasets: [{\n\t          data: this.valoresPorBairro,\n\t          backgroundColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)', 'rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n\t          borderColor: ['rgba(255,99,132,1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)']\n\t        }]\n\t      };\n\t    }\n\t  },\n\t  watch: {\n\t    bairrosAgrupados: function bairrosAgrupados() {\n\t      this.criarChart();\n\t    },\n\t    tipoGrafico: function tipoGrafico() {\n\t      this.chart.destroy();\n\t      this.criarChart();\n\t    }\n\t  },\n\t  data: function data() {\n\t    return {\n\t      bairrosAgrupados: {},\n\t      tipoGrafico: 'bar',\n\t      chart: ''\n\t    };\n\t  },\n\t\n\t  methods: {\n\t    getBairrosAgrupados: function getBairrosAgrupados() {\n\t      var vm = this;\n\t      vm.$http.get('/relatorio/aniversariantes-mes').then(function (response) {\n\t        vm.bairrosAgrupados = response.data;\n\t      });\n\t    },\n\t    criarChart: function criarChart() {\n\t      var ctx = document.getElementById(\"aniversarios-mes\");\n\t      this.chart = new _chart2.default(ctx, {\n\t        type: this.tipoGrafico,\n\t        data: this.dados\n\t      });\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 198 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _keys = __webpack_require__(16);\n\t\n\tvar _keys2 = _interopRequireDefault(_keys);\n\t\n\tvar _chart = __webpack_require__(25);\n\t\n\tvar _chart2 = _interopRequireDefault(_chart);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  mounted: function mounted() {\n\t    this.getTotalAgrupadoPorMesNoAnoEscolhido();\n\t  },\n\t\n\t  computed: {\n\t    nomeMeses: function nomeMeses() {\n\t      return (0, _keys2.default)(this.totalAgrupadoPorMes);\n\t    },\n\t    valoresAgrupados: function valoresAgrupados() {\n\t      var _this = this;\n\t\n\t      return (0, _keys2.default)(this.totalAgrupadoPorMes).map(function (key) {\n\t        return _this.totalAgrupadoPorMes[key];\n\t      });\n\t    },\n\t    dados: function dados() {\n\t      return {\n\t        chart: '',\n\t        labels: this.nomeMeses,\n\t        datasets: [{\n\t          data: this.valoresAgrupados,\n\t          fill: false,\n\t          lineTension: 0.1,\n\t          backgroundColor: \"rgba(75,192,192, 1)\",\n\t          borderColor: \"rgba(75,192,192,1)\",\n\t          pointHitRadius: 10\n\t        }]\n\t      };\n\t    }\n\t  },\n\t  watch: {\n\t    totalAgrupadoPorMes: function totalAgrupadoPorMes() {\n\t      this.criarChart();\n\t    },\n\t    ano: function ano() {\n\t      this.getTotalAgrupadoPorMesNoAnoEscolhido();\n\t      this.chart.destroy();\n\t\n\t      this.criarChart();\n\t    }\n\t  },\n\t  data: function data() {\n\t    return {\n\t      ano: '2016',\n\t      totalAgrupadoPorMes: {}\n\t    };\n\t  },\n\t\n\t  methods: {\n\t    getTotalAgrupadoPorMesNoAnoEscolhido: function getTotalAgrupadoPorMesNoAnoEscolhido() {\n\t      var vm = this;\n\t      vm.$http.get('pessoas/total-cadastro-agrupado-mes-por-ano/' + this.ano).then(function (response) {\n\t        vm.totalAgrupadoPorMes = response.data;\n\t      });\n\t    },\n\t    criarChart: function criarChart() {\n\t      var ctx = document.getElementById(\"cadastros-mes\");\n\t      this.chart = new _chart2.default(ctx, {\n\t        type: 'line',\n\t        data: this.dados\n\t      });\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 199 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _keys = __webpack_require__(16);\n\t\n\tvar _keys2 = _interopRequireDefault(_keys);\n\t\n\tvar _chart = __webpack_require__(25);\n\t\n\tvar _chart2 = _interopRequireDefault(_chart);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  mounted: function mounted() {\n\t    this.getBairrosAgrupados();\n\t  },\n\t\n\t  computed: {\n\t    nomeBairros: function nomeBairros() {\n\t      return (0, _keys2.default)(this.bairrosAgrupados);\n\t    },\n\t    valoresPorBairro: function valoresPorBairro() {\n\t      var _this = this;\n\t\n\t      return (0, _keys2.default)(this.bairrosAgrupados).map(function (key) {\n\t        return _this.bairrosAgrupados[key];\n\t      });\n\t    },\n\t    dados: function dados() {\n\t      return {\n\t        labels: this.nomeBairros,\n\t        datasets: [{\n\t          data: this.valoresPorBairro,\n\t          backgroundColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n\t          borderColor: ['rgba(255,99,132,1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)']\n\t        }]\n\t      };\n\t    }\n\t  },\n\t  watch: {\n\t    bairrosAgrupados: function bairrosAgrupados() {\n\t      var ctx = document.getElementById(\"pessoas-bairro\");\n\t      this.chart = new _chart2.default(ctx, {\n\t        type: this.tipoGrafico,\n\t        data: this.dados\n\t      });\n\t    },\n\t    tipoGrafico: function tipoGrafico() {\n\t      var ctx = document.getElementById(\"pessoas-bairro\");\n\t      this.chart.destroy();\n\t      this.chart = new _chart2.default(ctx, {\n\t        type: this.tipoGrafico,\n\t        data: this.dados\n\t      });\n\t    }\n\t  },\n\t  data: function data() {\n\t    return {\n\t      bairrosAgrupados: {},\n\t      tipoGrafico: 'horizontalBar',\n\t      chart: ''\n\t    };\n\t  },\n\t\n\t  methods: {\n\t    getBairrosAgrupados: function getBairrosAgrupados() {\n\t      var vm = this;\n\t      vm.$http.get('/endereco/bairros-agrupados').then(function (response) {\n\t        vm.bairrosAgrupados = response.data;\n\t      });\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 200 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _vueCountupV = __webpack_require__(324);\n\t\n\tvar _vueCountupV2 = _interopRequireDefault(_vueCountupV);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  props: ['title', 'total', 'backgroundColor'],\n\t  data: function data() {\n\t    return {\n\t      options: {\n\t        separator: '.'\n\t      }\n\t    };\n\t  },\n\t\n\t  components: {\n\t    ICountUp: _vueCountupV2.default\n\t  }\n\t};\n\n/***/ },\n/* 201 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _cardTotal = __webpack_require__(39);\n\t\n\tvar _cardTotal2 = _interopRequireDefault(_cardTotal);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t    name: 'Home',\n\t    mounted: function mounted() {},\n\t    data: function data() {\n\t        return {\n\t            totalPosts: 0,\n\t            totalComments: 0,\n\t            totalTodos: 0\n\t        };\n\t    },\n\t\n\t    computed: {\n\t        dataForGraph: function dataForGraph() {\n\t            return {\n\t                posts: this.totalPosts,\n\t                todos: this.totalTodos,\n\t                comments: this.totalComments\n\t            };\n\t        }\n\t    },\n\t    components: {\n\t        cardTotal: _cardTotal2.default\n\t    },\n\t    methods: {}\n\t};\n\n/***/ },\n/* 202 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _vuex = __webpack_require__(15);\n\t\n\tvar _quasarFramework = __webpack_require__(35);\n\t\n\texports.default = {\n\t    name: \"questiontype\",\n\t    data: function data() {\n\t        return {\n\t            config: {\n\t                title: 'Question Types',\n\t                refresh: true,\n\t                columnPicker: true,\n\t                leftStickyColumns: 1,\n\t                rightStickyColumns: 2,\n\t                bodyStyle: {\n\t                    maxHeight: _quasarFramework.Platform.is.mobile ? '50vh' : '500px'\n\t                },\n\t                rowHeight: '50px',\n\t                responsive: true,\n\t                pagination: {\n\t                    rowsPerPage: 15,\n\t                    options: [5, 10, 15, 30, 50, 500]\n\t                },\n\t                selection: 'single',\n\t                messages: {\n\t                    noData: '<i>warning</i> No data available to show.',\n\t                    noDataAfterFiltering: '<i>warning</i> No results. Please refine your search terms.'\n\t                }\n\t            },\n\t            columns: [{\n\t                label: 'Id',\n\t                field: 'QuestionTypeId',\n\t                width: '20%',\n\t                filter: true,\n\t                sort: true\n\t            }, {\n\t                label: 'Name',\n\t                field: 'QuestionTypeName',\n\t                width: '40%',\n\t                filter: true,\n\t                sort: true\n\t            }, {\n\t                label: 'Created Date',\n\t                field: 'CreatedDate',\n\t                width: '40%',\n\t                filter: true,\n\t                sort: 'date',\n\t                format: function format(value) {\n\t                    return new Date(value).toLocaleString();\n\t                }\n\t            }],\n\t\n\t            pagination: true,\n\t            rowHeight: 50,\n\t            bodyHeightProp: 'maxHeight',\n\t            bodyHeight: 500\n\t        };\n\t    },\n\t\n\t    watch: {\n\t        pagination: function pagination(value) {\n\t            if (!value) {\n\t                this.oldPagination = _quasarFramework.Utils.clone(this.config.pagination);\n\t                this.config.pagination = false;\n\t                return;\n\t            }\n\t\n\t            this.config.pagination = this.oldPagination;\n\t        },\n\t        rowHeight: function rowHeight(value) {\n\t            this.config.rowHeight = value + 'px';\n\t        },\n\t        bodyHeight: function bodyHeight(value) {\n\t            var style = {};\n\t            if (this.bodyHeightProp !== 'auto') {\n\t                style[this.bodyHeightProp] = value + 'px';\n\t            }\n\t            this.config.bodyStyle = style;\n\t        },\n\t        bodyHeightProp: function bodyHeightProp(value) {\n\t            var style = {};\n\t            if (value !== 'auto') {\n\t                style[value] = this.bodyHeight + 'px';\n\t            }\n\t            this.config.bodyStyle = style;\n\t        }\n\t    },\n\t    mounted: function mounted() {\n\t        this.getAllQuestionTypes();\n\t    },\n\t    computed: (0, _vuex.mapGetters)(['questiontypes']),\n\t    methods: (0, _vuex.mapActions)(['getAllQuestionTypes'])\n\t};\n\n/***/ },\n/* 203 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _vuex = __webpack_require__(15);\n\t\n\tvar _quasarFramework = __webpack_require__(35);\n\t\n\texports.default = {\n\t    name: \"user\",\n\t    data: function data() {\n\t        return {\n\t            config: {\n\t                title: 'Users',\n\t                refresh: true,\n\t                columnPicker: true,\n\t                leftStickyColumns: 1,\n\t                rightStickyColumns: 2,\n\t                bodyStyle: {\n\t                    maxHeight: _quasarFramework.Platform.is.mobile ? '50vh' : '500px'\n\t                },\n\t                rowHeight: '50px',\n\t                responsive: true,\n\t                pagination: {\n\t                    rowsPerPage: 15,\n\t                    options: [5, 10, 15, 30, 50, 500]\n\t                },\n\t                selection: 'single',\n\t                messages: {\n\t                    noData: '<i>warning</i> No data available to show.',\n\t                    noDataAfterFiltering: '<i>warning</i> No results. Please refine your search terms.'\n\t                }\n\t            },\n\t            columns: [{\n\t                label: 'Id',\n\t                field: 'Id',\n\t                width: '120px',\n\t                filter: true,\n\t                sort: true\n\t            }, {\n\t                label: 'Firstname',\n\t                field: 'FirstName',\n\t                filter: true,\n\t                sort: true\n\t            }, {\n\t                label: 'Lastname',\n\t                field: 'LastName',\n\t                filter: true,\n\t                sort: true\n\t            }, {\n\t                label: 'Email',\n\t                field: 'Email',\n\t                filter: true,\n\t                sort: true\n\t            }, {\n\t                label: 'Login',\n\t                field: 'Login',\n\t                filter: true,\n\t                sort: true\n\t            }, {\n\t                label: 'UserType',\n\t                field: 'UserTypeId',\n\t                filter: true,\n\t                sort: true\n\t            }, {\n\t                label: 'Created Date',\n\t                field: 'CreatedDate',\n\t                filter: true,\n\t                sort: 'date',\n\t                format: function format(value) {\n\t                    return new Date(value).toLocaleString();\n\t                }\n\t            }],\n\t\n\t            pagination: true,\n\t            rowHeight: 50,\n\t            bodyHeightProp: 'maxHeight',\n\t            bodyHeight: 500\n\t        };\n\t    },\n\t\n\t    watch: {\n\t        pagination: function pagination(value) {\n\t            if (!value) {\n\t                this.oldPagination = _quasarFramework.Utils.clone(this.config.pagination);\n\t                this.config.pagination = false;\n\t                return;\n\t            }\n\t\n\t            this.config.pagination = this.oldPagination;\n\t        },\n\t        rowHeight: function rowHeight(value) {\n\t            this.config.rowHeight = value + 'px';\n\t        },\n\t        bodyHeight: function bodyHeight(value) {\n\t            var style = {};\n\t            if (this.bodyHeightProp !== 'auto') {\n\t                style[this.bodyHeightProp] = value + 'px';\n\t            }\n\t            this.config.bodyStyle = style;\n\t        },\n\t        bodyHeightProp: function bodyHeightProp(value) {\n\t            var style = {};\n\t            if (value !== 'auto') {\n\t                style[value] = this.bodyHeight + 'px';\n\t            }\n\t            this.config.bodyStyle = style;\n\t        }\n\t    },\n\t    mounted: function mounted() {\n\t        this.getAllUsers();\n\t    },\n\t    computed: (0, _vuex.mapGetters)(['users']),\n\t    methods: (0, _vuex.mapActions)(['getAllUsers'])\n\t};\n\n/***/ },\n/* 204 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = { \"default\": __webpack_require__(255), __esModule: true };\n\n/***/ },\n/* 205 */,\n/* 206 */,\n/* 207 */,\n/* 208 */,\n/* 209 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function(Chart) {\n\t\n\t\tChart.Bar = function(context, config) {\n\t\t\tconfig.type = 'bar';\n\t\n\t\t\treturn new Chart(context, config);\n\t\t};\n\t\n\t};\n\n\n/***/ },\n/* 210 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function(Chart) {\n\t\n\t\tChart.Bubble = function(context, config) {\n\t\t\tconfig.type = 'bubble';\n\t\t\treturn new Chart(context, config);\n\t\t};\n\t\n\t};\n\n\n/***/ },\n/* 211 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function(Chart) {\n\t\n\t\tChart.Doughnut = function(context, config) {\n\t\t\tconfig.type = 'doughnut';\n\t\n\t\t\treturn new Chart(context, config);\n\t\t};\n\t\n\t};\n\n\n/***/ },\n/* 212 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function(Chart) {\n\t\n\t\tChart.Line = function(context, config) {\n\t\t\tconfig.type = 'line';\n\t\n\t\t\treturn new Chart(context, config);\n\t\t};\n\t\n\t};\n\n\n/***/ },\n/* 213 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function(Chart) {\n\t\n\t\tChart.PolarArea = function(context, config) {\n\t\t\tconfig.type = 'polarArea';\n\t\n\t\t\treturn new Chart(context, config);\n\t\t};\n\t\n\t};\n\n\n/***/ },\n/* 214 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function(Chart) {\n\t\n\t\tChart.Radar = function(context, config) {\n\t\t\tconfig.type = 'radar';\n\t\n\t\t\treturn new Chart(context, config);\n\t\t};\n\t\n\t};\n\n\n/***/ },\n/* 215 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function(Chart) {\n\t\n\t\tvar defaultConfig = {\n\t\t\thover: {\n\t\t\t\tmode: 'single'\n\t\t\t},\n\t\n\t\t\tscales: {\n\t\t\t\txAxes: [{\n\t\t\t\t\ttype: 'linear', // scatter should not use a category axis\n\t\t\t\t\tposition: 'bottom',\n\t\t\t\t\tid: 'x-axis-1' // need an ID so datasets can reference the scale\n\t\t\t\t}],\n\t\t\t\tyAxes: [{\n\t\t\t\t\ttype: 'linear',\n\t\t\t\t\tposition: 'left',\n\t\t\t\t\tid: 'y-axis-1'\n\t\t\t\t}]\n\t\t\t},\n\t\n\t\t\ttooltips: {\n\t\t\t\tcallbacks: {\n\t\t\t\t\ttitle: function() {\n\t\t\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t},\n\t\t\t\t\tlabel: function(tooltipItem) {\n\t\t\t\t\t\treturn '(' + tooltipItem.xLabel + ', ' + tooltipItem.yLabel + ')';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t// Register the default config for this type\n\t\tChart.defaults.scatter = defaultConfig;\n\t\n\t\t// Scatter charts use line controllers\n\t\tChart.controllers.scatter = Chart.controllers.line;\n\t\n\t\tChart.Scatter = function(context, config) {\n\t\t\tconfig.type = 'scatter';\n\t\t\treturn new Chart(context, config);\n\t\t};\n\t\n\t};\n\n\n/***/ },\n/* 216 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function(Chart) {\n\t\n\t\tvar helpers = Chart.helpers;\n\t\n\t\tChart.defaults.bar = {\n\t\t\thover: {\n\t\t\t\tmode: 'label'\n\t\t\t},\n\t\n\t\t\tscales: {\n\t\t\t\txAxes: [{\n\t\t\t\t\ttype: 'category',\n\t\n\t\t\t\t\t// Specific to Bar Controller\n\t\t\t\t\tcategoryPercentage: 0.8,\n\t\t\t\t\tbarPercentage: 0.9,\n\t\n\t\t\t\t\t// grid line settings\n\t\t\t\t\tgridLines: {\n\t\t\t\t\t\toffsetGridLines: true\n\t\t\t\t\t}\n\t\t\t\t}],\n\t\t\t\tyAxes: [{\n\t\t\t\t\ttype: 'linear'\n\t\t\t\t}]\n\t\t\t}\n\t\t};\n\t\n\t\tChart.controllers.bar = Chart.DatasetController.extend({\n\t\n\t\t\tdataElementType: Chart.elements.Rectangle,\n\t\n\t\t\tinitialize: function(chart, datasetIndex) {\n\t\t\t\tChart.DatasetController.prototype.initialize.call(this, chart, datasetIndex);\n\t\n\t\t\t\tvar me = this;\n\t\t\t\tvar meta = me.getMeta();\n\t\t\t\tvar dataset = me.getDataset();\n\t\n\t\t\t\tmeta.stack = dataset.stack;\n\t\t\t\t// Use this to indicate that this is a bar dataset.\n\t\t\t\tmeta.bar = true;\n\t\t\t},\n\t\n\t\t\t// Correctly calculate the bar width accounting for stacks and the fact that not all bars are visible\n\t\t\tgetStackCount: function() {\n\t\t\t\tvar me = this;\n\t\t\t\tvar meta = me.getMeta();\n\t\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\n\t\t\t\tvar stacks = [];\n\t\t\t\thelpers.each(me.chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar dsMeta = me.chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (dsMeta.bar && me.chart.isDatasetVisible(datasetIndex) &&\n\t\t\t\t\t\t(yScale.options.stacked === false ||\n\t\t\t\t\t\t(yScale.options.stacked === true && stacks.indexOf(dsMeta.stack) === -1) ||\n\t\t\t\t\t\t(yScale.options.stacked === undefined && (dsMeta.stack === undefined || stacks.indexOf(dsMeta.stack) === -1)))) {\n\t\t\t\t\t\tstacks.push(dsMeta.stack);\n\t\t\t\t\t}\n\t\t\t\t}, me);\n\t\n\t\t\t\treturn stacks.length;\n\t\t\t},\n\t\n\t\t\tupdate: function(reset) {\n\t\t\t\tvar me = this;\n\t\t\t\thelpers.each(me.getMeta().data, function(rectangle, index) {\n\t\t\t\t\tme.updateElement(rectangle, index, reset);\n\t\t\t\t}, me);\n\t\t\t},\n\t\n\t\t\tupdateElement: function(rectangle, index, reset) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar meta = me.getMeta();\n\t\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\t\tvar scaleBase = yScale.getBasePixel();\n\t\t\t\tvar rectangleElementOptions = me.chart.options.elements.rectangle;\n\t\t\t\tvar custom = rectangle.custom || {};\n\t\t\t\tvar dataset = me.getDataset();\n\t\n\t\t\t\trectangle._xScale = xScale;\n\t\t\t\trectangle._yScale = yScale;\n\t\t\t\trectangle._datasetIndex = me.index;\n\t\t\t\trectangle._index = index;\n\t\n\t\t\t\tvar ruler = me.getRuler(index); // The index argument for compatible\n\t\t\t\trectangle._model = {\n\t\t\t\t\tx: me.calculateBarX(index, me.index, ruler),\n\t\t\t\t\ty: reset ? scaleBase : me.calculateBarY(index, me.index),\n\t\n\t\t\t\t\t// Tooltip\n\t\t\t\t\tlabel: me.chart.data.labels[index],\n\t\t\t\t\tdatasetLabel: dataset.label,\n\t\n\t\t\t\t\t// Appearance\n\t\t\t\t\thorizontal: false,\n\t\t\t\t\tbase: reset ? scaleBase : me.calculateBarBase(me.index, index),\n\t\t\t\t\twidth: me.calculateBarWidth(ruler),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor),\n\t\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleElementOptions.borderSkipped,\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth)\n\t\t\t\t};\n\t\n\t\t\t\trectangle.pivot();\n\t\t\t},\n\t\n\t\t\tcalculateBarBase: function(datasetIndex, index) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar meta = me.getMeta();\n\t\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\t\tvar base = yScale.getBaseValue();\n\t\t\t\tvar original = base;\n\t\n\t\t\t\tif ((yScale.options.stacked === true) ||\n\t\t\t\t\t(yScale.options.stacked === undefined && meta.stack !== undefined)) {\n\t\t\t\t\tvar chart = me.chart;\n\t\t\t\t\tvar datasets = chart.data.datasets;\n\t\t\t\t\tvar value = Number(datasets[datasetIndex].data[index]);\n\t\n\t\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\n\t\t\t\t\t\tvar currentDs = datasets[i];\n\t\t\t\t\t\tvar currentDsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\t\tif (currentDsMeta.bar && currentDsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i) &&\n\t\t\t\t\t\t\tmeta.stack === currentDsMeta.stack) {\n\t\t\t\t\t\t\tvar currentVal = Number(currentDs.data[index]);\n\t\t\t\t\t\t\tbase += value < 0 ? Math.min(currentVal, original) : Math.max(currentVal, original);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn yScale.getPixelForValue(base);\n\t\t\t\t}\n\t\n\t\t\t\treturn yScale.getBasePixel();\n\t\t\t},\n\t\n\t\t\tgetRuler: function() {\n\t\t\t\tvar me = this;\n\t\t\t\tvar meta = me.getMeta();\n\t\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\t\tvar stackCount = me.getStackCount();\n\t\n\t\t\t\tvar tickWidth = xScale.width / xScale.ticks.length;\r\n\t\t\t\tvar categoryWidth = tickWidth * xScale.options.categoryPercentage;\n\t\t\t\tvar categorySpacing = (tickWidth - (tickWidth * xScale.options.categoryPercentage)) / 2;\n\t\t\t\tvar fullBarWidth = categoryWidth / stackCount;\n\t\n\t\t\t\tvar barWidth = fullBarWidth * xScale.options.barPercentage;\n\t\t\t\tvar barSpacing = fullBarWidth - (fullBarWidth * xScale.options.barPercentage);\n\t\n\t\t\t\treturn {\n\t\t\t\t\tstackCount: stackCount,\n\t\t\t\t\ttickWidth: tickWidth,\n\t\t\t\t\tcategoryWidth: categoryWidth,\n\t\t\t\t\tcategorySpacing: categorySpacing,\n\t\t\t\t\tfullBarWidth: fullBarWidth,\n\t\t\t\t\tbarWidth: barWidth,\n\t\t\t\t\tbarSpacing: barSpacing\n\t\t\t\t};\n\t\t\t},\n\t\n\t\t\tcalculateBarWidth: function(ruler) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar meta = me.getMeta();\n\t\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\t\tif (xScale.options.barThickness) {\n\t\t\t\t\treturn xScale.options.barThickness;\n\t\t\t\t}\n\t\t\t\treturn ruler.barWidth;\r\n\t\t\t},\n\t\n\t\t\t// Get stack index from the given dataset index accounting for stacks and the fact that not all bars are visible\n\t\t\tgetStackIndex: function(datasetIndex) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar meta = me.chart.getDatasetMeta(datasetIndex);\n\t\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\t\tvar dsMeta, j;\n\t\t\t\tvar stacks = [meta.stack];\n\t\n\t\t\t\tfor (j = 0; j < datasetIndex; ++j) {\n\t\t\t\t\tdsMeta = this.chart.getDatasetMeta(j);\n\t\t\t\t\tif (dsMeta.bar && this.chart.isDatasetVisible(j) &&\n\t\t\t\t\t\t(yScale.options.stacked === false ||\n\t\t\t\t\t\t(yScale.options.stacked === true && stacks.indexOf(dsMeta.stack) === -1) ||\n\t\t\t\t\t\t(yScale.options.stacked === undefined && (dsMeta.stack === undefined || stacks.indexOf(dsMeta.stack) === -1)))) {\n\t\t\t\t\t\tstacks.push(dsMeta.stack);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn stacks.length - 1;\n\t\t\t},\n\t\n\t\t\tcalculateBarX: function(index, datasetIndex, ruler) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar meta = me.getMeta();\n\t\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\t\tvar stackIndex = me.getStackIndex(datasetIndex);\n\t\t\t\tvar leftTick = xScale.getPixelForValue(null, index, datasetIndex, me.chart.isCombo);\n\t\t\t\tleftTick -= me.chart.isCombo ? (ruler.tickWidth / 2) : 0;\n\t\n\t\t\t\treturn leftTick +\n\t\t\t\t\t(ruler.barWidth / 2) +\n\t\t\t\t\truler.categorySpacing +\n\t\t\t\t\t(ruler.barWidth * stackIndex) +\n\t\t\t\t\t(ruler.barSpacing / 2) +\n\t\t\t\t\t(ruler.barSpacing * stackIndex);\n\t\t\t},\n\t\n\t\t\tcalculateBarY: function(index, datasetIndex) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar meta = me.getMeta();\n\t\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\t\tvar value = Number(me.getDataset().data[index]);\n\t\n\t\t\t\tif (yScale.options.stacked ||\n\t\t\t\t\t(yScale.options.stacked === undefined && meta.stack !== undefined)) {\n\t\t\t\t\tvar base = yScale.getBaseValue();\n\t\t\t\t\tvar sumPos = base,\n\t\t\t\t\t\tsumNeg = base;\r\n\t\n\t\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\n\t\t\t\t\t\tvar ds = me.chart.data.datasets[i];\n\t\t\t\t\t\tvar dsMeta = me.chart.getDatasetMeta(i);\n\t\t\t\t\t\tif (dsMeta.bar && dsMeta.yAxisID === yScale.id && me.chart.isDatasetVisible(i) &&\n\t\t\t\t\t\t\tmeta.stack === dsMeta.stack) {\n\t\t\t\t\t\t\tvar stackedVal = Number(ds.data[index]);\n\t\t\t\t\t\t\tif (stackedVal < 0) {\n\t\t\t\t\t\t\t\tsumNeg += stackedVal || 0;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsumPos += stackedVal || 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (value < 0) {\n\t\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + value);\n\t\t\t\t\t}\n\t\t\t\t\treturn yScale.getPixelForValue(sumPos + value);\n\t\t\t\t}\n\t\n\t\t\t\treturn yScale.getPixelForValue(value);\n\t\t\t},\n\t\n\t\t\tdraw: function(ease) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar easingDecimal = ease || 1;\n\t\t\t\tvar metaData = me.getMeta().data;\n\t\t\t\tvar dataset = me.getDataset();\n\t\t\t\tvar i, len;\n\t\n\t\t\t\tChart.canvasHelpers.clipArea(me.chart.chart.ctx, me.chart.chartArea);\n\t\t\t\tfor (i = 0, len = metaData.length; i < len; ++i) {\n\t\t\t\t\tvar d = dataset.data[i];\n\t\t\t\t\tif (d !== null && d !== undefined && !isNaN(d)) {\n\t\t\t\t\t\tmetaData[i].transition(easingDecimal).draw();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tChart.canvasHelpers.unclipArea(me.chart.chart.ctx);\n\t\t\t},\n\t\n\t\t\tsetHoverStyle: function(rectangle) {\n\t\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\t\tvar index = rectangle._index;\n\t\n\t\t\t\tvar custom = rectangle.custom || {};\n\t\t\t\tvar model = rectangle._model;\n\t\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.getValueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.getValueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.getValueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t\t},\n\t\n\t\t\tremoveHoverStyle: function(rectangle) {\n\t\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\t\tvar index = rectangle._index;\n\t\t\t\tvar custom = rectangle.custom || {};\n\t\t\t\tvar model = rectangle._model;\n\t\t\t\tvar rectangleElementOptions = this.chart.options.elements.rectangle;\n\t\n\t\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\n\t\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\n\t\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\n\t\t\t}\n\t\n\t\t});\n\t\n\t\n\t\t// including horizontalBar in the bar file, instead of a file of its own\n\t\t// it extends bar (like pie extends doughnut)\n\t\tChart.defaults.horizontalBar = {\n\t\t\thover: {\n\t\t\t\tmode: 'label'\n\t\t\t},\n\t\n\t\t\tscales: {\n\t\t\t\txAxes: [{\n\t\t\t\t\ttype: 'linear',\n\t\t\t\t\tposition: 'bottom'\n\t\t\t\t}],\n\t\t\t\tyAxes: [{\n\t\t\t\t\tposition: 'left',\n\t\t\t\t\ttype: 'category',\n\t\n\t\t\t\t\t// Specific to Horizontal Bar Controller\n\t\t\t\t\tcategoryPercentage: 0.8,\n\t\t\t\t\tbarPercentage: 0.9,\n\t\n\t\t\t\t\t// grid line settings\n\t\t\t\t\tgridLines: {\n\t\t\t\t\t\toffsetGridLines: true\n\t\t\t\t\t}\n\t\t\t\t}]\n\t\t\t},\n\t\t\telements: {\n\t\t\t\trectangle: {\n\t\t\t\t\tborderSkipped: 'left'\n\t\t\t\t}\n\t\t\t},\n\t\t\ttooltips: {\n\t\t\t\tcallbacks: {\n\t\t\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\t\t\t// Pick first xLabel for now\n\t\t\t\t\t\tvar title = '';\n\t\n\t\t\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\t\t\tif (tooltipItems[0].yLabel) {\n\t\t\t\t\t\t\t\ttitle = tooltipItems[0].yLabel;\n\t\t\t\t\t\t\t} else if (data.labels.length > 0 && tooltipItems[0].index < data.labels.length) {\n\t\t\t\t\t\t\t\ttitle = data.labels[tooltipItems[0].index];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\treturn title;\n\t\t\t\t\t},\n\t\t\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\t\t\tvar datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\n\t\t\t\t\t\treturn datasetLabel + ': ' + tooltipItem.xLabel;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\tChart.controllers.horizontalBar = Chart.controllers.bar.extend({\n\t\n\t\t\t// Correctly calculate the bar width accounting for stacks and the fact that not all bars are visible\n\t\t\tgetStackCount: function() {\n\t\t\t\tvar me = this;\n\t\t\t\tvar meta = me.getMeta();\n\t\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\n\t\t\t\tvar stacks = [];\n\t\t\t\thelpers.each(me.chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar dsMeta = me.chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (dsMeta.bar && me.chart.isDatasetVisible(datasetIndex) &&\n\t\t\t\t\t\t(xScale.options.stacked === false ||\n\t\t\t\t\t\t(xScale.options.stacked === true && stacks.indexOf(dsMeta.stack) === -1) ||\n\t\t\t\t\t\t(xScale.options.stacked === undefined && (dsMeta.stack === undefined || stacks.indexOf(dsMeta.stack) === -1)))) {\n\t\t\t\t\t\tstacks.push(dsMeta.stack);\n\t\t\t\t\t}\n\t\t\t\t}, me);\n\t\n\t\t\t\treturn stacks.length;\n\t\t\t},\n\t\n\t\t\tupdateElement: function(rectangle, index, reset) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar meta = me.getMeta();\n\t\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\t\tvar scaleBase = xScale.getBasePixel();\n\t\t\t\tvar custom = rectangle.custom || {};\n\t\t\t\tvar dataset = me.getDataset();\n\t\t\t\tvar rectangleElementOptions = me.chart.options.elements.rectangle;\n\t\n\t\t\t\trectangle._xScale = xScale;\n\t\t\t\trectangle._yScale = yScale;\n\t\t\t\trectangle._datasetIndex = me.index;\n\t\t\t\trectangle._index = index;\n\t\n\t\t\t\tvar ruler = me.getRuler(index); // The index argument for compatible\n\t\t\t\trectangle._model = {\n\t\t\t\t\tx: reset ? scaleBase : me.calculateBarX(index, me.index),\n\t\t\t\t\ty: me.calculateBarY(index, me.index, ruler),\n\t\n\t\t\t\t\t// Tooltip\n\t\t\t\t\tlabel: me.chart.data.labels[index],\n\t\t\t\t\tdatasetLabel: dataset.label,\n\t\n\t\t\t\t\t// Appearance\n\t\t\t\t\thorizontal: true,\n\t\t\t\t\tbase: reset ? scaleBase : me.calculateBarBase(me.index, index),\n\t\t\t\t\theight: me.calculateBarHeight(ruler),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor),\n\t\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleElementOptions.borderSkipped,\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth)\n\t\t\t\t};\n\t\n\t\t\t\trectangle.pivot();\n\t\t\t},\n\t\n\t\t\tcalculateBarBase: function(datasetIndex, index) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar meta = me.getMeta();\n\t\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\t\tvar base = xScale.getBaseValue();\n\t\t\t\tvar originalBase = base;\n\t\n\t\t\t\tif (xScale.options.stacked ||\n\t\t\t\t\t(xScale.options.stacked === undefined && meta.stack !== undefined)) {\n\t\t\t\t\tvar chart = me.chart;\n\t\t\t\t\tvar datasets = chart.data.datasets;\n\t\t\t\t\tvar value = Number(datasets[datasetIndex].data[index]);\n\t\n\t\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\n\t\t\t\t\t\tvar currentDs = datasets[i];\n\t\t\t\t\t\tvar currentDsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\t\tif (currentDsMeta.bar && currentDsMeta.xAxisID === xScale.id && chart.isDatasetVisible(i) &&\n\t\t\t\t\t\t\tmeta.stack === currentDsMeta.stack) {\n\t\t\t\t\t\t\tvar currentVal = Number(currentDs.data[index]);\n\t\t\t\t\t\t\tbase += value < 0 ? Math.min(currentVal, originalBase) : Math.max(currentVal, originalBase);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn xScale.getPixelForValue(base);\n\t\t\t\t}\n\t\n\t\t\t\treturn xScale.getBasePixel();\n\t\t\t},\n\t\n\t\t\tgetRuler: function() {\n\t\t\t\tvar me = this;\n\t\t\t\tvar meta = me.getMeta();\n\t\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\t\tvar stackCount = me.getStackCount();\n\t\n\t\t\t\tvar tickHeight = yScale.height / yScale.ticks.length;\n\t\t\t\tvar categoryHeight = tickHeight * yScale.options.categoryPercentage;\n\t\t\t\tvar categorySpacing = (tickHeight - (tickHeight * yScale.options.categoryPercentage)) / 2;\n\t\t\t\tvar fullBarHeight = categoryHeight / stackCount;\n\t\n\t\t\t\tvar barHeight = fullBarHeight * yScale.options.barPercentage;\n\t\t\t\tvar barSpacing = fullBarHeight - (fullBarHeight * yScale.options.barPercentage);\n\t\n\t\t\t\treturn {\n\t\t\t\t\tstackCount: stackCount,\n\t\t\t\t\ttickHeight: tickHeight,\n\t\t\t\t\tcategoryHeight: categoryHeight,\n\t\t\t\t\tcategorySpacing: categorySpacing,\n\t\t\t\t\tfullBarHeight: fullBarHeight,\n\t\t\t\t\tbarHeight: barHeight,\n\t\t\t\t\tbarSpacing: barSpacing\n\t\t\t\t};\n\t\t\t},\n\t\n\t\t\tcalculateBarHeight: function(ruler) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar meta = me.getMeta();\n\t\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\t\tif (yScale.options.barThickness) {\n\t\t\t\t\treturn yScale.options.barThickness;\n\t\t\t\t}\n\t\t\t\treturn ruler.barHeight;\n\t\t\t},\n\t\n\t\t\t// Get stack index from the given dataset index accounting for stacks and the fact that not all bars are visible\n\t\t\tgetStackIndex: function(datasetIndex) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar meta = me.chart.getDatasetMeta(datasetIndex);\n\t\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\t\tvar dsMeta, j;\n\t\t\t\tvar stacks = [meta.stack];\n\t\n\t\t\t\tfor (j = 0; j < datasetIndex; ++j) {\n\t\t\t\t\tdsMeta = this.chart.getDatasetMeta(j);\n\t\t\t\t\tif (dsMeta.bar && this.chart.isDatasetVisible(j) &&\n\t\t\t\t\t\t(xScale.options.stacked === false ||\n\t\t\t\t\t\t(xScale.options.stacked === true && stacks.indexOf(dsMeta.stack) === -1) ||\n\t\t\t\t\t\t(xScale.options.stacked === undefined && (dsMeta.stack === undefined || stacks.indexOf(dsMeta.stack) === -1)))) {\n\t\t\t\t\t\tstacks.push(dsMeta.stack);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn stacks.length - 1;\r\n\t\t\t},\n\t\n\t\t\tcalculateBarX: function(index, datasetIndex) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar meta = me.getMeta();\n\t\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\t\tvar value = Number(me.getDataset().data[index]);\n\t\n\t\t\t\tif (xScale.options.stacked ||\n\t\t\t\t\t(xScale.options.stacked === undefined && meta.stack !== undefined)) {\n\t\t\t\t\tvar base = xScale.getBaseValue();\n\t\t\t\t\tvar sumPos = base,\n\t\t\t\t\t\tsumNeg = base;\r\n\t\n\t\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\n\t\t\t\t\t\tvar ds = me.chart.data.datasets[i];\n\t\t\t\t\t\tvar dsMeta = me.chart.getDatasetMeta(i);\n\t\t\t\t\t\tif (dsMeta.bar && dsMeta.xAxisID === xScale.id && me.chart.isDatasetVisible(i) &&\n\t\t\t\t\t\t\tmeta.stack === dsMeta.stack) {\n\t\t\t\t\t\t\tvar stackedVal = Number(ds.data[index]);\n\t\t\t\t\t\t\tif (stackedVal < 0) {\n\t\t\t\t\t\t\t\tsumNeg += stackedVal || 0;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsumPos += stackedVal || 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (value < 0) {\n\t\t\t\t\t\treturn xScale.getPixelForValue(sumNeg + value);\n\t\t\t\t\t}\n\t\t\t\t\treturn xScale.getPixelForValue(sumPos + value);\n\t\t\t\t}\n\t\n\t\t\t\treturn xScale.getPixelForValue(value);\n\t\t\t},\n\t\n\t\t\tcalculateBarY: function(index, datasetIndex, ruler) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar meta = me.getMeta();\n\t\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\t\tvar stackIndex = me.getStackIndex(datasetIndex);\n\t\t\t\tvar topTick = yScale.getPixelForValue(null, index, datasetIndex, me.chart.isCombo);\n\t\t\t\ttopTick -= me.chart.isCombo ? (ruler.tickHeight / 2) : 0;\n\t\n\t\t\t\treturn topTick +\n\t\t\t\t\t(ruler.barHeight / 2) +\n\t\t\t\t\truler.categorySpacing +\n\t\t\t\t\t(ruler.barHeight * stackIndex) +\n\t\t\t\t\t(ruler.barSpacing / 2) +\n\t\t\t\t\t(ruler.barSpacing * stackIndex);\n\t\t\t}\n\t\t});\n\t};\n\n\n/***/ },\n/* 217 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function(Chart) {\n\t\n\t\tvar helpers = Chart.helpers;\n\t\n\t\tChart.defaults.bubble = {\n\t\t\thover: {\n\t\t\t\tmode: 'single'\n\t\t\t},\n\t\n\t\t\tscales: {\n\t\t\t\txAxes: [{\n\t\t\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\t\t\tposition: 'bottom',\n\t\t\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t\t\t}],\n\t\t\t\tyAxes: [{\n\t\t\t\t\ttype: 'linear',\n\t\t\t\t\tposition: 'left',\n\t\t\t\t\tid: 'y-axis-0'\n\t\t\t\t}]\n\t\t\t},\n\t\n\t\t\ttooltips: {\n\t\t\t\tcallbacks: {\n\t\t\t\t\ttitle: function() {\n\t\t\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t},\n\t\t\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\t\t\tvar datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\n\t\t\t\t\t\tvar dataPoint = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\t\t\t\t\t\treturn datasetLabel + ': (' + tooltipItem.xLabel + ', ' + tooltipItem.yLabel + ', ' + dataPoint.r + ')';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\tChart.controllers.bubble = Chart.DatasetController.extend({\n\t\n\t\t\tdataElementType: Chart.elements.Point,\n\t\n\t\t\tupdate: function(reset) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar meta = me.getMeta();\n\t\t\t\tvar points = meta.data;\n\t\n\t\t\t\t// Update Points\n\t\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t\t});\n\t\t\t},\n\t\n\t\t\tupdateElement: function(point, index, reset) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar meta = me.getMeta();\n\t\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\n\t\t\t\tvar custom = point.custom || {};\n\t\t\t\tvar dataset = me.getDataset();\n\t\t\t\tvar data = dataset.data[index];\n\t\t\t\tvar pointElementOptions = me.chart.options.elements.point;\n\t\t\t\tvar dsIndex = me.index;\n\t\n\t\t\t\thelpers.extend(point, {\n\t\t\t\t\t// Utility\n\t\t\t\t\t_xScale: xScale,\n\t\t\t\t\t_yScale: yScale,\n\t\t\t\t\t_datasetIndex: dsIndex,\n\t\t\t\t\t_index: index,\n\t\n\t\t\t\t\t// Desired view properties\n\t\t\t\t\t_model: {\n\t\t\t\t\t\tx: reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex, me.chart.isCombo),\n\t\t\t\t\t\ty: reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex),\n\t\t\t\t\t\t// Appearance\n\t\t\t\t\t\tradius: reset ? 0 : custom.radius ? custom.radius : me.getRadius(data),\n\t\n\t\t\t\t\t\t// Tooltip\n\t\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.getValueAtIndexOrDefault(dataset.hitRadius, index, pointElementOptions.hitRadius)\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\t\t\t// Trick to reset the styles of the point\n\t\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(me, point, pointElementOptions);\n\t\n\t\t\t\tvar model = point._model;\n\t\t\t\tmodel.skip = custom.skip ? custom.skip : (isNaN(model.x) || isNaN(model.y));\n\t\n\t\t\t\tpoint.pivot();\n\t\t\t},\n\t\n\t\t\tgetRadius: function(value) {\n\t\t\t\treturn value.r || this.chart.options.elements.point.radius;\n\t\t\t},\n\t\n\t\t\tsetHoverStyle: function(point) {\n\t\t\t\tvar me = this;\n\t\t\t\tChart.DatasetController.prototype.setHoverStyle.call(me, point);\n\t\n\t\t\t\t// Radius\n\t\t\t\tvar dataset = me.chart.data.datasets[point._datasetIndex];\n\t\t\t\tvar index = point._index;\n\t\t\t\tvar custom = point.custom || {};\n\t\t\t\tvar model = point._model;\n\t\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : (helpers.getValueAtIndexOrDefault(dataset.hoverRadius, index, me.chart.options.elements.point.hoverRadius)) + me.getRadius(dataset.data[index]);\n\t\t\t},\n\t\n\t\t\tremoveHoverStyle: function(point) {\n\t\t\t\tvar me = this;\n\t\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(me, point, me.chart.options.elements.point);\n\t\n\t\t\t\tvar dataVal = me.chart.data.datasets[point._datasetIndex].data[point._index];\n\t\t\t\tvar custom = point.custom || {};\n\t\t\t\tvar model = point._model;\n\t\n\t\t\t\tmodel.radius = custom.radius ? custom.radius : me.getRadius(dataVal);\n\t\t\t}\n\t\t});\n\t};\n\n\n/***/ },\n/* 218 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function(Chart) {\n\t\n\t\tvar helpers = Chart.helpers,\n\t\t\tdefaults = Chart.defaults;\n\t\n\t\tdefaults.doughnut = {\n\t\t\tanimation: {\n\t\t\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\t\t\tanimateRotate: true,\n\t\t\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\t\t\tanimateScale: false\n\t\t\t},\n\t\t\taspectRatio: 1,\n\t\t\thover: {\n\t\t\t\tmode: 'single'\n\t\t\t},\n\t\t\tlegendCallback: function(chart) {\n\t\t\t\tvar text = [];\n\t\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\n\t\t\t\tvar data = chart.data;\n\t\t\t\tvar datasets = data.datasets;\n\t\t\t\tvar labels = data.labels;\n\t\n\t\t\t\tif (datasets.length) {\n\t\t\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\t\t\tif (labels[i]) {\n\t\t\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttext.push('</li>');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\ttext.push('</ul>');\n\t\t\t\treturn text.join('');\n\t\t\t},\n\t\t\tlegend: {\n\t\t\t\tlabels: {\n\t\t\t\t\tgenerateLabels: function(chart) {\n\t\t\t\t\t\tvar data = chart.data;\n\t\t\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\t\t\tvar getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\n\t\t\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : getValueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : getValueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : getValueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\t\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\t\n\t\t\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\n\t\t\t\tonClick: function(e, legendItem) {\n\t\t\t\t\tvar index = legendItem.index;\n\t\t\t\t\tvar chart = this.chart;\n\t\t\t\t\tvar i, ilen, meta;\n\t\n\t\t\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t\t\t// toggle visibility of index if exists\n\t\t\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tchart.update();\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\t// The percentage of the chart that we cut out of the middle.\n\t\t\tcutoutPercentage: 50,\n\t\n\t\t\t// The rotation of the chart, where the first data arc begins.\n\t\t\trotation: Math.PI * -0.5,\n\t\n\t\t\t// The total circumference of the chart.\n\t\t\tcircumference: Math.PI * 2.0,\n\t\n\t\t\t// Need to override these to give a nice default\n\t\t\ttooltips: {\n\t\t\t\tcallbacks: {\n\t\t\t\t\ttitle: function() {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t},\n\t\t\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\t\n\t\t\t\t\t\tif (helpers.isArray(dataLabel)) {\n\t\t\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdataLabel += value;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\treturn dataLabel;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\tdefaults.pie = helpers.clone(defaults.doughnut);\n\t\thelpers.extend(defaults.pie, {\n\t\t\tcutoutPercentage: 0\n\t\t});\n\t\n\t\n\t\tChart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n\t\n\t\t\tdataElementType: Chart.elements.Arc,\n\t\n\t\t\tlinkScales: helpers.noop,\n\t\n\t\t\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\t\t\tgetRingIndex: function(datasetIndex) {\n\t\t\t\tvar ringIndex = 0;\n\t\n\t\t\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t\t\t++ringIndex;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn ringIndex;\n\t\t\t},\n\t\n\t\t\tupdate: function(reset) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar chart = me.chart,\n\t\t\t\t\tchartArea = chart.chartArea,\n\t\t\t\t\topts = chart.options,\n\t\t\t\t\tarcOpts = opts.elements.arc,\n\t\t\t\t\tavailableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth,\n\t\t\t\t\tavailableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth,\n\t\t\t\t\tminSize = Math.min(availableWidth, availableHeight),\n\t\t\t\t\toffset = {\n\t\t\t\t\t\tx: 0,\n\t\t\t\t\t\ty: 0\n\t\t\t\t\t},\n\t\t\t\t\tmeta = me.getMeta(),\n\t\t\t\t\tcutoutPercentage = opts.cutoutPercentage,\n\t\t\t\t\tcircumference = opts.circumference;\n\t\n\t\t\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\t\t\tif (circumference < Math.PI * 2.0) {\n\t\t\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\t\t\tvar endAngle = startAngle + circumference;\n\t\t\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\t\t\tvar contains0 = (startAngle <= 0 && 0 <= endAngle) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t\t\t}\n\t\n\t\t\t\tchart.borderWidth = me.getMaxBorderWidth(meta.data);\n\t\t\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\t\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n\t\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\t\t\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\t\t\tchart.offsetY = offset.y * chart.outerRadius;\n\t\n\t\t\t\tmeta.total = me.calculateTotal();\n\t\n\t\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\n\t\t\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n\t\n\t\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t\t});\n\t\t\t},\n\t\n\t\t\tupdateElement: function(arc, index, reset) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar chart = me.chart,\n\t\t\t\t\tchartArea = chart.chartArea,\n\t\t\t\t\topts = chart.options,\n\t\t\t\t\tanimationOpts = opts.animation,\n\t\t\t\t\tcenterX = (chartArea.left + chartArea.right) / 2,\n\t\t\t\t\tcenterY = (chartArea.top + chartArea.bottom) / 2,\n\t\t\t\t\tstartAngle = opts.rotation, // non reset case handled later\n\t\t\t\t\tendAngle = opts.rotation, // non reset case handled later\n\t\t\t\t\tdataset = me.getDataset(),\n\t\t\t\t\tcircumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI)),\n\t\t\t\t\tinnerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius,\n\t\t\t\t\touterRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius,\n\t\t\t\t\tvalueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\n\t\n\t\t\t\thelpers.extend(arc, {\n\t\t\t\t\t// Utility\n\t\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t\t_index: index,\n\t\n\t\t\t\t\t// Desired view properties\n\t\t\t\t\t_model: {\n\t\t\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\t\t\tstartAngle: startAngle,\n\t\t\t\t\t\tendAngle: endAngle,\n\t\t\t\t\t\tcircumference: circumference,\n\t\t\t\t\t\touterRadius: outerRadius,\n\t\t\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\t\t\tlabel: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\t\t\tvar model = arc._model;\n\t\t\t\t// Resets the visual styles\n\t\t\t\tthis.removeHoverStyle(arc);\n\t\n\t\t\t\t// Set correct angles if not resetting\n\t\t\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\t\t\tif (index === 0) {\n\t\t\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t\t\t}\n\t\n\t\t\t\tarc.pivot();\n\t\t\t},\n\t\n\t\t\tremoveHoverStyle: function(arc) {\n\t\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t\t},\n\t\n\t\t\tcalculateTotal: function() {\n\t\t\t\tvar dataset = this.getDataset();\n\t\t\t\tvar meta = this.getMeta();\n\t\t\t\tvar total = 0;\n\t\t\t\tvar value;\n\t\n\t\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\t\tvalue = dataset.data[index];\n\t\t\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\t\t\t/* if (total === 0) {\n\t\t\t\t\ttotal = NaN;\n\t\t\t\t}*/\n\t\n\t\t\t\treturn total;\n\t\t\t},\n\t\n\t\t\tcalculateCircumference: function(value) {\n\t\t\t\tvar total = this.getMeta().total;\n\t\t\t\tif (total > 0 && !isNaN(value)) {\n\t\t\t\t\treturn (Math.PI * 2.0) * (value / total);\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t},\n\t\n\t\t\t// gets the max border or hover width to properly scale pie charts\n\t\t\tgetMaxBorderWidth: function(elements) {\n\t\t\t\tvar max = 0,\n\t\t\t\t\tindex = this.index,\n\t\t\t\t\tlength = elements.length,\n\t\t\t\t\tborderWidth,\n\t\t\t\t\thoverWidth;\n\t\n\t\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\t\tborderWidth = elements[i]._model ? elements[i]._model.borderWidth : 0;\n\t\t\t\t\thoverWidth = elements[i]._chart ? elements[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n\t\n\t\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t\t}\n\t\t\t\treturn max;\n\t\t\t}\n\t\t});\n\t};\n\n\n/***/ },\n/* 219 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function(Chart) {\n\t\n\t\tvar helpers = Chart.helpers;\n\t\n\t\tChart.defaults.line = {\n\t\t\tshowLines: true,\n\t\t\tspanGaps: false,\n\t\n\t\t\thover: {\n\t\t\t\tmode: 'label'\n\t\t\t},\n\t\n\t\t\tscales: {\n\t\t\t\txAxes: [{\n\t\t\t\t\ttype: 'category',\n\t\t\t\t\tid: 'x-axis-0'\n\t\t\t\t}],\n\t\t\t\tyAxes: [{\n\t\t\t\t\ttype: 'linear',\n\t\t\t\t\tid: 'y-axis-0'\n\t\t\t\t}]\n\t\t\t}\n\t\t};\n\t\n\t\tfunction lineEnabled(dataset, options) {\n\t\t\treturn helpers.getValueOrDefault(dataset.showLine, options.showLines);\n\t\t}\n\t\n\t\tChart.controllers.line = Chart.DatasetController.extend({\n\t\n\t\t\tdatasetElementType: Chart.elements.Line,\n\t\n\t\t\tdataElementType: Chart.elements.Point,\n\t\n\t\t\tupdate: function(reset) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar meta = me.getMeta();\n\t\t\t\tvar line = meta.dataset;\n\t\t\t\tvar points = meta.data || [];\n\t\t\t\tvar options = me.chart.options;\n\t\t\t\tvar lineElementOptions = options.elements.line;\n\t\t\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\t\t\tvar i, ilen, custom;\n\t\t\t\tvar dataset = me.getDataset();\n\t\t\t\tvar showLine = lineEnabled(dataset, options);\n\t\n\t\t\t\t// Update Line\n\t\t\t\tif (showLine) {\n\t\t\t\t\tcustom = line.custom || {};\n\t\n\t\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Utility\n\t\t\t\t\tline._scale = scale;\n\t\t\t\t\tline._datasetIndex = me.index;\n\t\t\t\t\t// Data\n\t\t\t\t\tline._children = points;\n\t\t\t\t\t// Model\n\t\t\t\t\tline._model = {\n\t\t\t\t\t\t// Appearance\n\t\t\t\t\t\t// The default behavior of lines is to break at null values, according\n\t\t\t\t\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t\t\t\t\t// This option gives lines the ability to span gaps\n\t\t\t\t\t\tspanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n\t\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\t\tsteppedLine: custom.steppedLine ? custom.steppedLine : helpers.getValueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n\t\t\t\t\t\tcubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.getValueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\n\t\t\t\t\t\t// Scale\n\t\t\t\t\t\tscaleTop: scale.top,\n\t\t\t\t\t\tscaleBottom: scale.bottom,\n\t\t\t\t\t\tscaleZero: scale.getBasePixel()\n\t\t\t\t\t};\n\t\n\t\t\t\t\tline.pivot();\n\t\t\t\t}\n\t\n\t\t\t\t// Update Points\n\t\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\n\t\t\t\t\tme.updateElement(points[i], i, reset);\n\t\t\t\t}\n\t\n\t\t\t\tif (showLine && line._model.tension !== 0) {\n\t\t\t\t\tme.updateBezierControlPoints();\n\t\t\t\t}\n\t\n\t\t\t\t// Now pivot the point for animation\n\t\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\n\t\t\t\t\tpoints[i].pivot();\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\tgetPointBackgroundColor: function(point, index) {\n\t\t\t\tvar backgroundColor = this.chart.options.elements.point.backgroundColor;\n\t\t\t\tvar dataset = this.getDataset();\n\t\t\t\tvar custom = point.custom || {};\n\t\n\t\t\t\tif (custom.backgroundColor) {\n\t\t\t\t\tbackgroundColor = custom.backgroundColor;\n\t\t\t\t} else if (dataset.pointBackgroundColor) {\n\t\t\t\t\tbackgroundColor = helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n\t\t\t\t} else if (dataset.backgroundColor) {\n\t\t\t\t\tbackgroundColor = dataset.backgroundColor;\n\t\t\t\t}\n\t\n\t\t\t\treturn backgroundColor;\n\t\t\t},\n\t\n\t\t\tgetPointBorderColor: function(point, index) {\n\t\t\t\tvar borderColor = this.chart.options.elements.point.borderColor;\n\t\t\t\tvar dataset = this.getDataset();\n\t\t\t\tvar custom = point.custom || {};\n\t\n\t\t\t\tif (custom.borderColor) {\n\t\t\t\t\tborderColor = custom.borderColor;\n\t\t\t\t} else if (dataset.pointBorderColor) {\n\t\t\t\t\tborderColor = helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n\t\t\t\t} else if (dataset.borderColor) {\n\t\t\t\t\tborderColor = dataset.borderColor;\n\t\t\t\t}\n\t\n\t\t\t\treturn borderColor;\n\t\t\t},\n\t\n\t\t\tgetPointBorderWidth: function(point, index) {\n\t\t\t\tvar borderWidth = this.chart.options.elements.point.borderWidth;\n\t\t\t\tvar dataset = this.getDataset();\n\t\t\t\tvar custom = point.custom || {};\n\t\n\t\t\t\tif (!isNaN(custom.borderWidth)) {\n\t\t\t\t\tborderWidth = custom.borderWidth;\n\t\t\t\t} else if (!isNaN(dataset.pointBorderWidth)) {\n\t\t\t\t\tborderWidth = helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n\t\t\t\t} else if (!isNaN(dataset.borderWidth)) {\n\t\t\t\t\tborderWidth = dataset.borderWidth;\n\t\t\t\t}\n\t\n\t\t\t\treturn borderWidth;\n\t\t\t},\n\t\n\t\t\tupdateElement: function(point, index, reset) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar meta = me.getMeta();\n\t\t\t\tvar custom = point.custom || {};\n\t\t\t\tvar dataset = me.getDataset();\n\t\t\t\tvar datasetIndex = me.index;\n\t\t\t\tvar value = dataset.data[index];\n\t\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\t\tvar pointOptions = me.chart.options.elements.point;\n\t\t\t\tvar x, y;\n\t\t\t\tvar labels = me.chart.data.labels || [];\n\t\t\t\tvar includeOffset = (labels.length === 1 || dataset.data.length === 1) || me.chart.isCombo;\n\t\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t\t}\n\t\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t\t}\n\t\n\t\t\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex, includeOffset);\n\t\t\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\t\n\t\t\t\t// Utility\n\t\t\t\tpoint._xScale = xScale;\n\t\t\t\tpoint._yScale = yScale;\n\t\t\t\tpoint._datasetIndex = datasetIndex;\n\t\t\t\tpoint._index = index;\n\t\n\t\t\t\t// Desired view properties\n\t\t\t\tpoint._model = {\n\t\t\t\t\tx: x,\n\t\t\t\t\ty: y,\n\t\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\t\t// Appearance\n\t\t\t\t\tradius: custom.radius || helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n\t\t\t\t\tpointStyle: custom.pointStyle || helpers.getValueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n\t\t\t\t\tbackgroundColor: me.getPointBackgroundColor(point, index),\n\t\t\t\t\tborderColor: me.getPointBorderColor(point, index),\n\t\t\t\t\tborderWidth: me.getPointBorderWidth(point, index),\n\t\t\t\t\ttension: meta.dataset._model ? meta.dataset._model.tension : 0,\n\t\t\t\t\tsteppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n\t\t\t\t\t// Tooltip\n\t\t\t\t\thitRadius: custom.hitRadius || helpers.getValueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n\t\t\t\t};\n\t\t\t},\n\t\n\t\t\tcalculatePointY: function(value, index, datasetIndex) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar chart = me.chart;\n\t\t\t\tvar meta = me.getMeta();\n\t\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\t\tvar sumPos = 0;\n\t\t\t\tvar sumNeg = 0;\n\t\t\t\tvar i, ds, dsMeta;\n\t\n\t\t\t\tif (yScale.options.stacked) {\n\t\t\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\t\t\tif (rightValue < 0) {\n\t\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t\t\t}\n\t\t\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t\t\t}\n\t\n\t\t\t\treturn yScale.getPixelForValue(value);\n\t\t\t},\n\t\n\t\t\tupdateBezierControlPoints: function() {\n\t\t\t\tvar me = this;\n\t\t\t\tvar meta = me.getMeta();\n\t\t\t\tvar area = me.chart.chartArea;\n\t\t\t\tvar points = (meta.data || []);\n\t\t\t\tvar i, ilen, point, model, controlPoints;\n\t\n\t\t\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\t\t\tif (meta.dataset._model.spanGaps) {\n\t\t\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\t\t\treturn !pt._model.skip;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\n\t\t\t\tfunction capControlPoint(pt, min, max) {\n\t\t\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t\t\t}\n\t\n\t\t\t\tif (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n\t\t\t\t\thelpers.splineCurveMonotone(points);\n\t\t\t\t} else {\n\t\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\t\tpoint = points[i];\n\t\t\t\t\t\tmodel = point._model;\n\t\t\t\t\t\tcontrolPoints = helpers.splineCurve(\n\t\t\t\t\t\t\thelpers.previousItem(points, i)._model,\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\thelpers.nextItem(points, i)._model,\n\t\t\t\t\t\t\tmeta.dataset._model.tension\n\t\t\t\t\t\t);\n\t\t\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tif (me.chart.options.elements.line.capBezierPoints) {\n\t\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\t\tmodel = points[i]._model;\n\t\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\tdraw: function(ease) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar meta = me.getMeta();\n\t\t\t\tvar points = meta.data || [];\n\t\t\t\tvar easingDecimal = ease || 1;\n\t\t\t\tvar i, ilen;\n\t\n\t\t\t\t// Transition Point Locations\n\t\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\n\t\t\t\t\tpoints[i].transition(easingDecimal);\n\t\t\t\t}\n\t\n\t\t\t\tChart.canvasHelpers.clipArea(me.chart.chart.ctx, me.chart.chartArea);\n\t\t\t\t// Transition and Draw the line\n\t\t\t\tif (lineEnabled(me.getDataset(), me.chart.options)) {\n\t\t\t\t\tmeta.dataset.transition(easingDecimal).draw();\n\t\t\t\t}\n\t\t\t\tChart.canvasHelpers.unclipArea(me.chart.chart.ctx);\n\t\n\t\t\t\t// Draw the points\n\t\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\n\t\t\t\t\tpoints[i].draw(me.chart.chartArea);\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\tsetHoverStyle: function(point) {\n\t\t\t\t// Point\n\t\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\t\tvar index = point._index;\n\t\t\t\tvar custom = point.custom || {};\n\t\t\t\tvar model = point._model;\n\t\n\t\t\t\tmodel.radius = custom.hoverRadius || helpers.getValueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor || helpers.getValueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\t\tmodel.borderColor = custom.hoverBorderColor || helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\t\tmodel.borderWidth = custom.hoverBorderWidth || helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t\t},\n\t\n\t\t\tremoveHoverStyle: function(point) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar dataset = me.chart.data.datasets[point._datasetIndex];\n\t\t\t\tvar index = point._index;\n\t\t\t\tvar custom = point.custom || {};\n\t\t\t\tvar model = point._model;\n\t\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t\t}\n\t\n\t\t\t\tmodel.radius = custom.radius || helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\n\t\t\t\tmodel.backgroundColor = me.getPointBackgroundColor(point, index);\n\t\t\t\tmodel.borderColor = me.getPointBorderColor(point, index);\n\t\t\t\tmodel.borderWidth = me.getPointBorderWidth(point, index);\n\t\t\t}\n\t\t});\n\t};\n\n\n/***/ },\n/* 220 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function(Chart) {\n\t\n\t\tvar helpers = Chart.helpers;\n\t\n\t\tChart.defaults.polarArea = {\n\t\n\t\t\tscale: {\n\t\t\t\ttype: 'radialLinear',\n\t\t\t\tlineArc: true, // so that lines are circular\n\t\t\t\tticks: {\n\t\t\t\t\tbeginAtZero: true\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\t// Boolean - Whether to animate the rotation of the chart\n\t\t\tanimation: {\n\t\t\t\tanimateRotate: true,\n\t\t\t\tanimateScale: true\n\t\t\t},\n\t\n\t\t\tstartAngle: -0.5 * Math.PI,\n\t\t\taspectRatio: 1,\n\t\t\tlegendCallback: function(chart) {\n\t\t\t\tvar text = [];\n\t\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\n\t\t\t\tvar data = chart.data;\n\t\t\t\tvar datasets = data.datasets;\n\t\t\t\tvar labels = data.labels;\n\t\n\t\t\t\tif (datasets.length) {\n\t\t\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\t\t\tif (labels[i]) {\n\t\t\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttext.push('</li>');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\ttext.push('</ul>');\n\t\t\t\treturn text.join('');\n\t\t\t},\n\t\t\tlegend: {\n\t\t\t\tlabels: {\n\t\t\t\t\tgenerateLabels: function(chart) {\n\t\t\t\t\t\tvar data = chart.data;\n\t\t\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\t\t\tvar getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\n\t\t\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : getValueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : getValueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : getValueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\t\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\t\n\t\t\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\n\t\t\t\tonClick: function(e, legendItem) {\n\t\t\t\t\tvar index = legendItem.index;\n\t\t\t\t\tvar chart = this.chart;\n\t\t\t\t\tvar i, ilen, meta;\n\t\n\t\t\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tchart.update();\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\t// Need to override these to give a nice default\n\t\t\ttooltips: {\n\t\t\t\tcallbacks: {\n\t\t\t\t\ttitle: function() {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t},\n\t\t\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\t\t\treturn data.labels[tooltipItem.index] + ': ' + tooltipItem.yLabel;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\tChart.controllers.polarArea = Chart.DatasetController.extend({\n\t\n\t\t\tdataElementType: Chart.elements.Arc,\n\t\n\t\t\tlinkScales: helpers.noop,\n\t\n\t\t\tupdate: function(reset) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar chart = me.chart;\n\t\t\t\tvar chartArea = chart.chartArea;\n\t\t\t\tvar meta = me.getMeta();\n\t\t\t\tvar opts = chart.options;\n\t\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\t\t\t\tchart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n\t\t\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\t\n\t\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\t\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\t\n\t\t\t\tmeta.count = me.countVisibleElements();\n\t\n\t\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t\t});\n\t\t\t},\n\t\n\t\t\tupdateElement: function(arc, index, reset) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar chart = me.chart;\n\t\t\t\tvar dataset = me.getDataset();\n\t\t\t\tvar opts = chart.options;\n\t\t\t\tvar animationOpts = opts.animation;\n\t\t\t\tvar scale = chart.scale;\n\t\t\t\tvar getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\n\t\t\t\tvar labels = chart.data.labels;\n\t\n\t\t\t\tvar circumference = me.calculateCircumference(dataset.data[index]);\n\t\t\t\tvar centerX = scale.xCenter;\n\t\t\t\tvar centerY = scale.yCenter;\n\t\n\t\t\t\t// If there is NaN data before us, we need to calculate the starting angle correctly.\n\t\t\t\t// We could be way more efficient here, but its unlikely that the polar area chart will have a lot of data\n\t\t\t\tvar visibleCount = 0;\n\t\t\t\tvar meta = me.getMeta();\n\t\t\t\tfor (var i = 0; i < index; ++i) {\n\t\t\t\t\tif (!isNaN(dataset.data[i]) && !meta.data[i].hidden) {\n\t\t\t\t\t\t++visibleCount;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\t\t\tvar datasetStartAngle = opts.startAngle;\n\t\t\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\t\t\tvar startAngle = datasetStartAngle + (circumference * visibleCount);\n\t\t\t\tvar endAngle = startAngle + (arc.hidden ? 0 : circumference);\n\t\n\t\t\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\n\t\t\t\thelpers.extend(arc, {\n\t\t\t\t\t// Utility\n\t\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t\t_index: index,\n\t\t\t\t\t_scale: scale,\n\t\n\t\t\t\t\t// Desired view properties\n\t\t\t\t\t_model: {\n\t\t\t\t\t\tx: centerX,\n\t\t\t\t\t\ty: centerY,\n\t\t\t\t\t\tinnerRadius: 0,\n\t\t\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\t\t\tlabel: getValueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\t\t\t// Apply border and fill style\n\t\t\t\tme.removeHoverStyle(arc);\n\t\n\t\t\t\tarc.pivot();\n\t\t\t},\n\t\n\t\t\tremoveHoverStyle: function(arc) {\n\t\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t\t},\n\t\n\t\t\tcountVisibleElements: function() {\n\t\t\t\tvar dataset = this.getDataset();\n\t\t\t\tvar meta = this.getMeta();\n\t\t\t\tvar count = 0;\n\t\n\t\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\t\t\treturn count;\n\t\t\t},\n\t\n\t\t\tcalculateCircumference: function(value) {\n\t\t\t\tvar count = this.getMeta().count;\n\t\t\t\tif (count > 0 && !isNaN(value)) {\n\t\t\t\t\treturn (2 * Math.PI) / count;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t});\n\t};\n\n\n/***/ },\n/* 221 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function(Chart) {\n\t\n\t\tvar helpers = Chart.helpers;\n\t\n\t\tChart.defaults.radar = {\n\t\t\taspectRatio: 1,\n\t\t\tscale: {\n\t\t\t\ttype: 'radialLinear'\n\t\t\t},\n\t\t\telements: {\n\t\t\t\tline: {\n\t\t\t\t\ttension: 0 // no bezier in radar\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\tChart.controllers.radar = Chart.DatasetController.extend({\n\t\n\t\t\tdatasetElementType: Chart.elements.Line,\n\t\n\t\t\tdataElementType: Chart.elements.Point,\n\t\n\t\t\tlinkScales: helpers.noop,\n\t\n\t\t\tupdate: function(reset) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar meta = me.getMeta();\n\t\t\t\tvar line = meta.dataset;\n\t\t\t\tvar points = meta.data;\n\t\t\t\tvar custom = line.custom || {};\n\t\t\t\tvar dataset = me.getDataset();\n\t\t\t\tvar lineElementOptions = me.chart.options.elements.line;\n\t\t\t\tvar scale = me.chart.scale;\n\t\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t\t}\n\t\n\t\t\t\thelpers.extend(meta.dataset, {\n\t\t\t\t\t// Utility\n\t\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t\t// Data\n\t\t\t\t\t_children: points,\n\t\t\t\t\t_loop: true,\n\t\t\t\t\t// Model\n\t\t\t\t\t_model: {\n\t\t\t\t\t\t// Appearance\n\t\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\n\t\t\t\t\t\t// Scale\n\t\t\t\t\t\tscaleTop: scale.top,\n\t\t\t\t\t\tscaleBottom: scale.bottom,\n\t\t\t\t\t\tscaleZero: scale.getBasePosition()\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\t\t\tmeta.dataset.pivot();\n\t\n\t\t\t\t// Update Points\n\t\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t\t}, me);\n\t\n\t\t\t\t// Update bezier control points\n\t\t\t\tme.updateBezierControlPoints();\n\t\t\t},\n\t\t\tupdateElement: function(point, index, reset) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar custom = point.custom || {};\n\t\t\t\tvar dataset = me.getDataset();\n\t\t\t\tvar scale = me.chart.scale;\n\t\t\t\tvar pointElementOptions = me.chart.options.elements.point;\n\t\t\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\t\n\t\t\t\thelpers.extend(point, {\n\t\t\t\t\t// Utility\n\t\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t\t_index: index,\n\t\t\t\t\t_scale: scale,\n\t\n\t\t\t\t\t// Desired view properties\n\t\t\t\t\t_model: {\n\t\t\t\t\t\tx: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\t\t\t\ty: reset ? scale.yCenter : pointPosition.y,\n\t\n\t\t\t\t\t\t// Appearance\n\t\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n\t\t\t\t\t\tradius: custom.radius ? custom.radius : helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n\t\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n\t\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n\t\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n\t\t\t\t\t\tpointStyle: custom.pointStyle ? custom.pointStyle : helpers.getValueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n\t\n\t\t\t\t\t\t// Tooltip\n\t\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.getValueAtIndexOrDefault(dataset.hitRadius, index, pointElementOptions.hitRadius)\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\t\t\tpoint._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\n\t\t\t},\n\t\t\tupdateBezierControlPoints: function() {\n\t\t\t\tvar chartArea = this.chart.chartArea;\n\t\t\t\tvar meta = this.getMeta();\n\t\n\t\t\t\thelpers.each(meta.data, function(point, index) {\n\t\t\t\t\tvar model = point._model;\n\t\t\t\t\tvar controlPoints = helpers.splineCurve(\n\t\t\t\t\t\thelpers.previousItem(meta.data, index, true)._model,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\thelpers.nextItem(meta.data, index, true)._model,\n\t\t\t\t\t\tmodel.tension\n\t\t\t\t\t);\n\t\n\t\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\t\t\tmodel.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n\t\t\t\t\tmodel.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n\t\n\t\t\t\t\tmodel.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n\t\t\t\t\tmodel.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);\n\t\n\t\t\t\t\t// Now pivot the point for animation\n\t\t\t\t\tpoint.pivot();\n\t\t\t\t});\n\t\t\t},\n\t\n\t\t\tdraw: function(ease) {\n\t\t\t\tvar meta = this.getMeta();\n\t\t\t\tvar easingDecimal = ease || 1;\n\t\n\t\t\t\t// Transition Point Locations\n\t\t\t\thelpers.each(meta.data, function(point) {\n\t\t\t\t\tpoint.transition(easingDecimal);\n\t\t\t\t});\n\t\n\t\t\t\t// Transition and Draw the line\n\t\t\t\tmeta.dataset.transition(easingDecimal).draw();\n\t\n\t\t\t\t// Draw the points\n\t\t\t\thelpers.each(meta.data, function(point) {\n\t\t\t\t\tpoint.draw();\n\t\t\t\t});\n\t\t\t},\n\t\n\t\t\tsetHoverStyle: function(point) {\n\t\t\t\t// Point\n\t\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\t\tvar custom = point.custom || {};\n\t\t\t\tvar index = point._index;\n\t\t\t\tvar model = point._model;\n\t\n\t\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : helpers.getValueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t\t},\n\t\n\t\t\tremoveHoverStyle: function(point) {\n\t\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\t\tvar custom = point.custom || {};\n\t\t\t\tvar index = point._index;\n\t\t\t\tvar model = point._model;\n\t\t\t\tvar pointElementOptions = this.chart.options.elements.point;\n\t\n\t\t\t\tmodel.radius = custom.radius ? custom.radius : helpers.getValueAtIndexOrDefault(dataset.radius, index, pointElementOptions.radius);\n\t\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor);\n\t\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor);\n\t\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth);\n\t\t\t}\n\t\t});\n\t};\n\n\n/***/ },\n/* 222 */\n/***/ function(module, exports) {\n\n\t/* global window: false */\n\t'use strict';\n\t\n\tmodule.exports = function(Chart) {\n\t\n\t\tvar helpers = Chart.helpers;\n\t\n\t\tChart.defaults.global.animation = {\n\t\t\tduration: 1000,\n\t\t\teasing: 'easeOutQuart',\n\t\t\tonProgress: helpers.noop,\n\t\t\tonComplete: helpers.noop\n\t\t};\n\t\n\t\tChart.Animation = Chart.Element.extend({\n\t\t\tcurrentStep: null, // the current animation step\n\t\t\tnumSteps: 60, // default number of steps\n\t\t\teasing: '', // the easing to use for this animation\n\t\t\trender: null, // render function used by the animation service\n\t\n\t\t\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\t\t\tonAnimationComplete: null // user specified callback to fire when the animation finishes\n\t\t});\n\t\n\t\tChart.animationService = {\n\t\t\tframeDuration: 17,\n\t\t\tanimations: [],\n\t\t\tdropFrames: 0,\n\t\t\trequest: null,\n\t\n\t\t\t/**\n\t\t\t * @function Chart.animationService.addAnimation\n\t\t\t * @param chartInstance {ChartController} the chart to animate\n\t\t\t * @param animationObject {IAnimation} the animation that we will animate\n\t\t\t * @param duration {Number} length of animation in ms\n\t\t\t * @param lazy {Boolean} if true, the chart is not marked as animating to enable more responsive interactions\n\t\t\t */\n\t\t\taddAnimation: function(chartInstance, animationObject, duration, lazy) {\n\t\t\t\tvar me = this;\n\t\n\t\t\t\tif (!lazy) {\n\t\t\t\t\tchartInstance.animating = true;\n\t\t\t\t}\n\t\n\t\t\t\tfor (var index = 0; index < me.animations.length; ++index) {\n\t\t\t\t\tif (me.animations[index].chartInstance === chartInstance) {\n\t\t\t\t\t\t// replacing an in progress animation\n\t\t\t\t\t\tme.animations[index].animationObject = animationObject;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tme.animations.push({\n\t\t\t\t\tchartInstance: chartInstance,\n\t\t\t\t\tanimationObject: animationObject\n\t\t\t\t});\n\t\n\t\t\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\t\t\tif (me.animations.length === 1) {\n\t\t\t\t\tme.requestAnimationFrame();\n\t\t\t\t}\n\t\t\t},\n\t\t\t// Cancel the animation for a given chart instance\n\t\t\tcancelAnimation: function(chartInstance) {\n\t\t\t\tvar index = helpers.findIndex(this.animations, function(animationWrapper) {\n\t\t\t\t\treturn animationWrapper.chartInstance === chartInstance;\n\t\t\t\t});\n\t\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tthis.animations.splice(index, 1);\n\t\t\t\t\tchartInstance.animating = false;\n\t\t\t\t}\n\t\t\t},\n\t\t\trequestAnimationFrame: function() {\n\t\t\t\tvar me = this;\n\t\t\t\tif (me.request === null) {\n\t\t\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\t\t\tme.request = helpers.requestAnimFrame.call(window, function() {\n\t\t\t\t\t\tme.request = null;\n\t\t\t\t\t\tme.startDigest();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tstartDigest: function() {\n\t\t\t\tvar me = this;\n\t\n\t\t\t\tvar startTime = Date.now();\n\t\t\t\tvar framesToDrop = 0;\n\t\n\t\t\t\tif (me.dropFrames > 1) {\n\t\t\t\t\tframesToDrop = Math.floor(me.dropFrames);\n\t\t\t\t\tme.dropFrames = me.dropFrames % 1;\n\t\t\t\t}\n\t\n\t\t\t\tvar i = 0;\n\t\t\t\twhile (i < me.animations.length) {\n\t\t\t\t\tif (me.animations[i].animationObject.currentStep === null) {\n\t\t\t\t\t\tme.animations[i].animationObject.currentStep = 0;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tme.animations[i].animationObject.currentStep += 1 + framesToDrop;\n\t\n\t\t\t\t\tif (me.animations[i].animationObject.currentStep > me.animations[i].animationObject.numSteps) {\n\t\t\t\t\t\tme.animations[i].animationObject.currentStep = me.animations[i].animationObject.numSteps;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tme.animations[i].animationObject.render(me.animations[i].chartInstance, me.animations[i].animationObject);\n\t\t\t\t\tif (me.animations[i].animationObject.onAnimationProgress && me.animations[i].animationObject.onAnimationProgress.call) {\n\t\t\t\t\t\tme.animations[i].animationObject.onAnimationProgress.call(me.animations[i].chartInstance, me.animations[i]);\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (me.animations[i].animationObject.currentStep === me.animations[i].animationObject.numSteps) {\n\t\t\t\t\t\tif (me.animations[i].animationObject.onAnimationComplete && me.animations[i].animationObject.onAnimationComplete.call) {\n\t\t\t\t\t\t\tme.animations[i].animationObject.onAnimationComplete.call(me.animations[i].chartInstance, me.animations[i]);\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// executed the last frame. Remove the animation.\n\t\t\t\t\t\tme.animations[i].chartInstance.animating = false;\n\t\n\t\t\t\t\t\tme.animations.splice(i, 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t++i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tvar endTime = Date.now();\n\t\t\t\tvar dropFrames = (endTime - startTime) / me.frameDuration;\n\t\n\t\t\t\tme.dropFrames += dropFrames;\n\t\n\t\t\t\t// Do we have more stuff to animate?\n\t\t\t\tif (me.animations.length > 0) {\n\t\t\t\t\tme.requestAnimationFrame();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t};\n\n\n/***/ },\n/* 223 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function(Chart) {\n\t\t// Global Chart canvas helpers object for drawing items to canvas\n\t\tvar helpers = Chart.canvasHelpers = {};\n\t\n\t\thelpers.drawPoint = function(ctx, pointStyle, radius, x, y) {\n\t\t\tvar type, edgeLength, xOffset, yOffset, height, size;\n\t\n\t\t\tif (typeof pointStyle === 'object') {\n\t\t\t\ttype = pointStyle.toString();\n\t\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\t\tctx.drawImage(pointStyle, x - pointStyle.width / 2, y - pointStyle.height / 2);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tswitch (pointStyle) {\n\t\t\t// Default includes circle\n\t\t\tdefault:\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(x, y, radius, 0, Math.PI * 2);\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.fill();\n\t\t\t\tbreak;\n\t\t\tcase 'triangle':\n\t\t\t\tctx.beginPath();\n\t\t\t\tedgeLength = 3 * radius / Math.sqrt(3);\n\t\t\t\theight = edgeLength * Math.sqrt(3) / 2;\n\t\t\t\tctx.moveTo(x - edgeLength / 2, y + height / 3);\n\t\t\t\tctx.lineTo(x + edgeLength / 2, y + height / 3);\n\t\t\t\tctx.lineTo(x, y - 2 * height / 3);\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.fill();\n\t\t\t\tbreak;\n\t\t\tcase 'rect':\n\t\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.fillRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\t\tctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\t\tbreak;\n\t\t\tcase 'rectRounded':\n\t\t\t\tvar offset = radius / Math.SQRT2;\n\t\t\t\tvar leftX = x - offset;\n\t\t\t\tvar topY = y - offset;\n\t\t\t\tvar sideSize = Math.SQRT2 * radius;\n\t\t\t\tChart.helpers.drawRoundedRectangle(ctx, leftX, topY, sideSize, sideSize, radius / 2);\n\t\t\t\tctx.fill();\n\t\t\t\tbreak;\n\t\t\tcase 'rectRot':\n\t\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(x - size, y);\n\t\t\t\tctx.lineTo(x, y + size);\n\t\t\t\tctx.lineTo(x + size, y);\n\t\t\t\tctx.lineTo(x, y - size);\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.fill();\n\t\t\t\tbreak;\n\t\t\tcase 'cross':\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(x, y + radius);\n\t\t\t\tctx.lineTo(x, y - radius);\n\t\t\t\tctx.moveTo(x - radius, y);\n\t\t\t\tctx.lineTo(x + radius, y);\n\t\t\t\tctx.closePath();\n\t\t\t\tbreak;\n\t\t\tcase 'crossRot':\n\t\t\t\tctx.beginPath();\n\t\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\t\tctx.closePath();\n\t\t\t\tbreak;\n\t\t\tcase 'star':\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(x, y + radius);\n\t\t\t\tctx.lineTo(x, y - radius);\n\t\t\t\tctx.moveTo(x - radius, y);\n\t\t\t\tctx.lineTo(x + radius, y);\n\t\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\t\tctx.closePath();\n\t\t\t\tbreak;\n\t\t\tcase 'line':\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(x - radius, y);\n\t\t\t\tctx.lineTo(x + radius, y);\n\t\t\t\tctx.closePath();\n\t\t\t\tbreak;\n\t\t\tcase 'dash':\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(x, y);\n\t\t\t\tctx.lineTo(x + radius, y);\n\t\t\t\tctx.closePath();\n\t\t\t\tbreak;\n\t\t\t}\n\t\n\t\t\tctx.stroke();\n\t\t};\n\t\n\t\thelpers.clipArea = function(ctx, clipArea) {\n\t\t\tctx.save();\n\t\t\tctx.beginPath();\n\t\t\tctx.rect(clipArea.left, clipArea.top, clipArea.right - clipArea.left, clipArea.bottom - clipArea.top);\n\t\t\tctx.clip();\n\t\t};\n\t\n\t\thelpers.unclipArea = function(ctx) {\n\t\t\tctx.restore();\n\t\t};\n\t\n\t};\n\n\n/***/ },\n/* 224 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function(Chart) {\n\t\n\t\tvar helpers = Chart.helpers;\n\t\tvar plugins = Chart.plugins;\n\t\tvar platform = Chart.platform;\n\t\n\t\t// Create a dictionary of chart types, to allow for extension of existing types\n\t\tChart.types = {};\n\t\n\t\t// Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n\t\t// Destroy method on the chart will remove the instance of the chart from this reference.\n\t\tChart.instances = {};\n\t\n\t\t// Controllers available for dataset visualization eg. bar, line, slice, etc.\n\t\tChart.controllers = {};\n\t\n\t\t/**\n\t\t * Initializes the given config with global and chart default values.\n\t\t */\n\t\tfunction initConfig(config) {\n\t\t\tconfig = config || {};\n\t\n\t\t\t// Do NOT use configMerge() for the data object because this method merges arrays\n\t\t\t// and so would change references to labels and datasets, preventing data updates.\n\t\t\tvar data = config.data = config.data || {};\n\t\t\tdata.datasets = data.datasets || [];\n\t\t\tdata.labels = data.labels || [];\n\t\n\t\t\tconfig.options = helpers.configMerge(\n\t\t\t\tChart.defaults.global,\n\t\t\t\tChart.defaults[config.type],\n\t\t\t\tconfig.options || {});\n\t\n\t\t\treturn config;\n\t\t}\n\t\n\t\t/**\n\t\t * Updates the config of the chart\n\t\t * @param chart {Chart.Controller} chart to update the options for\n\t\t */\n\t\tfunction updateConfig(chart) {\n\t\t\tvar newOptions = chart.options;\n\t\n\t\t\t// Update Scale(s) with options\n\t\t\tif (newOptions.scale) {\n\t\t\t\tchart.scale.options = newOptions.scale;\n\t\t\t} else if (newOptions.scales) {\n\t\t\t\tnewOptions.scales.xAxes.concat(newOptions.scales.yAxes).forEach(function(scaleOptions) {\n\t\t\t\t\tchart.scales[scaleOptions.id].options = scaleOptions;\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t// Tooltip\n\t\t\tchart.tooltip._options = newOptions.tooltips;\n\t\t}\n\t\n\t\t/**\n\t\t * @class Chart.Controller\n\t\t * The main controller of a chart.\n\t\t */\n\t\tChart.Controller = function(item, config, instance) {\n\t\t\tvar me = this;\n\t\n\t\t\tconfig = initConfig(config);\n\t\n\t\t\tvar context = platform.acquireContext(item, config);\n\t\t\tvar canvas = context && context.canvas;\n\t\t\tvar height = canvas && canvas.height;\n\t\t\tvar width = canvas && canvas.width;\n\t\n\t\t\tinstance.ctx = context;\n\t\t\tinstance.canvas = canvas;\n\t\t\tinstance.config = config;\n\t\t\tinstance.width = width;\n\t\t\tinstance.height = height;\n\t\t\tinstance.aspectRatio = height? width / height : null;\n\t\n\t\t\tme.id = helpers.uid();\n\t\t\tme.chart = instance;\n\t\t\tme.config = config;\n\t\t\tme.options = config.options;\n\t\t\tme._bufferedRender = false;\n\t\n\t\t\t// Add the chart instance to the global namespace\n\t\t\tChart.instances[me.id] = me;\n\t\n\t\t\tObject.defineProperty(me, 'data', {\n\t\t\t\tget: function() {\n\t\t\t\t\treturn me.config.data;\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\tif (!context || !canvas) {\n\t\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\t\treturn me;\n\t\t\t}\n\t\n\t\t\tme.initialize();\n\t\t\tme.update();\n\t\n\t\t\treturn me;\n\t\t};\n\t\n\t\thelpers.extend(Chart.Controller.prototype, /** @lends Chart.Controller.prototype */ {\n\t\t\tinitialize: function() {\n\t\t\t\tvar me = this;\n\t\n\t\t\t\t// Before init plugin notification\n\t\t\t\tplugins.notify(me, 'beforeInit');\n\t\n\t\t\t\thelpers.retinaScale(me.chart);\n\t\n\t\t\t\tme.bindEvents();\n\t\n\t\t\t\tif (me.options.responsive) {\n\t\t\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\t\t\tme.resize(true);\n\t\t\t\t}\n\t\n\t\t\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\t\t\tme.ensureScalesHaveIDs();\n\t\t\t\tme.buildScales();\n\t\t\t\tme.initToolTip();\n\t\n\t\t\t\t// After init plugin notification\n\t\t\t\tplugins.notify(me, 'afterInit');\n\t\n\t\t\t\treturn me;\n\t\t\t},\n\t\n\t\t\tclear: function() {\n\t\t\t\thelpers.clear(this.chart);\n\t\t\t\treturn this;\n\t\t\t},\n\t\n\t\t\tstop: function() {\n\t\t\t\t// Stops any current animation loop occurring\n\t\t\t\tChart.animationService.cancelAnimation(this);\n\t\t\t\treturn this;\n\t\t\t},\n\t\n\t\t\tresize: function(silent) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar chart = me.chart;\n\t\t\t\tvar options = me.options;\n\t\t\t\tvar canvas = chart.canvas;\n\t\t\t\tvar aspectRatio = (options.maintainAspectRatio && chart.aspectRatio) || null;\n\t\n\t\t\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\t\t\t\tvar newWidth = Math.floor(helpers.getMaximumWidth(canvas));\n\t\t\t\tvar newHeight = Math.floor(aspectRatio? newWidth / aspectRatio : helpers.getMaximumHeight(canvas));\n\t\n\t\t\t\tif (chart.width === newWidth && chart.height === newHeight) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tcanvas.width = chart.width = newWidth;\n\t\t\t\tcanvas.height = chart.height = newHeight;\n\t\t\t\tcanvas.style.width = newWidth + 'px';\n\t\t\t\tcanvas.style.height = newHeight + 'px';\n\t\n\t\t\t\thelpers.retinaScale(chart);\n\t\n\t\t\t\tif (!silent) {\n\t\t\t\t\t// Notify any plugins about the resize\n\t\t\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\t\t\tplugins.notify(me, 'resize', [newSize]);\n\t\n\t\t\t\t\t// Notify of resize\n\t\t\t\t\tif (me.options.onResize) {\n\t\t\t\t\t\tme.options.onResize(me, newSize);\n\t\t\t\t\t}\n\t\n\t\t\t\t\tme.stop();\n\t\t\t\t\tme.update(me.options.responsiveAnimationDuration);\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\tensureScalesHaveIDs: function() {\n\t\t\t\tvar options = this.options;\n\t\t\t\tvar scalesOptions = options.scales || {};\n\t\t\t\tvar scaleOptions = options.scale;\n\t\n\t\t\t\thelpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t\t\t});\n\t\n\t\t\t\thelpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t\t\t});\n\t\n\t\t\t\tif (scaleOptions) {\n\t\t\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * Builds a map of scale ID to scale object for future lookup.\n\t\t\t */\n\t\t\tbuildScales: function() {\n\t\t\t\tvar me = this;\n\t\t\t\tvar options = me.options;\n\t\t\t\tvar scales = me.scales = {};\n\t\t\t\tvar items = [];\n\t\n\t\t\t\tif (options.scales) {\n\t\t\t\t\titems = items.concat(\n\t\t\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category'};\n\t\t\t\t\t\t}),\n\t\t\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear'};\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t}\n\t\n\t\t\t\tif (options.scale) {\n\t\t\t\t\titems.push({options: options.scale, dtype: 'radialLinear', isDefault: true});\n\t\t\t\t}\n\t\n\t\t\t\thelpers.each(items, function(item) {\n\t\t\t\t\tvar scaleOptions = item.options;\n\t\t\t\t\tvar scaleType = helpers.getValueOrDefault(scaleOptions.type, item.dtype);\n\t\t\t\t\tvar scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\n\t\t\t\t\tif (!scaleClass) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar scale = new scaleClass({\n\t\t\t\t\t\tid: scaleOptions.id,\n\t\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\t\tctx: me.chart.ctx,\n\t\t\t\t\t\tchart: me\n\t\t\t\t\t});\n\t\n\t\t\t\t\tscales[scale.id] = scale;\n\t\n\t\t\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\t\t\tif (item.isDefault) {\n\t\t\t\t\t\tme.scale = scale;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\t\t\tChart.scaleService.addScalesToLayout(this);\n\t\t\t},\n\t\n\t\t\tbuildOrUpdateControllers: function() {\n\t\t\t\tvar me = this;\n\t\t\t\tvar types = [];\n\t\t\t\tvar newControllers = [];\n\t\n\t\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (!meta.type) {\n\t\t\t\t\t\tmeta.type = dataset.type || me.config.type;\n\t\t\t\t\t}\n\t\n\t\t\t\t\ttypes.push(meta.type);\n\t\n\t\t\t\t\tif (meta.controller) {\n\t\t\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmeta.controller = new Chart.controllers[meta.type](me, datasetIndex);\n\t\t\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t\t\t}\n\t\t\t\t}, me);\n\t\n\t\t\t\tif (types.length > 1) {\n\t\t\t\t\tfor (var i = 1; i < types.length; i++) {\n\t\t\t\t\t\tif (types[i] !== types[i - 1]) {\n\t\t\t\t\t\t\tme.isCombo = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn newControllers;\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * Reset the elements of all datasets\n\t\t\t * @private\n\t\t\t */\n\t\t\tresetElements: function() {\n\t\t\t\tvar me = this;\n\t\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t\t\t}, me);\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t* Resets the chart back to it's state before the initial animation\n\t\t\t*/\n\t\t\treset: function() {\n\t\t\t\tthis.resetElements();\n\t\t\t\tthis.tooltip.initialize();\n\t\t\t},\n\t\n\t\t\tupdate: function(animationDuration, lazy) {\n\t\t\t\tvar me = this;\n\t\n\t\t\t\tupdateConfig(me);\n\t\n\t\t\t\tif (plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\t// In case the entire data object changed\n\t\t\t\tme.tooltip._data = me.data;\n\t\n\t\t\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\t\t\tvar newControllers = me.buildOrUpdateControllers();\n\t\n\t\t\t\t// Make sure all dataset controllers have correct meta data counts\n\t\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t\t\t}, me);\n\t\n\t\t\t\tme.updateLayout();\n\t\n\t\t\t\t// Can only reset the new controllers after the scales have been updated\n\t\t\t\thelpers.each(newControllers, function(controller) {\n\t\t\t\t\tcontroller.reset();\n\t\t\t\t});\n\t\n\t\t\t\tme.updateDatasets();\n\t\n\t\t\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\t\t\tplugins.notify(me, 'afterUpdate');\n\t\n\t\t\t\tif (me._bufferedRender) {\n\t\t\t\t\tme._bufferedRequest = {\n\t\t\t\t\t\tlazy: lazy,\n\t\t\t\t\t\tduration: animationDuration\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tme.render(animationDuration, lazy);\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t\t\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t\t\t * @private\n\t\t\t */\n\t\t\tupdateLayout: function() {\n\t\t\t\tvar me = this;\n\t\n\t\t\t\tif (plugins.notify(me, 'beforeLayout') === false) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tChart.layoutService.update(this, this.chart.width, this.chart.height);\n\t\n\t\t\t\t/**\n\t\t\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t\t\t * @method IPlugin#afterScaleUpdate\n\t\t\t\t * @deprecated since version 2.5.0\n\t\t\t\t * @todo remove at version 3\n\t\t\t\t */\n\t\t\t\tplugins.notify(me, 'afterScaleUpdate');\n\t\t\t\tplugins.notify(me, 'afterLayout');\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t\t\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t\t\t * @private\n\t\t\t */\n\t\t\tupdateDatasets: function() {\n\t\t\t\tvar me = this;\n\t\n\t\t\t\tif (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\t\tme.getDatasetMeta(i).controller.update();\n\t\t\t\t}\n\t\n\t\t\t\tplugins.notify(me, 'afterDatasetsUpdate');\n\t\t\t},\n\t\n\t\t\trender: function(duration, lazy) {\n\t\t\t\tvar me = this;\n\t\n\t\t\t\tif (plugins.notify(me, 'beforeRender') === false) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tvar animationOptions = me.options.animation;\n\t\t\t\tvar onComplete = function() {\n\t\t\t\t\tplugins.notify(me, 'afterRender');\n\t\t\t\t\tvar callback = animationOptions && animationOptions.onComplete;\n\t\t\t\t\tif (callback && callback.call) {\n\t\t\t\t\t\tcallback.call(me);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\n\t\t\t\tif (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\n\t\t\t\t\tvar animation = new Chart.Animation();\n\t\t\t\t\tanimation.numSteps = (duration || animationOptions.duration) / 16.66; // 60 fps\n\t\t\t\t\tanimation.easing = animationOptions.easing;\n\t\n\t\t\t\t\t// render function\n\t\t\t\t\tanimation.render = function(chartInstance, animationObject) {\n\t\t\t\t\t\tvar easingFunction = helpers.easingEffects[animationObject.easing];\n\t\t\t\t\t\tvar stepDecimal = animationObject.currentStep / animationObject.numSteps;\n\t\t\t\t\t\tvar easeDecimal = easingFunction(stepDecimal);\n\t\n\t\t\t\t\t\tchartInstance.draw(easeDecimal, stepDecimal, animationObject.currentStep);\n\t\t\t\t\t};\n\t\n\t\t\t\t\t// user events\n\t\t\t\t\tanimation.onAnimationProgress = animationOptions.onProgress;\n\t\t\t\t\tanimation.onAnimationComplete = onComplete;\n\t\n\t\t\t\t\tChart.animationService.addAnimation(me, animation, duration, lazy);\n\t\t\t\t} else {\n\t\t\t\t\tme.draw();\n\t\t\t\t\tonComplete();\n\t\t\t\t}\n\t\n\t\t\t\treturn me;\n\t\t\t},\n\t\n\t\t\tdraw: function(easingValue) {\n\t\t\t\tvar me = this;\n\t\n\t\t\t\tme.clear();\n\t\n\t\t\t\tif (easingValue === undefined || easingValue === null) {\n\t\t\t\t\teasingValue = 1;\n\t\t\t\t}\n\t\n\t\t\t\tif (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\t// Draw all the scales\n\t\t\t\thelpers.each(me.boxes, function(box) {\n\t\t\t\t\tbox.draw(me.chartArea);\n\t\t\t\t}, me);\n\t\n\t\t\t\tif (me.scale) {\n\t\t\t\t\tme.scale.draw();\n\t\t\t\t}\n\t\n\t\t\t\tme.drawDatasets(easingValue);\n\t\n\t\t\t\t// Finally draw the tooltip\n\t\t\t\tme.tooltip.transition(easingValue).draw();\n\t\n\t\t\t\tplugins.notify(me, 'afterDraw', [easingValue]);\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t\t\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t\t\t * @private\n\t\t\t */\n\t\t\tdrawDatasets: function(easingValue) {\n\t\t\t\tvar me = this;\n\t\n\t\t\t\tif (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\t// Draw each dataset via its respective controller (reversed to support proper line stacking)\n\t\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (me.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\t\tme.getDatasetMeta(datasetIndex).controller.draw(easingValue);\n\t\t\t\t\t}\n\t\t\t\t}, me, true);\n\t\n\t\t\t\tplugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t\t\t},\n\t\n\t\t\t// Get the single element that was clicked on\n\t\t\t// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t\t\tgetElementAtEvent: function(e) {\n\t\t\t\treturn Chart.Interaction.modes.single(this, e);\n\t\t\t},\n\t\n\t\t\tgetElementsAtEvent: function(e) {\n\t\t\t\treturn Chart.Interaction.modes.label(this, e, {intersect: true});\n\t\t\t},\n\t\n\t\t\tgetElementsAtXAxis: function(e) {\n\t\t\t\treturn Chart.Interaction.modes['x-axis'](this, e, {intersect: true});\n\t\t\t},\n\t\n\t\t\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\t\t\tvar method = Chart.Interaction.modes[mode];\n\t\t\t\tif (typeof method === 'function') {\n\t\t\t\t\treturn method(this, e, options);\n\t\t\t\t}\n\t\n\t\t\t\treturn [];\n\t\t\t},\n\t\n\t\t\tgetDatasetAtEvent: function(e) {\n\t\t\t\treturn Chart.Interaction.modes.dataset(this, e, {intersect: true});\n\t\t\t},\n\t\n\t\t\tgetDatasetMeta: function(datasetIndex) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\t\t\tif (!dataset._meta) {\n\t\t\t\t\tdataset._meta = {};\n\t\t\t\t}\n\t\n\t\t\t\tvar meta = dataset._meta[me.id];\n\t\t\t\tif (!meta) {\n\t\t\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\t\t\ttype: null,\n\t\t\t\t\t\tdata: [],\n\t\t\t\t\t\tdataset: null,\n\t\t\t\t\t\tcontroller: null,\n\t\t\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\t\t\txAxisID: null,\n\t\t\t\t\t\tyAxisID: null\n\t\t\t\t\t};\n\t\t\t\t}\n\t\n\t\t\t\treturn meta;\n\t\t\t},\n\t\n\t\t\tgetVisibleDatasetCount: function() {\n\t\t\t\tvar count = 0;\n\t\t\t\tfor (var i = 0, ilen = this.data.datasets.length; i<ilen; ++i) {\n\t\t\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn count;\n\t\t\t},\n\t\n\t\t\tisDatasetVisible: function(datasetIndex) {\n\t\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\t\n\t\t\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\t\t\treturn typeof meta.hidden === 'boolean'? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t\t\t},\n\t\n\t\t\tgenerateLegend: function() {\n\t\t\t\treturn this.options.legendCallback(this);\n\t\t\t},\n\t\n\t\t\tdestroy: function() {\n\t\t\t\tvar me = this;\n\t\t\t\tvar canvas = me.chart.canvas;\n\t\t\t\tvar meta, i, ilen;\n\t\n\t\t\t\tme.stop();\n\t\n\t\t\t\t// dataset controllers need to cleanup associated data\n\t\t\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\t\tmeta = me.getDatasetMeta(i);\n\t\t\t\t\tif (meta.controller) {\n\t\t\t\t\t\tmeta.controller.destroy();\n\t\t\t\t\t\tmeta.controller = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tif (canvas) {\n\t\t\t\t\tme.unbindEvents();\n\t\t\t\t\thelpers.clear(me.chart);\n\t\t\t\t\tplatform.releaseContext(me.chart.ctx);\n\t\t\t\t\tme.chart.canvas = null;\n\t\t\t\t\tme.chart.ctx = null;\n\t\t\t\t}\n\t\n\t\t\t\tplugins.notify(me, 'destroy');\n\t\n\t\t\t\tdelete Chart.instances[me.id];\n\t\t\t},\n\t\n\t\t\ttoBase64Image: function() {\n\t\t\t\treturn this.chart.canvas.toDataURL.apply(this.chart.canvas, arguments);\n\t\t\t},\n\t\n\t\t\tinitToolTip: function() {\n\t\t\t\tvar me = this;\n\t\t\t\tme.tooltip = new Chart.Tooltip({\n\t\t\t\t\t_chart: me.chart,\n\t\t\t\t\t_chartInstance: me,\n\t\t\t\t\t_data: me.data,\n\t\t\t\t\t_options: me.options.tooltips\n\t\t\t\t}, me);\n\t\t\t\tme.tooltip.initialize();\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * @private\n\t\t\t */\n\t\t\tbindEvents: function() {\n\t\t\t\tvar me = this;\n\t\t\t\tvar listeners = me._listeners = {};\n\t\t\t\tvar listener = function() {\n\t\t\t\t\tme.eventHandler.apply(me, arguments);\n\t\t\t\t};\n\t\n\t\t\t\thelpers.each(me.options.events, function(type) {\n\t\t\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\t\t\tlisteners[type] = listener;\n\t\t\t\t});\n\t\n\t\t\t\t// Responsiveness is currently based on the use of an iframe, however this method causes\n\t\t\t\t// performance issues and could be troublesome when used with ad blockers. So make sure\n\t\t\t\t// that the user is still able to create a chart without iframe when responsive is false.\n\t\t\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\t\t\tif (me.options.responsive) {\n\t\t\t\t\tlistener = function() {\n\t\t\t\t\t\tme.resize();\n\t\t\t\t\t};\n\t\n\t\t\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\t\t\tlisteners.resize = listener;\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * @private\n\t\t\t */\n\t\t\tunbindEvents: function() {\n\t\t\t\tvar me = this;\n\t\t\t\tvar listeners = me._listeners;\n\t\t\t\tif (!listeners) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tdelete me._listeners;\n\t\t\t\thelpers.each(listeners, function(listener, type) {\n\t\t\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t\t\t});\n\t\t\t},\n\t\n\t\t\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\t\t\tvar method = enabled? 'setHoverStyle' : 'removeHoverStyle';\n\t\t\t\tvar element, i, ilen;\n\t\n\t\t\t\tfor (i=0, ilen=elements.length; i<ilen; ++i) {\n\t\t\t\t\telement = elements[i];\n\t\t\t\t\tif (element) {\n\t\t\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * @private\n\t\t\t */\n\t\t\teventHandler: function(e) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar tooltip = me.tooltip;\n\t\n\t\t\t\tif (plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\t// Buffer any update calls so that renders do not occur\n\t\t\t\tme._bufferedRender = true;\n\t\t\t\tme._bufferedRequest = null;\n\t\n\t\t\t\tvar changed = me.handleEvent(e);\n\t\t\t\tchanged |= tooltip && tooltip.handleEvent(e);\n\t\n\t\t\t\tplugins.notify(me, 'afterEvent', [e]);\n\t\n\t\t\t\tvar bufferedRequest = me._bufferedRequest;\n\t\t\t\tif (bufferedRequest) {\n\t\t\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\t\t\tme.render(bufferedRequest.duration, bufferedRequest.lazy);\n\t\t\t\t} else if (changed && !me.animating) {\n\t\t\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\t\t\tme.stop();\n\t\n\t\t\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\t\t\tme.render(me.options.hover.animationDuration, true);\n\t\t\t\t}\n\t\n\t\t\t\tme._bufferedRender = false;\n\t\t\t\tme._bufferedRequest = null;\n\t\n\t\t\t\treturn me;\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * Handle an event\n\t\t\t * @private\n\t\t\t * @param {IEvent} event the event to handle\n\t\t\t * @return {Boolean} true if the chart needs to re-render\n\t\t\t */\n\t\t\thandleEvent: function(e) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar options = me.options || {};\n\t\t\t\tvar hoverOptions = options.hover;\n\t\t\t\tvar changed = false;\n\t\n\t\t\t\tme.lastActive = me.lastActive || [];\n\t\n\t\t\t\t// Find Active Elements for hover and tooltips\n\t\t\t\tif (e.type === 'mouseout') {\n\t\t\t\t\tme.active = [];\n\t\t\t\t} else {\n\t\t\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t\t\t}\n\t\n\t\t\t\t// On Hover hook\n\t\t\t\tif (hoverOptions.onHover) {\n\t\t\t\t\t// Need to call with native event here to not break backwards compatibility\n\t\t\t\t\thoverOptions.onHover.call(me, e.native, me.active);\n\t\t\t\t}\n\t\n\t\t\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\t\t\tif (options.onClick) {\n\t\t\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Remove styling for last active (even if it may still be active)\n\t\t\t\tif (me.lastActive.length) {\n\t\t\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t\t\t}\n\t\n\t\t\t\t// Built in hover styling\n\t\t\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t\t\t}\n\t\n\t\t\t\tchanged = !helpers.arrayEquals(me.active, me.lastActive);\n\t\n\t\t\t\t// Remember Last Actives\n\t\t\t\tme.lastActive = me.active;\n\t\n\t\t\t\treturn changed;\n\t\t\t}\n\t\t});\n\t};\n\n\n/***/ },\n/* 225 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function(Chart) {\n\t\n\t\tvar helpers = Chart.helpers;\n\t\n\t\tvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\t\n\t\t/**\n\t\t * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n\t\t * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n\t\t * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n\t\t */\n\t\tfunction listenArrayEvents(array, listener) {\n\t\t\tif (array._chartjs) {\n\t\t\t\tarray._chartjs.listeners.push(listener);\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tObject.defineProperty(array, '_chartjs', {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: {\n\t\t\t\t\tlisteners: [listener]\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\tarrayEvents.forEach(function(key) {\n\t\t\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\t\t\tvar base = array[key];\n\t\n\t\t\t\tObject.defineProperty(array, key, {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\tvalue: function() {\n\t\t\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\t\t\tvar res = base.apply(this, args);\n\t\n\t\t\t\t\t\thelpers.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\n\t\t\t\t\t\treturn res;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\n\t\t/**\n\t\t * Removes the given array event listener and cleanup extra attached properties (such as\n\t\t * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n\t\t */\n\t\tfunction unlistenArrayEvents(array, listener) {\n\t\t\tvar stub = array._chartjs;\n\t\t\tif (!stub) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tvar listeners = stub.listeners;\n\t\t\tvar index = listeners.indexOf(listener);\n\t\t\tif (index !== -1) {\n\t\t\t\tlisteners.splice(index, 1);\n\t\t\t}\n\t\n\t\t\tif (listeners.length > 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tarrayEvents.forEach(function(key) {\n\t\t\t\tdelete array[key];\n\t\t\t});\n\t\n\t\t\tdelete array._chartjs;\n\t\t}\n\t\n\t\t// Base class for all dataset controllers (line, bar, etc)\n\t\tChart.DatasetController = function(chart, datasetIndex) {\n\t\t\tthis.initialize(chart, datasetIndex);\n\t\t};\n\t\n\t\thelpers.extend(Chart.DatasetController.prototype, {\n\t\n\t\t\t/**\n\t\t\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t\t\t * @type {Chart.core.element}\n\t\t\t */\n\t\t\tdatasetElementType: null,\n\t\n\t\t\t/**\n\t\t\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t\t\t * @type {Chart.core.element}\n\t\t\t */\n\t\t\tdataElementType: null,\n\t\n\t\t\tinitialize: function(chart, datasetIndex) {\n\t\t\t\tvar me = this;\n\t\t\t\tme.chart = chart;\n\t\t\t\tme.index = datasetIndex;\n\t\t\t\tme.linkScales();\n\t\t\t\tme.addElements();\n\t\t\t},\n\t\n\t\t\tupdateIndex: function(datasetIndex) {\n\t\t\t\tthis.index = datasetIndex;\n\t\t\t},\n\t\n\t\t\tlinkScales: function() {\n\t\t\t\tvar me = this;\n\t\t\t\tvar meta = me.getMeta();\n\t\t\t\tvar dataset = me.getDataset();\n\t\n\t\t\t\tif (meta.xAxisID === null) {\n\t\t\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t\t\t}\n\t\t\t\tif (meta.yAxisID === null) {\n\t\t\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\tgetDataset: function() {\n\t\t\t\treturn this.chart.data.datasets[this.index];\n\t\t\t},\n\t\n\t\t\tgetMeta: function() {\n\t\t\t\treturn this.chart.getDatasetMeta(this.index);\n\t\t\t},\n\t\n\t\t\tgetScaleForId: function(scaleID) {\n\t\t\t\treturn this.chart.scales[scaleID];\n\t\t\t},\n\t\n\t\t\treset: function() {\n\t\t\t\tthis.update(true);\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * @private\n\t\t\t */\n\t\t\tdestroy: function() {\n\t\t\t\tif (this._data) {\n\t\t\t\t\tunlistenArrayEvents(this._data, this);\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\tcreateMetaDataset: function() {\n\t\t\t\tvar me = this;\n\t\t\t\tvar type = me.datasetElementType;\n\t\t\t\treturn type && new type({\n\t\t\t\t\t_chart: me.chart.chart,\n\t\t\t\t\t_datasetIndex: me.index\n\t\t\t\t});\n\t\t\t},\n\t\n\t\t\tcreateMetaData: function(index) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar type = me.dataElementType;\n\t\t\t\treturn type && new type({\n\t\t\t\t\t_chart: me.chart.chart,\n\t\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t\t_index: index\n\t\t\t\t});\n\t\t\t},\n\t\n\t\t\taddElements: function() {\n\t\t\t\tvar me = this;\n\t\t\t\tvar meta = me.getMeta();\n\t\t\t\tvar data = me.getDataset().data || [];\n\t\t\t\tvar metaData = meta.data;\n\t\t\t\tvar i, ilen;\n\t\n\t\t\t\tfor (i=0, ilen=data.length; i<ilen; ++i) {\n\t\t\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t\t\t}\n\t\n\t\t\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t\t\t},\n\t\n\t\t\taddElementAndReset: function(index) {\n\t\t\t\tvar element = this.createMetaData(index);\n\t\t\t\tthis.getMeta().data.splice(index, 0, element);\n\t\t\t\tthis.updateElement(element, index, true);\n\t\t\t},\n\t\n\t\t\tbuildOrUpdateElements: function() {\n\t\t\t\tvar me = this;\n\t\t\t\tvar dataset = me.getDataset();\n\t\t\t\tvar data = dataset.data || (dataset.data = []);\n\t\n\t\t\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t\t\t// the internal meta data accordingly.\n\t\t\t\tif (me._data !== data) {\n\t\t\t\t\tif (me._data) {\n\t\t\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t\t\t}\n\t\n\t\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t\t\tme._data = data;\n\t\t\t\t}\n\t\n\t\t\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\t\t\tme.resyncElements();\n\t\t\t},\n\t\n\t\t\tupdate: helpers.noop,\n\t\n\t\t\tdraw: function(ease) {\n\t\t\t\tvar easingDecimal = ease || 1;\n\t\t\t\tvar i, len;\n\t\t\t\tvar metaData = this.getMeta().data;\n\t\t\t\tfor (i = 0, len = metaData.length; i < len; ++i) {\n\t\t\t\t\tmetaData[i].transition(easingDecimal).draw();\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\tremoveHoverStyle: function(element, elementOpts) {\n\t\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex],\n\t\t\t\t\tindex = element._index,\n\t\t\t\t\tcustom = element.custom || {},\n\t\t\t\t\tvalueOrDefault = helpers.getValueAtIndexOrDefault,\n\t\t\t\t\tmodel = element._model;\n\t\n\t\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n\t\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n\t\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n\t\t\t},\n\t\n\t\t\tsetHoverStyle: function(element) {\n\t\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex],\n\t\t\t\t\tindex = element._index,\n\t\t\t\t\tcustom = element.custom || {},\n\t\t\t\t\tvalueOrDefault = helpers.getValueAtIndexOrDefault,\n\t\t\t\t\tgetHoverColor = helpers.getHoverColor,\n\t\t\t\t\tmodel = element._model;\n\t\n\t\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n\t\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n\t\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * @private\n\t\t\t */\n\t\t\tresyncElements: function() {\n\t\t\t\tvar me = this;\n\t\t\t\tvar meta = me.getMeta();\n\t\t\t\tvar data = me.getDataset().data;\n\t\t\t\tvar numMeta = meta.data.length;\n\t\t\t\tvar numData = data.length;\n\t\n\t\t\t\tif (numData < numMeta) {\n\t\t\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t\t\t} else if (numData > numMeta) {\n\t\t\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * @private\n\t\t\t */\n\t\t\tinsertElements: function(start, count) {\n\t\t\t\tfor (var i=0; i<count; ++i) {\n\t\t\t\t\tthis.addElementAndReset(start + i);\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * @private\n\t\t\t */\n\t\t\tonDataPush: function() {\n\t\t\t\tthis.insertElements(this.getDataset().data.length-1, arguments.length);\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * @private\n\t\t\t */\n\t\t\tonDataPop: function() {\n\t\t\t\tthis.getMeta().data.pop();\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * @private\n\t\t\t */\n\t\t\tonDataShift: function() {\n\t\t\t\tthis.getMeta().data.shift();\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * @private\n\t\t\t */\n\t\t\tonDataSplice: function(start, count) {\n\t\t\t\tthis.getMeta().data.splice(start, count);\n\t\t\t\tthis.insertElements(start, arguments.length - 2);\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * @private\n\t\t\t */\n\t\t\tonDataUnshift: function() {\n\t\t\t\tthis.insertElements(0, arguments.length);\n\t\t\t}\n\t\t});\n\t\n\t\tChart.DatasetController.extend = helpers.inherits;\n\t};\n\n\n/***/ },\n/* 226 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function(Chart) {\n\t\n\t\tvar helpers = Chart.helpers;\n\t\n\t\tChart.elements = {};\n\t\n\t\tChart.Element = function(configuration) {\n\t\t\thelpers.extend(this, configuration);\n\t\t\tthis.initialize.apply(this, arguments);\n\t\t};\n\t\n\t\thelpers.extend(Chart.Element.prototype, {\n\t\n\t\t\tinitialize: function() {\n\t\t\t\tthis.hidden = false;\n\t\t\t},\n\t\n\t\t\tpivot: function() {\n\t\t\t\tvar me = this;\n\t\t\t\tif (!me._view) {\n\t\t\t\t\tme._view = helpers.clone(me._model);\n\t\t\t\t}\n\t\t\t\tme._start = helpers.clone(me._view);\n\t\t\t\treturn me;\n\t\t\t},\n\t\n\t\t\ttransition: function(ease) {\n\t\t\t\tvar me = this;\n\t\n\t\t\t\tif (!me._view) {\n\t\t\t\t\tme._view = helpers.clone(me._model);\n\t\t\t\t}\n\t\n\t\t\t\t// No animation -> No Transition\n\t\t\t\tif (ease === 1) {\n\t\t\t\t\tme._view = me._model;\n\t\t\t\t\tme._start = null;\n\t\t\t\t\treturn me;\n\t\t\t\t}\n\t\n\t\t\t\tif (!me._start) {\n\t\t\t\t\tme.pivot();\n\t\t\t\t}\n\t\n\t\t\t\thelpers.each(me._model, function(value, key) {\n\t\n\t\t\t\t\tif (key[0] === '_') {\n\t\t\t\t\t\t// Only non-underscored properties\n\t\t\t\t\t// Init if doesn't exist\n\t\t\t\t\t} else if (!me._view.hasOwnProperty(key)) {\n\t\t\t\t\t\tif (typeof value === 'number' && !isNaN(me._view[key])) {\n\t\t\t\t\t\t\tme._view[key] = value * ease;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tme._view[key] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t// No unnecessary computations\n\t\t\t\t\t} else if (value === me._view[key]) {\n\t\t\t\t\t\t// It's the same! Woohoo!\n\t\t\t\t\t// Color transitions if possible\n\t\t\t\t\t} else if (typeof value === 'string') {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tvar color = helpers.color(me._model[key]).mix(helpers.color(me._start[key]), ease);\n\t\t\t\t\t\t\tme._view[key] = color.rgbString();\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tme._view[key] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t// Number transitions\n\t\t\t\t\t} else if (typeof value === 'number') {\n\t\t\t\t\t\tvar startVal = me._start[key] !== undefined && isNaN(me._start[key]) === false ? me._start[key] : 0;\n\t\t\t\t\t\tme._view[key] = ((me._model[key] - startVal) * ease) + startVal;\n\t\t\t\t\t// Everything else\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme._view[key] = value;\n\t\t\t\t\t}\n\t\t\t\t}, me);\n\t\n\t\t\t\treturn me;\n\t\t\t},\n\t\n\t\t\ttooltipPosition: function() {\n\t\t\t\treturn {\n\t\t\t\t\tx: this._model.x,\n\t\t\t\t\ty: this._model.y\n\t\t\t\t};\n\t\t\t},\n\t\n\t\t\thasValue: function() {\n\t\t\t\treturn helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n\t\t\t}\n\t\t});\n\t\n\t\tChart.Element.extend = helpers.inherits;\n\t\n\t};\n\n\n/***/ },\n/* 227 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* global window: false */\n\t/* global document: false */\n\t'use strict';\n\t\n\tvar color = __webpack_require__(251);\n\t\n\tmodule.exports = function(Chart) {\n\t\t// Global Chart helpers object for utility methods and classes\n\t\tvar helpers = Chart.helpers = {};\n\t\n\t\t// -- Basic js utility methods\n\t\thelpers.each = function(loopable, callback, self, reverse) {\n\t\t\t// Check to see if null or undefined firstly.\n\t\t\tvar i, len;\n\t\t\tif (helpers.isArray(loopable)) {\n\t\t\t\tlen = loopable.length;\n\t\t\t\tif (reverse) {\n\t\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\t\tcallback.call(self, loopable[i], i);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\t\tcallback.call(self, loopable[i], i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (typeof loopable === 'object') {\n\t\t\t\tvar keys = Object.keys(loopable);\n\t\t\t\tlen = keys.length;\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tcallback.call(self, loopable[keys[i]], keys[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\thelpers.clone = function(obj) {\n\t\t\tvar objClone = {};\n\t\t\thelpers.each(obj, function(value, key) {\n\t\t\t\tif (helpers.isArray(value)) {\n\t\t\t\t\tobjClone[key] = value.slice(0);\n\t\t\t\t} else if (typeof value === 'object' && value !== null) {\n\t\t\t\t\tobjClone[key] = helpers.clone(value);\n\t\t\t\t} else {\n\t\t\t\t\tobjClone[key] = value;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn objClone;\n\t\t};\n\t\thelpers.extend = function(base) {\n\t\t\tvar setFn = function(value, key) {\n\t\t\t\tbase[key] = value;\n\t\t\t};\n\t\t\tfor (var i = 1, ilen = arguments.length; i < ilen; i++) {\n\t\t\t\thelpers.each(arguments[i], setFn);\n\t\t\t}\n\t\t\treturn base;\n\t\t};\n\t\t// Need a special merge function to chart configs since they are now grouped\n\t\thelpers.configMerge = function(_base) {\n\t\t\tvar base = helpers.clone(_base);\n\t\t\thelpers.each(Array.prototype.slice.call(arguments, 1), function(extension) {\n\t\t\t\thelpers.each(extension, function(value, key) {\n\t\t\t\t\tvar baseHasProperty = base.hasOwnProperty(key);\n\t\t\t\t\tvar baseVal = baseHasProperty ? base[key] : {};\n\t\n\t\t\t\t\tif (key === 'scales') {\n\t\t\t\t\t\t// Scale config merging is complex. Add our own function here for that\n\t\t\t\t\t\tbase[key] = helpers.scaleMerge(baseVal, value);\n\t\t\t\t\t} else if (key === 'scale') {\n\t\t\t\t\t\t// Used in polar area & radar charts since there is only one scale\n\t\t\t\t\t\tbase[key] = helpers.configMerge(baseVal, Chart.scaleService.getScaleDefaults(value.type), value);\n\t\t\t\t\t} else if (baseHasProperty\n\t\t\t\t\t\t\t&& typeof baseVal === 'object'\n\t\t\t\t\t\t\t&& !helpers.isArray(baseVal)\n\t\t\t\t\t\t\t&& baseVal !== null\n\t\t\t\t\t\t\t&& typeof value === 'object'\n\t\t\t\t\t\t\t&& !helpers.isArray(value)) {\n\t\t\t\t\t\t// If we are overwriting an object with an object, do a merge of the properties.\n\t\t\t\t\t\tbase[key] = helpers.configMerge(baseVal, value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// can just overwrite the value in this case\n\t\t\t\t\t\tbase[key] = value;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\n\t\t\treturn base;\n\t\t};\n\t\thelpers.scaleMerge = function(_base, extension) {\n\t\t\tvar base = helpers.clone(_base);\n\t\n\t\t\thelpers.each(extension, function(value, key) {\n\t\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\t\t// These properties are arrays of items\n\t\t\t\t\tif (base.hasOwnProperty(key)) {\n\t\t\t\t\t\thelpers.each(value, function(valueObj, index) {\n\t\t\t\t\t\t\tvar axisType = helpers.getValueOrDefault(valueObj.type, key === 'xAxes' ? 'category' : 'linear');\n\t\t\t\t\t\t\tvar axisDefaults = Chart.scaleService.getScaleDefaults(axisType);\n\t\t\t\t\t\t\tif (index >= base[key].length || !base[key][index].type) {\n\t\t\t\t\t\t\t\tbase[key].push(helpers.configMerge(axisDefaults, valueObj));\n\t\t\t\t\t\t\t} else if (valueObj.type && valueObj.type !== base[key][index].type) {\n\t\t\t\t\t\t\t\t// Type changed. Bring in the new defaults before we bring in valueObj so that valueObj can override the correct scale defaults\n\t\t\t\t\t\t\t\tbase[key][index] = helpers.configMerge(base[key][index], axisDefaults, valueObj);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Type is the same\n\t\t\t\t\t\t\t\tbase[key][index] = helpers.configMerge(base[key][index], valueObj);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbase[key] = [];\n\t\t\t\t\t\thelpers.each(value, function(valueObj) {\n\t\t\t\t\t\t\tvar axisType = helpers.getValueOrDefault(valueObj.type, key === 'xAxes' ? 'category' : 'linear');\n\t\t\t\t\t\t\tbase[key].push(helpers.configMerge(Chart.scaleService.getScaleDefaults(axisType), valueObj));\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else if (base.hasOwnProperty(key) && typeof base[key] === 'object' && base[key] !== null && typeof value === 'object') {\n\t\t\t\t\t// If we are overwriting an object with an object, do a merge of the properties.\n\t\t\t\t\tbase[key] = helpers.configMerge(base[key], value);\n\t\n\t\t\t\t} else {\n\t\t\t\t\t// can just overwrite the value in this case\n\t\t\t\t\tbase[key] = value;\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\treturn base;\n\t\t};\n\t\thelpers.getValueAtIndexOrDefault = function(value, index, defaultValue) {\n\t\t\tif (value === undefined || value === null) {\n\t\t\t\treturn defaultValue;\n\t\t\t}\n\t\n\t\t\tif (helpers.isArray(value)) {\n\t\t\t\treturn index < value.length ? value[index] : defaultValue;\n\t\t\t}\n\t\n\t\t\treturn value;\n\t\t};\n\t\thelpers.getValueOrDefault = function(value, defaultValue) {\n\t\t\treturn value === undefined ? defaultValue : value;\n\t\t};\n\t\thelpers.indexOf = Array.prototype.indexOf?\n\t\t\tfunction(array, item) {\n\t\t\t\treturn array.indexOf(item);\n\t\t\t}:\n\t\t\tfunction(array, item) {\n\t\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\t\tif (array[i] === item) {\n\t\t\t\t\t\treturn i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn -1;\n\t\t\t};\n\t\thelpers.where = function(collection, filterCallback) {\n\t\t\tif (helpers.isArray(collection) && Array.prototype.filter) {\n\t\t\t\treturn collection.filter(filterCallback);\n\t\t\t}\n\t\t\tvar filtered = [];\n\t\n\t\t\thelpers.each(collection, function(item) {\n\t\t\t\tif (filterCallback(item)) {\n\t\t\t\t\tfiltered.push(item);\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\treturn filtered;\n\t\t};\n\t\thelpers.findIndex = Array.prototype.findIndex?\n\t\t\tfunction(array, callback, scope) {\n\t\t\t\treturn array.findIndex(callback, scope);\n\t\t\t} :\n\t\t\tfunction(array, callback, scope) {\n\t\t\t\tscope = scope === undefined? array : scope;\n\t\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\t\treturn i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn -1;\n\t\t\t};\n\t\thelpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t\t// Default to start of the array\n\t\t\tif (startIndex === undefined || startIndex === null) {\n\t\t\t\tstartIndex = -1;\n\t\t\t}\n\t\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\t\treturn currentItem;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\thelpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t\t// Default to end of the array\n\t\t\tif (startIndex === undefined || startIndex === null) {\n\t\t\t\tstartIndex = arrayToSearch.length;\n\t\t\t}\n\t\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\t\treturn currentItem;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\thelpers.inherits = function(extensions) {\n\t\t\t// Basic javascript inheritance based on the model created in Backbone.js\n\t\t\tvar me = this;\n\t\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\t\treturn me.apply(this, arguments);\n\t\t\t};\n\t\n\t\t\tvar Surrogate = function() {\n\t\t\t\tthis.constructor = ChartElement;\n\t\t\t};\n\t\t\tSurrogate.prototype = me.prototype;\n\t\t\tChartElement.prototype = new Surrogate();\n\t\n\t\t\tChartElement.extend = helpers.inherits;\n\t\n\t\t\tif (extensions) {\n\t\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t\t}\n\t\n\t\t\tChartElement.__super__ = me.prototype;\n\t\n\t\t\treturn ChartElement;\n\t\t};\n\t\thelpers.noop = function() {};\n\t\thelpers.uid = (function() {\n\t\t\tvar id = 0;\n\t\t\treturn function() {\n\t\t\t\treturn id++;\n\t\t\t};\n\t\t}());\n\t\t// -- Math methods\n\t\thelpers.isNumber = function(n) {\n\t\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t\t};\n\t\thelpers.almostEquals = function(x, y, epsilon) {\n\t\t\treturn Math.abs(x - y) < epsilon;\n\t\t};\n\t\thelpers.almostWhole = function(x, epsilon) {\n\t\t\tvar rounded = Math.round(x);\n\t\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\n\t\t};\n\t\thelpers.max = function(array) {\n\t\t\treturn array.reduce(function(max, value) {\n\t\t\t\tif (!isNaN(value)) {\n\t\t\t\t\treturn Math.max(max, value);\n\t\t\t\t}\n\t\t\t\treturn max;\n\t\t\t}, Number.NEGATIVE_INFINITY);\n\t\t};\n\t\thelpers.min = function(array) {\n\t\t\treturn array.reduce(function(min, value) {\n\t\t\t\tif (!isNaN(value)) {\n\t\t\t\t\treturn Math.min(min, value);\n\t\t\t\t}\n\t\t\t\treturn min;\n\t\t\t}, Number.POSITIVE_INFINITY);\n\t\t};\n\t\thelpers.sign = Math.sign?\n\t\t\tfunction(x) {\n\t\t\t\treturn Math.sign(x);\n\t\t\t} :\n\t\t\tfunction(x) {\n\t\t\t\tx = +x; // convert to a number\n\t\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\t\treturn x;\n\t\t\t\t}\n\t\t\t\treturn x > 0 ? 1 : -1;\n\t\t\t};\n\t\thelpers.log10 = Math.log10?\n\t\t\tfunction(x) {\n\t\t\t\treturn Math.log10(x);\n\t\t\t} :\n\t\t\tfunction(x) {\n\t\t\t\treturn Math.log(x) / Math.LN10;\n\t\t\t};\n\t\thelpers.toRadians = function(degrees) {\n\t\t\treturn degrees * (Math.PI / 180);\n\t\t};\n\t\thelpers.toDegrees = function(radians) {\n\t\t\treturn radians * (180 / Math.PI);\n\t\t};\n\t\t// Gets the angle from vertical upright to the point about a centre.\n\t\thelpers.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x,\n\t\t\t\tdistanceFromYCenter = anglePoint.y - centrePoint.y,\n\t\t\t\tradialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\t\n\t\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\t\n\t\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t\t}\n\t\n\t\t\treturn {\n\t\t\t\tangle: angle,\n\t\t\t\tdistance: radialDistanceFromCenter\n\t\t\t};\n\t\t};\n\t\thelpers.distanceBetweenPoints = function(pt1, pt2) {\n\t\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n\t\t};\n\t\thelpers.aliasPixel = function(pixelWidth) {\n\t\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t\t};\n\t\thelpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\t\n\t\t\t// This function must also respect \"skipped\" points\n\t\n\t\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint,\n\t\t\t\tcurrent = middlePoint,\n\t\t\t\tnext = afterPoint.skip ? middlePoint : afterPoint;\n\t\n\t\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\t\n\t\t\tvar s01 = d01 / (d01 + d12);\n\t\t\tvar s12 = d12 / (d01 + d12);\n\t\n\t\t\t// If all points are the same, s01 & s02 will be inf\n\t\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\t\ts12 = isNaN(s12) ? 0 : s12;\n\t\n\t\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\t\tvar fb = t * s12;\n\t\n\t\t\treturn {\n\t\t\t\tprevious: {\n\t\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t\t},\n\t\t\t\tnext: {\n\t\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t\thelpers.EPSILON = Number.EPSILON || 1e-14;\n\t\thelpers.splineCurveMonotone = function(points) {\n\t\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t\t// between the dataset discrete points due to the interpolation.\n\t\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\t\n\t\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\t\treturn {\n\t\t\t\t\tmodel: point._model,\n\t\t\t\t\tdeltaK: 0,\n\t\t\t\t\tmK: 0\n\t\t\t\t};\n\t\t\t});\n\t\n\t\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\t\tvar pointsLen = pointsWithTangents.length;\n\t\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\n\t\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\n\t\n\t\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\t\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n\t\t\t\t}\n\t\n\t\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\t\tpointCurrent.mK = 0;\n\t\t\t\t} else {\n\t\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Adjust tangents to ensure monotonic properties\n\t\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\n\t\t\t\tif (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\n\t\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\n\t\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t\t}\n\t\n\t\t\t// Compute control points\n\t\t\tvar deltaX;\n\t\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\n\t\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t\t}\n\t\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\thelpers.nextItem = function(collection, index, loop) {\n\t\t\tif (loop) {\n\t\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t\t}\n\t\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t\t};\n\t\thelpers.previousItem = function(collection, index, loop) {\n\t\t\tif (loop) {\n\t\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t\t}\n\t\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t\t};\n\t\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\t\thelpers.niceNum = function(range, round) {\n\t\t\tvar exponent = Math.floor(helpers.log10(range));\n\t\t\tvar fraction = range / Math.pow(10, exponent);\n\t\t\tvar niceFraction;\n\t\n\t\t\tif (round) {\n\t\t\t\tif (fraction < 1.5) {\n\t\t\t\t\tniceFraction = 1;\n\t\t\t\t} else if (fraction < 3) {\n\t\t\t\t\tniceFraction = 2;\n\t\t\t\t} else if (fraction < 7) {\n\t\t\t\t\tniceFraction = 5;\n\t\t\t\t} else {\n\t\t\t\t\tniceFraction = 10;\n\t\t\t\t}\n\t\t\t} else if (fraction <= 1.0) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction <= 2) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction <= 5) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\n\t\t\treturn niceFraction * Math.pow(10, exponent);\n\t\t};\n\t\t// Easing functions adapted from Robert Penner's easing equations\n\t\t// http://www.robertpenner.com/easing/\n\t\tvar easingEffects = helpers.easingEffects = {\n\t\t\tlinear: function(t) {\n\t\t\t\treturn t;\n\t\t\t},\n\t\t\teaseInQuad: function(t) {\n\t\t\t\treturn t * t;\n\t\t\t},\n\t\t\teaseOutQuad: function(t) {\n\t\t\t\treturn -1 * t * (t - 2);\n\t\t\t},\n\t\t\teaseInOutQuad: function(t) {\n\t\t\t\tif ((t /= 1 / 2) < 1) {\n\t\t\t\t\treturn 1 / 2 * t * t;\n\t\t\t\t}\n\t\t\t\treturn -1 / 2 * ((--t) * (t - 2) - 1);\n\t\t\t},\n\t\t\teaseInCubic: function(t) {\n\t\t\t\treturn t * t * t;\n\t\t\t},\n\t\t\teaseOutCubic: function(t) {\n\t\t\t\treturn 1 * ((t = t / 1 - 1) * t * t + 1);\n\t\t\t},\n\t\t\teaseInOutCubic: function(t) {\n\t\t\t\tif ((t /= 1 / 2) < 1) {\n\t\t\t\t\treturn 1 / 2 * t * t * t;\n\t\t\t\t}\n\t\t\t\treturn 1 / 2 * ((t -= 2) * t * t + 2);\n\t\t\t},\n\t\t\teaseInQuart: function(t) {\n\t\t\t\treturn t * t * t * t;\n\t\t\t},\n\t\t\teaseOutQuart: function(t) {\n\t\t\t\treturn -1 * ((t = t / 1 - 1) * t * t * t - 1);\n\t\t\t},\n\t\t\teaseInOutQuart: function(t) {\n\t\t\t\tif ((t /= 1 / 2) < 1) {\n\t\t\t\t\treturn 1 / 2 * t * t * t * t;\n\t\t\t\t}\n\t\t\t\treturn -1 / 2 * ((t -= 2) * t * t * t - 2);\n\t\t\t},\n\t\t\teaseInQuint: function(t) {\n\t\t\t\treturn 1 * (t /= 1) * t * t * t * t;\n\t\t\t},\n\t\t\teaseOutQuint: function(t) {\n\t\t\t\treturn 1 * ((t = t / 1 - 1) * t * t * t * t + 1);\n\t\t\t},\n\t\t\teaseInOutQuint: function(t) {\n\t\t\t\tif ((t /= 1 / 2) < 1) {\n\t\t\t\t\treturn 1 / 2 * t * t * t * t * t;\n\t\t\t\t}\n\t\t\t\treturn 1 / 2 * ((t -= 2) * t * t * t * t + 2);\n\t\t\t},\n\t\t\teaseInSine: function(t) {\n\t\t\t\treturn -1 * Math.cos(t / 1 * (Math.PI / 2)) + 1;\n\t\t\t},\n\t\t\teaseOutSine: function(t) {\n\t\t\t\treturn 1 * Math.sin(t / 1 * (Math.PI / 2));\n\t\t\t},\n\t\t\teaseInOutSine: function(t) {\n\t\t\t\treturn -1 / 2 * (Math.cos(Math.PI * t / 1) - 1);\n\t\t\t},\n\t\t\teaseInExpo: function(t) {\n\t\t\t\treturn (t === 0) ? 1 : 1 * Math.pow(2, 10 * (t / 1 - 1));\n\t\t\t},\n\t\t\teaseOutExpo: function(t) {\n\t\t\t\treturn (t === 1) ? 1 : 1 * (-Math.pow(2, -10 * t / 1) + 1);\n\t\t\t},\n\t\t\teaseInOutExpo: function(t) {\n\t\t\t\tif (t === 0) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tif (t === 1) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif ((t /= 1 / 2) < 1) {\n\t\t\t\t\treturn 1 / 2 * Math.pow(2, 10 * (t - 1));\n\t\t\t\t}\n\t\t\t\treturn 1 / 2 * (-Math.pow(2, -10 * --t) + 2);\n\t\t\t},\n\t\t\teaseInCirc: function(t) {\n\t\t\t\tif (t >= 1) {\n\t\t\t\t\treturn t;\n\t\t\t\t}\n\t\t\t\treturn -1 * (Math.sqrt(1 - (t /= 1) * t) - 1);\n\t\t\t},\n\t\t\teaseOutCirc: function(t) {\n\t\t\t\treturn 1 * Math.sqrt(1 - (t = t / 1 - 1) * t);\n\t\t\t},\n\t\t\teaseInOutCirc: function(t) {\n\t\t\t\tif ((t /= 1 / 2) < 1) {\n\t\t\t\t\treturn -1 / 2 * (Math.sqrt(1 - t * t) - 1);\n\t\t\t\t}\n\t\t\t\treturn 1 / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t\t\t},\n\t\t\teaseInElastic: function(t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\tvar p = 0;\n\t\t\t\tvar a = 1;\n\t\t\t\tif (t === 0) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tif ((t /= 1) === 1) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif (!p) {\n\t\t\t\t\tp = 1 * 0.3;\n\t\t\t\t}\n\t\t\t\tif (a < Math.abs(1)) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else {\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\t}\n\t\t\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\n\t\t\t},\n\t\t\teaseOutElastic: function(t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\tvar p = 0;\n\t\t\t\tvar a = 1;\n\t\t\t\tif (t === 0) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tif ((t /= 1) === 1) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif (!p) {\n\t\t\t\t\tp = 1 * 0.3;\n\t\t\t\t}\n\t\t\t\tif (a < Math.abs(1)) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else {\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\t}\n\t\t\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) + 1;\n\t\t\t},\n\t\t\teaseInOutElastic: function(t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\tvar p = 0;\n\t\t\t\tvar a = 1;\n\t\t\t\tif (t === 0) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tif ((t /= 1 / 2) === 2) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif (!p) {\n\t\t\t\t\tp = 1 * (0.3 * 1.5);\n\t\t\t\t}\n\t\t\t\tif (a < Math.abs(1)) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else {\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\t}\n\t\t\t\tif (t < 1) {\n\t\t\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\n\t\t\t\t}\n\t\t\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t\t\t},\n\t\t\teaseInBack: function(t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\treturn 1 * (t /= 1) * t * ((s + 1) * t - s);\n\t\t\t},\n\t\t\teaseOutBack: function(t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\treturn 1 * ((t = t / 1 - 1) * t * ((s + 1) * t + s) + 1);\n\t\t\t},\n\t\t\teaseInOutBack: function(t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\tif ((t /= 1 / 2) < 1) {\n\t\t\t\t\treturn 1 / 2 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t\t\t}\n\t\t\t\treturn 1 / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t\t\t},\n\t\t\teaseInBounce: function(t) {\n\t\t\t\treturn 1 - easingEffects.easeOutBounce(1 - t);\n\t\t\t},\n\t\t\teaseOutBounce: function(t) {\n\t\t\t\tif ((t /= 1) < (1 / 2.75)) {\n\t\t\t\t\treturn 1 * (7.5625 * t * t);\n\t\t\t\t} else if (t < (2 / 2.75)) {\n\t\t\t\t\treturn 1 * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75);\n\t\t\t\t} else if (t < (2.5 / 2.75)) {\n\t\t\t\t\treturn 1 * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375);\n\t\t\t\t}\n\t\t\t\treturn 1 * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375);\n\t\t\t},\n\t\t\teaseInOutBounce: function(t) {\n\t\t\t\tif (t < 1 / 2) {\n\t\t\t\t\treturn easingEffects.easeInBounce(t * 2) * 0.5;\n\t\t\t\t}\n\t\t\t\treturn easingEffects.easeOutBounce(t * 2 - 1) * 0.5 + 1 * 0.5;\n\t\t\t}\n\t\t};\n\t\t// Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\t\thelpers.requestAnimFrame = (function() {\n\t\t\treturn window.requestAnimationFrame ||\n\t\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\t\twindow.oRequestAnimationFrame ||\n\t\t\t\twindow.msRequestAnimationFrame ||\n\t\t\t\tfunction(callback) {\n\t\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t\t};\n\t\t}());\n\t\t// -- DOM methods\n\t\thelpers.getRelativePosition = function(evt, chart) {\n\t\t\tvar mouseX, mouseY;\n\t\t\tvar e = evt.originalEvent || evt,\n\t\t\t\tcanvas = evt.currentTarget || evt.srcElement,\n\t\t\t\tboundingRect = canvas.getBoundingClientRect();\n\t\n\t\t\tvar touches = e.touches;\n\t\t\tif (touches && touches.length > 0) {\n\t\t\t\tmouseX = touches[0].clientX;\n\t\t\t\tmouseY = touches[0].clientY;\n\t\n\t\t\t} else {\n\t\t\t\tmouseX = e.clientX;\n\t\t\t\tmouseY = e.clientY;\n\t\t\t}\n\t\n\t\t\t// Scale mouse coordinates into canvas coordinates\n\t\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t\t// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\t\tvar paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n\t\t\tvar paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n\t\t\tvar paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n\t\t\tvar paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n\t\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\t\n\t\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\t\n\t\t\treturn {\n\t\t\t\tx: mouseX,\n\t\t\t\ty: mouseY\n\t\t\t};\n\t\n\t\t};\n\t\thelpers.addEvent = function(node, eventType, method) {\n\t\t\tif (node.addEventListener) {\n\t\t\t\tnode.addEventListener(eventType, method);\n\t\t\t} else if (node.attachEvent) {\n\t\t\t\tnode.attachEvent('on' + eventType, method);\n\t\t\t} else {\n\t\t\t\tnode['on' + eventType] = method;\n\t\t\t}\n\t\t};\n\t\thelpers.removeEvent = function(node, eventType, handler) {\n\t\t\tif (node.removeEventListener) {\n\t\t\t\tnode.removeEventListener(eventType, handler, false);\n\t\t\t} else if (node.detachEvent) {\n\t\t\t\tnode.detachEvent('on' + eventType, handler);\n\t\t\t} else {\n\t\t\t\tnode['on' + eventType] = helpers.noop;\n\t\t\t}\n\t\t};\n\t\n\t\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\t\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\t\tvar valueInPixels;\n\t\t\tif (typeof(styleValue) === 'string') {\n\t\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\t\n\t\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t\t// percentage * size in dimension\n\t\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvalueInPixels = styleValue;\n\t\t\t}\n\t\n\t\t\treturn valueInPixels;\n\t\t}\n\t\n\t\t/**\n\t\t * Returns if the given value contains an effective constraint.\n\t\t * @private\n\t\t */\n\t\tfunction isConstrainedValue(value) {\n\t\t\treturn value !== undefined && value !== null && value !== 'none';\n\t\t}\n\t\n\t\t// Private helper to get a constraint dimension\n\t\t// @param domNode : the node to check the constraint on\n\t\t// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n\t\t// @param percentageProperty : property of parent to use when calculating width as a percentage\n\t\t// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\t\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\t\tvar view = document.defaultView;\n\t\t\tvar parentNode = domNode.parentNode;\n\t\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\t\tvar infinity = Number.POSITIVE_INFINITY;\n\t\n\t\t\tif (hasCNode || hasCContainer) {\n\t\t\t\treturn Math.min(\n\t\t\t\t\thasCNode? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\t\thasCContainer? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t\t}\n\t\n\t\t\treturn 'none';\n\t\t}\n\t\t// returns Number or undefined if no constraint\n\t\thelpers.getConstraintWidth = function(domNode) {\n\t\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t\t};\n\t\t// returns Number or undefined if no constraint\n\t\thelpers.getConstraintHeight = function(domNode) {\n\t\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t\t};\n\t\thelpers.getMaximumWidth = function(domNode) {\n\t\t\tvar container = domNode.parentNode;\n\t\t\tvar paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);\n\t\t\tvar paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);\n\t\t\tvar w = container.clientWidth - paddingLeft - paddingRight;\n\t\t\tvar cw = helpers.getConstraintWidth(domNode);\n\t\t\treturn isNaN(cw)? w : Math.min(w, cw);\n\t\t};\n\t\thelpers.getMaximumHeight = function(domNode) {\n\t\t\tvar container = domNode.parentNode;\n\t\t\tvar paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);\n\t\t\tvar paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);\n\t\t\tvar h = container.clientHeight - paddingTop - paddingBottom;\n\t\t\tvar ch = helpers.getConstraintHeight(domNode);\n\t\t\treturn isNaN(ch)? h : Math.min(h, ch);\n\t\t};\n\t\thelpers.getStyle = function(el, property) {\n\t\t\treturn el.currentStyle ?\n\t\t\t\tel.currentStyle[property] :\n\t\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t\t};\n\t\thelpers.retinaScale = function(chart) {\n\t\t\tvar pixelRatio = chart.currentDevicePixelRatio = window.devicePixelRatio || 1;\n\t\t\tif (pixelRatio === 1) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tvar canvas = chart.canvas;\n\t\t\tvar height = chart.height;\n\t\t\tvar width = chart.width;\n\t\n\t\t\tcanvas.height = height * pixelRatio;\n\t\t\tcanvas.width = width * pixelRatio;\n\t\t\tchart.ctx.scale(pixelRatio, pixelRatio);\n\t\n\t\t\t// If no style has been set on the canvas, the render size is used as display size,\n\t\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/3575\n\t\t\tcanvas.style.height = height + 'px';\n\t\t\tcanvas.style.width = width + 'px';\n\t\t};\n\t\t// -- Canvas methods\n\t\thelpers.clear = function(chart) {\n\t\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t\t};\n\t\thelpers.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t\t};\n\t\thelpers.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\t\tcache = cache || {};\n\t\t\tvar data = cache.data = cache.data || {};\n\t\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\t\n\t\t\tif (cache.font !== font) {\n\t\t\t\tdata = cache.data = {};\n\t\t\t\tgc = cache.garbageCollect = [];\n\t\t\t\tcache.font = font;\n\t\t\t}\n\t\n\t\t\tctx.font = font;\n\t\t\tvar longest = 0;\n\t\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\tif (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n\t\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, thing);\n\t\t\t\t} else if (helpers.isArray(thing)) {\n\t\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\t\thelpers.each(thing, function(nestedThing) {\n\t\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n\t\t\t\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\tvar gcLen = gc.length / 2;\n\t\t\tif (gcLen > arrayOfThings.length) {\n\t\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\t\tdelete data[gc[i]];\n\t\t\t\t}\n\t\t\t\tgc.splice(0, gcLen);\n\t\t\t}\n\t\t\treturn longest;\n\t\t};\n\t\thelpers.measureText = function(ctx, data, gc, longest, string) {\n\t\t\tvar textWidth = data[string];\n\t\t\tif (!textWidth) {\n\t\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\t\tgc.push(string);\n\t\t\t}\n\t\t\tif (textWidth > longest) {\n\t\t\t\tlongest = textWidth;\n\t\t\t}\n\t\t\treturn longest;\n\t\t};\n\t\thelpers.numberOfLabelLines = function(arrayOfThings) {\n\t\t\tvar numberOfLines = 1;\n\t\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\t\tif (helpers.isArray(thing)) {\n\t\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn numberOfLines;\n\t\t};\n\t\thelpers.drawRoundedRectangle = function(ctx, x, y, width, height, radius) {\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x + radius, y);\n\t\t\tctx.lineTo(x + width - radius, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\t\tctx.lineTo(x + width, y + height - radius);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\t\tctx.lineTo(x + radius, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\t\tctx.lineTo(x, y + radius);\n\t\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\t\tctx.closePath();\n\t\t};\n\t\thelpers.color = function(c) {\n\t\t\tif (!color) {\n\t\t\t\tconsole.error('Color.js not found!');\n\t\t\t\treturn c;\n\t\t\t}\n\t\n\t\t\t/* global CanvasGradient */\n\t\t\tif (c instanceof CanvasGradient) {\n\t\t\t\treturn color(Chart.defaults.global.defaultColor);\n\t\t\t}\n\t\n\t\t\treturn color(c);\n\t\t};\n\t\thelpers.isArray = Array.isArray?\n\t\t\tfunction(obj) {\n\t\t\t\treturn Array.isArray(obj);\n\t\t\t} :\n\t\t\tfunction(obj) {\n\t\t\t\treturn Object.prototype.toString.call(obj) === '[object Array]';\n\t\t\t};\n\t\t// ! @see http://stackoverflow.com/a/14853974\n\t\thelpers.arrayEquals = function(a0, a1) {\n\t\t\tvar i, ilen, v0, v1;\n\t\n\t\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\tfor (i = 0, ilen=a0.length; i < ilen; ++i) {\n\t\t\t\tv0 = a0[i];\n\t\t\t\tv1 = a1[i];\n\t\n\t\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t} else if (v0 !== v1) {\n\t\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t};\n\t\thelpers.callCallback = function(fn, args, _tArg) {\n\t\t\tif (fn && typeof fn.call === 'function') {\n\t\t\t\tfn.apply(_tArg, args);\n\t\t\t}\n\t\t};\n\t\thelpers.getHoverColor = function(colorValue) {\n\t\t\t/* global CanvasPattern */\n\t\t\treturn (colorValue instanceof CanvasPattern) ?\n\t\t\t\tcolorValue :\n\t\t\t\thelpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t\t};\n\t};\n\n\n/***/ },\n/* 228 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function(Chart) {\n\t\tvar helpers = Chart.helpers;\n\t\n\t\t/**\n\t\t * Helper function to get relative position for an event\n\t\t * @param {Event|IEvent} event - The event to get the position for\n\t\t * @param {Chart} chart - The chart\n\t\t * @returns {Point} the event position\n\t\t */\n\t\tfunction getRelativePosition(e, chart) {\n\t\t\tif (e.native) {\n\t\t\t\treturn {\n\t\t\t\t\tx: e.x,\n\t\t\t\t\ty: e.y\n\t\t\t\t};\n\t\t\t}\n\t\n\t\t\treturn helpers.getRelativePosition(e, chart);\n\t\t}\n\t\n\t\t/**\n\t\t * Helper function to traverse all of the visible elements in the chart\n\t\t * @param chart {chart} the chart\n\t\t * @param handler {Function} the callback to execute for each visible item\n\t\t */\n\t\tfunction parseVisibleItems(chart, handler) {\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar meta, i, j, ilen, jlen;\n\t\n\t\t\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\n\t\t\t\tif (!chart.isDatasetVisible(i)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n\t\t\t\t\tvar element = meta.data[j];\n\t\t\t\t\tif (!element._view.skip) {\n\t\t\t\t\t\thandler(element);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t/**\n\t\t * Helper function to get the items that intersect the event position\n\t\t * @param items {ChartElement[]} elements to filter\n\t\t * @param position {Point} the point to be nearest to\n\t\t * @return {ChartElement[]} the nearest items\n\t\t */\n\t\tfunction getIntersectItems(chart, position) {\n\t\t\tvar elements = [];\n\t\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\telements.push(element);\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\treturn elements;\n\t\t}\n\t\n\t\t/**\n\t\t * Helper function to get the items nearest to the event position considering all visible items in teh chart\n\t\t * @param chart {Chart} the chart to look at elements from\n\t\t * @param position {Point} the point to be nearest to\n\t\t * @param intersect {Boolean} if true, only consider items that intersect the position\n\t\t * @param distanceMetric {Function} Optional function to provide the distance between\n\t\t * @return {ChartElement[]} the nearest items\n\t\t */\n\t\tfunction getNearestItems(chart, position, intersect, distanceMetric) {\n\t\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\t\tvar nearestItems = [];\n\t\n\t\t\tif (!distanceMetric) {\n\t\t\t\tdistanceMetric = helpers.distanceBetweenPoints;\n\t\t\t}\n\t\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (intersect && !element.inRange(position.x, position.y)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tvar center = element.getCenterPoint();\n\t\t\t\tvar distance = distanceMetric(position, center);\n\t\n\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\tnearestItems = [element];\n\t\t\t\t\tminDistance = distance;\n\t\t\t\t} else if (distance === minDistance) {\n\t\t\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\t\t\tnearestItems.push(element);\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\treturn nearestItems;\n\t\t}\n\t\n\t\tfunction indexMode(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart.chart);\n\t\t\tvar distanceMetric = function(pt1, pt2) {\n\t\t\t\treturn Math.abs(pt1.x - pt2.x);\n\t\t\t};\n\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\t\t\tvar elements = [];\n\t\n\t\t\tif (!items.length) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\n\t\t\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex),\n\t\t\t\t\t\telement = meta.data[items[0]._index];\n\t\n\t\t\t\t\t// don't count items that are skipped (null data)\n\t\t\t\t\tif (element && !element._view.skip) {\n\t\t\t\t\t\telements.push(element);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\treturn elements;\n\t\t}\n\t\n\t\t/**\n\t\t * @interface IInteractionOptions\n\t\t */\n\t\t/**\n\t\t * If true, only consider items that intersect the point\n\t\t * @name IInterfaceOptions#boolean\n\t\t * @type Boolean\n\t\t */\n\t\n\t\t/**\n\t\t * Contains interaction related functions\n\t\t * @namespace Chart.Interaction\n\t\t */\n\t\tChart.Interaction = {\n\t\t\t// Helper function for different modes\n\t\t\tmodes: {\n\t\t\t\tsingle: function(chart, e) {\n\t\t\t\t\tvar position = getRelativePosition(e, chart.chart);\n\t\t\t\t\tvar elements = [];\n\t\n\t\t\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\t\t\telements.push(element);\n\t\t\t\t\t\t\treturn elements;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\n\t\t\t\t\treturn elements.slice(0, 1);\n\t\t\t\t},\n\t\n\t\t\t\t/**\n\t\t\t\t * @function Chart.Interaction.modes.label\n\t\t\t\t * @deprecated since version 2.4.0\n\t\t\t\t */\n\t\t\t\tlabel: indexMode,\n\t\n\t\t\t\t/**\n\t\t\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t\t\t * @function Chart.Interaction.modes.index\n\t\t\t\t * @since v2.4.0\n\t\t\t\t * @param chart {chart} the chart we are returning items from\n\t\t\t\t * @param e {Event} the event we are find things at\n\t\t\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t\t\t */\n\t\t\t\tindex: indexMode,\n\t\n\t\t\t\t/**\n\t\t\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t\t\t * @function Chart.Interaction.modes.dataset\n\t\t\t\t * @param chart {chart} the chart we are returning items from\n\t\t\t\t * @param e {Event} the event we are find things at\n\t\t\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t\t\t */\n\t\t\t\tdataset: function(chart, e, options) {\n\t\t\t\t\tvar position = getRelativePosition(e, chart.chart);\n\t\t\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false);\n\t\n\t\t\t\t\tif (items.length > 0) {\n\t\t\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn items;\n\t\t\t\t},\n\t\n\t\t\t\t/**\n\t\t\t\t * @function Chart.Interaction.modes.x-axis\n\t\t\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\n\t\t\t\t */\n\t\t\t\t'x-axis': function(chart, e) {\n\t\t\t\t\treturn indexMode(chart, e, true);\n\t\t\t\t},\n\t\n\t\t\t\t/**\n\t\t\t\t * Point mode returns all elements that hit test based on the event position\n\t\t\t\t * of the event\n\t\t\t\t * @function Chart.Interaction.modes.intersect\n\t\t\t\t * @param chart {chart} the chart we are returning items from\n\t\t\t\t * @param e {Event} the event we are find things at\n\t\t\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t\t\t */\n\t\t\t\tpoint: function(chart, e) {\n\t\t\t\t\tvar position = getRelativePosition(e, chart.chart);\n\t\t\t\t\treturn getIntersectItems(chart, position);\n\t\t\t\t},\n\t\n\t\t\t\t/**\n\t\t\t\t * nearest mode returns the element closest to the point\n\t\t\t\t * @function Chart.Interaction.modes.intersect\n\t\t\t\t * @param chart {chart} the chart we are returning items from\n\t\t\t\t * @param e {Event} the event we are find things at\n\t\t\t\t * @param options {IInteractionOptions} options to use\n\t\t\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t\t\t */\n\t\t\t\tnearest: function(chart, e, options) {\n\t\t\t\t\tvar position = getRelativePosition(e, chart.chart);\n\t\t\t\t\tvar nearestItems = getNearestItems(chart, position, options.intersect);\n\t\n\t\t\t\t\t// We have multiple items at the same distance from the event. Now sort by smallest\n\t\t\t\t\tif (nearestItems.length > 1) {\n\t\t\t\t\t\tnearestItems.sort(function(a, b) {\n\t\t\t\t\t\t\tvar sizeA = a.getArea();\n\t\t\t\t\t\t\tvar sizeB = b.getArea();\n\t\t\t\t\t\t\tvar ret = sizeA - sizeB;\n\t\n\t\t\t\t\t\t\tif (ret === 0) {\n\t\t\t\t\t\t\t\t// if equal sort by dataset index\n\t\t\t\t\t\t\t\tret = a._datasetIndex - b._datasetIndex;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\treturn ret;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Return only 1 item\n\t\t\t\t\treturn nearestItems.slice(0, 1);\n\t\t\t\t},\n\t\n\t\t\t\t/**\n\t\t\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t\t\t * @function Chart.Interaction.modes.x\n\t\t\t\t * @param chart {chart} the chart we are returning items from\n\t\t\t\t * @param e {Event} the event we are find things at\n\t\t\t\t * @param options {IInteractionOptions} options to use\n\t\t\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t\t\t */\n\t\t\t\tx: function(chart, e, options) {\n\t\t\t\t\tvar position = getRelativePosition(e, chart.chart);\n\t\t\t\t\tvar items = [];\n\t\t\t\t\tvar intersectsItem = false;\n\t\n\t\t\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\t\t\tif (element.inXRange(position.x)) {\n\t\t\t\t\t\t\titems.push(element);\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\t\t\tintersectsItem = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\n\t\t\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t\t\t// that intersect the position, return nothing\n\t\t\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\t\t\titems = [];\n\t\t\t\t\t}\n\t\t\t\t\treturn items;\n\t\t\t\t},\n\t\n\t\t\t\t/**\n\t\t\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t\t\t * @function Chart.Interaction.modes.y\n\t\t\t\t * @param chart {chart} the chart we are returning items from\n\t\t\t\t * @param e {Event} the event we are find things at\n\t\t\t\t * @param options {IInteractionOptions} options to use\n\t\t\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t\t\t */\n\t\t\t\ty: function(chart, e, options) {\n\t\t\t\t\tvar position = getRelativePosition(e, chart.chart);\n\t\t\t\t\tvar items = [];\n\t\t\t\t\tvar intersectsItem = false;\n\t\n\t\t\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\t\t\tif (element.inYRange(position.y)) {\n\t\t\t\t\t\t\titems.push(element);\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\t\t\tintersectsItem = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\n\t\t\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t\t\t// that intersect the position, return nothing\n\t\t\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\t\t\titems = [];\n\t\t\t\t\t}\n\t\t\t\t\treturn items;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t};\n\n\n/***/ },\n/* 229 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function() {\n\t\n\t\t// Occupy the global variable of Chart, and create a simple base class\n\t\tvar Chart = function(item, config) {\n\t\t\tthis.controller = new Chart.Controller(item, config, this);\n\t\t\treturn this.controller;\n\t\t};\n\t\n\t\t// Globally expose the defaults to allow for user updating/changing\n\t\tChart.defaults = {\n\t\t\tglobal: {\n\t\t\t\tresponsive: true,\n\t\t\t\tresponsiveAnimationDuration: 0,\n\t\t\t\tmaintainAspectRatio: true,\n\t\t\t\tevents: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n\t\t\t\thover: {\n\t\t\t\t\tonHover: null,\n\t\t\t\t\tmode: 'nearest',\n\t\t\t\t\tintersect: true,\n\t\t\t\t\tanimationDuration: 400\n\t\t\t\t},\n\t\t\t\tonClick: null,\n\t\t\t\tdefaultColor: 'rgba(0,0,0,0.1)',\n\t\t\t\tdefaultFontColor: '#666',\n\t\t\t\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\t\t\t\tdefaultFontSize: 12,\n\t\t\t\tdefaultFontStyle: 'normal',\n\t\t\t\tshowLines: true,\n\t\n\t\t\t\t// Element defaults defined in element extensions\n\t\t\t\telements: {},\n\t\n\t\t\t\t// Legend callback string\n\t\t\t\tlegendCallback: function(chart) {\n\t\t\t\t\tvar text = [];\n\t\t\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\t\t\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\t\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\t\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttext.push('</li>');\n\t\t\t\t\t}\n\t\t\t\t\ttext.push('</ul>');\n\t\n\t\t\t\t\treturn text.join('');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\tChart.Chart = Chart;\n\t\n\t\treturn Chart;\n\t};\n\n\n/***/ },\n/* 230 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function(Chart) {\n\t\n\t\tvar helpers = Chart.helpers;\n\t\n\t\t// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n\t\t// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n\t\t// It is this service's responsibility of carrying out that layout.\n\t\tChart.layoutService = {\n\t\t\tdefaults: {},\n\t\n\t\t\t// Register a box to a chartInstance. A box is simply a reference to an object that requires layout. eg. Scales, Legend, Plugins.\n\t\t\taddBox: function(chartInstance, box) {\n\t\t\t\tif (!chartInstance.boxes) {\n\t\t\t\t\tchartInstance.boxes = [];\n\t\t\t\t}\n\t\t\t\tchartInstance.boxes.push(box);\n\t\t\t},\n\t\n\t\t\tremoveBox: function(chartInstance, box) {\n\t\t\t\tif (!chartInstance.boxes) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tchartInstance.boxes.splice(chartInstance.boxes.indexOf(box), 1);\n\t\t\t},\n\t\n\t\t\t// The most important function\n\t\t\tupdate: function(chartInstance, width, height) {\n\t\n\t\t\t\tif (!chartInstance) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tvar layoutOptions = chartInstance.options.layout;\n\t\t\t\tvar padding = layoutOptions ? layoutOptions.padding : null;\n\t\n\t\t\t\tvar leftPadding = 0;\n\t\t\t\tvar rightPadding = 0;\n\t\t\t\tvar topPadding = 0;\n\t\t\t\tvar bottomPadding = 0;\n\t\n\t\t\t\tif (!isNaN(padding)) {\n\t\t\t\t\t// options.layout.padding is a number. assign to all\n\t\t\t\t\tleftPadding = padding;\n\t\t\t\t\trightPadding = padding;\n\t\t\t\t\ttopPadding = padding;\n\t\t\t\t\tbottomPadding = padding;\n\t\t\t\t} else {\n\t\t\t\t\tleftPadding = padding.left || 0;\n\t\t\t\t\trightPadding = padding.right || 0;\n\t\t\t\t\ttopPadding = padding.top || 0;\n\t\t\t\t\tbottomPadding = padding.bottom || 0;\n\t\t\t\t}\n\t\n\t\t\t\tvar leftBoxes = helpers.where(chartInstance.boxes, function(box) {\n\t\t\t\t\treturn box.options.position === 'left';\n\t\t\t\t});\n\t\t\t\tvar rightBoxes = helpers.where(chartInstance.boxes, function(box) {\n\t\t\t\t\treturn box.options.position === 'right';\n\t\t\t\t});\n\t\t\t\tvar topBoxes = helpers.where(chartInstance.boxes, function(box) {\n\t\t\t\t\treturn box.options.position === 'top';\n\t\t\t\t});\n\t\t\t\tvar bottomBoxes = helpers.where(chartInstance.boxes, function(box) {\n\t\t\t\t\treturn box.options.position === 'bottom';\n\t\t\t\t});\n\t\n\t\t\t\t// Boxes that overlay the chartarea such as the radialLinear scale\n\t\t\t\tvar chartAreaBoxes = helpers.where(chartInstance.boxes, function(box) {\n\t\t\t\t\treturn box.options.position === 'chartArea';\n\t\t\t\t});\n\t\n\t\t\t\t// Ensure that full width boxes are at the very top / bottom\n\t\t\t\ttopBoxes.sort(function(a, b) {\n\t\t\t\t\treturn (b.options.fullWidth ? 1 : 0) - (a.options.fullWidth ? 1 : 0);\n\t\t\t\t});\n\t\t\t\tbottomBoxes.sort(function(a, b) {\n\t\t\t\t\treturn (a.options.fullWidth ? 1 : 0) - (b.options.fullWidth ? 1 : 0);\n\t\t\t\t});\n\t\n\t\t\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t\t\t// Our canvas looks like the following.\n\t\t\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t\t\t// B1 is the bottom axis\n\t\t\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t\t\t// an error will be thrown.\n\t\t\t\t//\n\t\t\t\t// |----------------------------------------------------|\n\t\t\t\t// |                  T1 (Full Width)                   |\n\t\t\t\t// |----------------------------------------------------|\n\t\t\t\t// |    |    |                 T2                  |    |\n\t\t\t\t// |    |----|-------------------------------------|----|\n\t\t\t\t// |    |    | C1 |                           | C2 |    |\n\t\t\t\t// |    |    |----|                           |----|    |\n\t\t\t\t// |    |    |                                     |    |\n\t\t\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t\t\t// |    |    |                                     |    |\n\t\t\t\t// |    |    |----|                           |----|    |\n\t\t\t\t// |    |    | C3 |                           | C4 |    |\n\t\t\t\t// |    |----|-------------------------------------|----|\n\t\t\t\t// |    |    |                 B1                  |    |\n\t\t\t\t// |----------------------------------------------------|\n\t\t\t\t// |                  B2 (Full Width)                   |\n\t\t\t\t// |----------------------------------------------------|\n\t\t\t\t//\n\t\t\t\t// What we do to find the best sizing, we do the following\n\t\t\t\t// 1. Determine the minimum size of the chart area.\n\t\t\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t\t\t// 6. Refit each axis\n\t\t\t\t// 7. Position each axis in the final location\n\t\t\t\t// 8. Tell the chart the final location of the chart area\n\t\t\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\t\n\t\t\t\t// Step 1\n\t\t\t\tvar chartWidth = width - leftPadding - rightPadding;\n\t\t\t\tvar chartHeight = height - topPadding - bottomPadding;\n\t\t\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\t\t\t\tvar chartAreaHeight = chartHeight / 2; // min 50%\n\t\n\t\t\t\t// Step 2\n\t\t\t\tvar verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\n\t\n\t\t\t\t// Step 3\n\t\t\t\tvar horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\n\t\n\t\t\t\t// Step 4\n\t\t\t\tvar maxChartAreaWidth = chartWidth;\n\t\t\t\tvar maxChartAreaHeight = chartHeight;\n\t\t\t\tvar minBoxSizes = [];\n\t\n\t\t\t\tfunction getMinimumBoxSize(box) {\n\t\t\t\t\tvar minSize;\n\t\t\t\t\tvar isHorizontal = box.isHorizontal();\n\t\n\t\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t\tminSize = box.update(box.options.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n\t\t\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tminSize = box.update(verticalBoxWidth, chartAreaHeight);\n\t\t\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tminBoxSizes.push({\n\t\t\t\t\t\thorizontal: isHorizontal,\n\t\t\t\t\t\tminSize: minSize,\n\t\t\t\t\t\tbox: box,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\n\t\t\t\thelpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\n\t\n\t\t\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\t\t\t\tvar maxHorizontalLeftPadding = 0;\n\t\t\t\tvar maxHorizontalRightPadding = 0;\n\t\t\t\tvar maxVerticalTopPadding = 0;\n\t\t\t\tvar maxVerticalBottomPadding = 0;\n\t\n\t\t\t\thelpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {\n\t\t\t\t\tif (horizontalBox.getPadding) {\n\t\t\t\t\t\tvar boxPadding = horizontalBox.getPadding();\n\t\t\t\t\t\tmaxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n\t\t\t\t\t\tmaxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\t\t\thelpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {\n\t\t\t\t\tif (verticalBox.getPadding) {\n\t\t\t\t\t\tvar boxPadding = verticalBox.getPadding();\n\t\t\t\t\t\tmaxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n\t\t\t\t\t\tmaxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\t\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t\t\t// be if the axes are drawn at their minimum sizes.\n\t\t\t\t// Steps 5 & 6\n\t\t\t\tvar totalLeftBoxesWidth = leftPadding;\n\t\t\t\tvar totalRightBoxesWidth = rightPadding;\n\t\t\t\tvar totalTopBoxesHeight = topPadding;\n\t\t\t\tvar totalBottomBoxesHeight = bottomPadding;\n\t\n\t\t\t\t// Function to fit a box\n\t\t\t\tfunction fitBox(box) {\n\t\t\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\t\t\treturn minBox.box === box;\n\t\t\t\t\t});\n\t\n\t\t\t\t\tif (minBoxSize) {\n\t\t\t\t\t\tif (box.isHorizontal()) {\n\t\t\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\t\t\tleft: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n\t\t\t\t\t\t\t\tright: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n\t\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t\t\t};\n\t\n\t\t\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\t\t\tbox.update(box.options.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\t\t\thelpers.each(leftBoxes.concat(rightBoxes), fitBox);\n\t\n\t\t\t\thelpers.each(leftBoxes, function(box) {\n\t\t\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t\t\t});\n\t\n\t\t\t\thelpers.each(rightBoxes, function(box) {\n\t\t\t\t\ttotalRightBoxesWidth += box.width;\n\t\t\t\t});\n\t\n\t\t\t\t// Set the Left and Right margins for the horizontal boxes\n\t\t\t\thelpers.each(topBoxes.concat(bottomBoxes), fitBox);\n\t\n\t\t\t\t// Figure out how much margin is on the top and bottom of the vertical boxes\n\t\t\t\thelpers.each(topBoxes, function(box) {\n\t\t\t\t\ttotalTopBoxesHeight += box.height;\n\t\t\t\t});\n\t\n\t\t\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t\t\t});\n\t\n\t\t\t\tfunction finalFitVerticalBox(box) {\n\t\t\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\t\t\treturn minSize.box === box;\n\t\t\t\t\t});\n\t\n\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\tright: 0,\n\t\t\t\t\t\ttop: totalTopBoxesHeight,\n\t\t\t\t\t\tbottom: totalBottomBoxesHeight\n\t\t\t\t\t};\n\t\n\t\t\t\t\tif (minBoxSize) {\n\t\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Let the left layout know the final margin\n\t\t\t\thelpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\n\t\n\t\t\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\t\t\ttotalLeftBoxesWidth = leftPadding;\n\t\t\t\ttotalRightBoxesWidth = rightPadding;\n\t\t\t\ttotalTopBoxesHeight = topPadding;\n\t\t\t\ttotalBottomBoxesHeight = bottomPadding;\n\t\n\t\t\t\thelpers.each(leftBoxes, function(box) {\n\t\t\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t\t\t});\n\t\n\t\t\t\thelpers.each(rightBoxes, function(box) {\n\t\t\t\t\ttotalRightBoxesWidth += box.width;\n\t\t\t\t});\n\t\n\t\t\t\thelpers.each(topBoxes, function(box) {\n\t\t\t\t\ttotalTopBoxesHeight += box.height;\n\t\t\t\t});\n\t\t\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t\t\t});\n\t\n\t\t\t\t// We may be adding some padding to account for rotated x axis labels\n\t\t\t\tvar leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n\t\t\t\ttotalLeftBoxesWidth += leftPaddingAddition;\n\t\t\t\ttotalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n\t\n\t\t\t\tvar topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n\t\t\t\ttotalTopBoxesHeight += topPaddingAddition;\n\t\t\t\ttotalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\n\t\n\t\t\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t\t\t// without calling `fit` again\n\t\t\t\tvar newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n\t\t\t\tvar newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\t\n\t\t\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\t\t\thelpers.each(leftBoxes, function(box) {\n\t\t\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t\t\t});\n\t\n\t\t\t\t\thelpers.each(rightBoxes, function(box) {\n\t\t\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t\t\t});\n\t\n\t\t\t\t\thelpers.each(topBoxes, function(box) {\n\t\t\t\t\t\tif (!box.options.fullWidth) {\n\t\t\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\n\t\t\t\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\t\t\t\tif (!box.options.fullWidth) {\n\t\t\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\n\t\t\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\n\t\t\t\t// Step 7 - Position the boxes\n\t\t\t\tvar left = leftPadding + leftPaddingAddition;\n\t\t\t\tvar top = topPadding + topPaddingAddition;\n\t\n\t\t\t\tfunction placeBox(box) {\n\t\t\t\t\tif (box.isHorizontal()) {\n\t\t\t\t\t\tbox.left = box.options.fullWidth ? leftPadding : totalLeftBoxesWidth;\n\t\t\t\t\t\tbox.right = box.options.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n\t\t\t\t\t\tbox.top = top;\n\t\t\t\t\t\tbox.bottom = top + box.height;\n\t\n\t\t\t\t\t\t// Move to next point\n\t\t\t\t\t\ttop = box.bottom;\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tbox.left = left;\n\t\t\t\t\t\tbox.right = left + box.width;\n\t\t\t\t\t\tbox.top = totalTopBoxesHeight;\n\t\t\t\t\t\tbox.bottom = totalTopBoxesHeight + maxChartAreaHeight;\n\t\n\t\t\t\t\t\t// Move to next point\n\t\t\t\t\t\tleft = box.right;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\thelpers.each(leftBoxes.concat(topBoxes), placeBox);\n\t\n\t\t\t\t// Account for chart width and height\n\t\t\t\tleft += maxChartAreaWidth;\n\t\t\t\ttop += maxChartAreaHeight;\n\t\n\t\t\t\thelpers.each(rightBoxes, placeBox);\n\t\t\t\thelpers.each(bottomBoxes, placeBox);\n\t\n\t\t\t\t// Step 8\n\t\t\t\tchartInstance.chartArea = {\n\t\t\t\t\tleft: totalLeftBoxesWidth,\n\t\t\t\t\ttop: totalTopBoxesHeight,\n\t\t\t\t\tright: totalLeftBoxesWidth + maxChartAreaWidth,\n\t\t\t\t\tbottom: totalTopBoxesHeight + maxChartAreaHeight\n\t\t\t\t};\n\t\n\t\t\t\t// Step 9\n\t\t\t\thelpers.each(chartAreaBoxes, function(box) {\n\t\t\t\t\tbox.left = chartInstance.chartArea.left;\n\t\t\t\t\tbox.top = chartInstance.chartArea.top;\n\t\t\t\t\tbox.right = chartInstance.chartArea.right;\n\t\t\t\t\tbox.bottom = chartInstance.chartArea.bottom;\n\t\n\t\t\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t};\n\n\n/***/ },\n/* 231 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function(Chart) {\n\t\n\t\tvar helpers = Chart.helpers;\n\t\tvar noop = helpers.noop;\n\t\n\t\tChart.defaults.global.legend = {\n\t\n\t\t\tdisplay: true,\n\t\t\tposition: 'top',\n\t\t\tfullWidth: true, // marks that this box should take the full width of the canvas (pushing down other boxes)\n\t\t\treverse: false,\n\t\n\t\t\t// a callback that will handle\n\t\t\tonClick: function(e, legendItem) {\n\t\t\t\tvar index = legendItem.datasetIndex;\n\t\t\t\tvar ci = this.chart;\n\t\t\t\tvar meta = ci.getDatasetMeta(index);\n\t\n\t\t\t\t// See controller.isDatasetVisible comment\n\t\t\t\tmeta.hidden = meta.hidden === null? !ci.data.datasets[index].hidden : null;\n\t\n\t\t\t\t// We hid a dataset ... rerender the chart\n\t\t\t\tci.update();\n\t\t\t},\n\t\n\t\t\tonHover: null,\n\t\n\t\t\tlabels: {\n\t\t\t\tboxWidth: 40,\n\t\t\t\tpadding: 10,\n\t\t\t\t// Generates labels shown in the legend\n\t\t\t\t// Valid properties to return:\n\t\t\t\t// text : text to display\n\t\t\t\t// fillStyle : fill of coloured box\n\t\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t\t// lineCap : cap style for line\n\t\t\t\t// lineDash\n\t\t\t\t// lineDashOffset :\n\t\t\t\t// lineJoin :\n\t\t\t\t// lineWidth :\n\t\t\t\tgenerateLabels: function(chart) {\n\t\t\t\t\tvar data = chart.data;\n\t\t\t\t\treturn helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\t\tfillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\t\n\t\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t}, this) : [];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Helper function to get the box width based on the usePointStyle option\n\t\t * @param labelopts {Object} the label options on the legend\n\t\t * @param fontSize {Number} the label font size\n\t\t * @return {Number} width of the color box area\n\t\t */\n\t\tfunction getBoxWidth(labelOpts, fontSize) {\n\t\t\treturn labelOpts.usePointStyle ?\n\t\t\t\tfontSize * Math.SQRT2 :\n\t\t\t\tlabelOpts.boxWidth;\n\t\t}\n\t\n\t\tChart.Legend = Chart.Element.extend({\n\t\n\t\t\tinitialize: function(config) {\n\t\t\t\thelpers.extend(this, config);\n\t\n\t\t\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\t\t\tthis.legendHitBoxes = [];\n\t\n\t\t\t\t// Are we in doughnut mode which has a different data type\n\t\t\t\tthis.doughnutMode = false;\n\t\t\t},\n\t\n\t\t\t// These methods are ordered by lifecycle. Utilities then follow.\n\t\t\t// Any function defined here is inherited by all legend types.\n\t\t\t// Any function can be extended by the legend type\n\t\n\t\t\tbeforeUpdate: noop,\n\t\t\tupdate: function(maxWidth, maxHeight, margins) {\n\t\t\t\tvar me = this;\n\t\n\t\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\t\t\tme.beforeUpdate();\n\t\n\t\t\t\t// Absorb the master measurements\n\t\t\t\tme.maxWidth = maxWidth;\n\t\t\t\tme.maxHeight = maxHeight;\n\t\t\t\tme.margins = margins;\n\t\n\t\t\t\t// Dimensions\n\t\t\t\tme.beforeSetDimensions();\n\t\t\t\tme.setDimensions();\n\t\t\t\tme.afterSetDimensions();\n\t\t\t\t// Labels\n\t\t\t\tme.beforeBuildLabels();\n\t\t\t\tme.buildLabels();\n\t\t\t\tme.afterBuildLabels();\n\t\n\t\t\t\t// Fit\n\t\t\t\tme.beforeFit();\n\t\t\t\tme.fit();\n\t\t\t\tme.afterFit();\n\t\t\t\t//\n\t\t\t\tme.afterUpdate();\n\t\n\t\t\t\treturn me.minSize;\n\t\t\t},\n\t\t\tafterUpdate: noop,\n\t\n\t\t\t//\n\t\n\t\t\tbeforeSetDimensions: noop,\n\t\t\tsetDimensions: function() {\n\t\t\t\tvar me = this;\n\t\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\t\tif (me.isHorizontal()) {\n\t\t\t\t\t// Reset position before calculating rotation\n\t\t\t\t\tme.width = me.maxWidth;\n\t\t\t\t\tme.left = 0;\n\t\t\t\t\tme.right = me.width;\n\t\t\t\t} else {\n\t\t\t\t\tme.height = me.maxHeight;\n\t\n\t\t\t\t\t// Reset position before calculating rotation\n\t\t\t\t\tme.top = 0;\n\t\t\t\t\tme.bottom = me.height;\n\t\t\t\t}\n\t\n\t\t\t\t// Reset padding\n\t\t\t\tme.paddingLeft = 0;\n\t\t\t\tme.paddingTop = 0;\n\t\t\t\tme.paddingRight = 0;\n\t\t\t\tme.paddingBottom = 0;\n\t\n\t\t\t\t// Reset minSize\n\t\t\t\tme.minSize = {\n\t\t\t\t\twidth: 0,\n\t\t\t\t\theight: 0\n\t\t\t\t};\n\t\t\t},\n\t\t\tafterSetDimensions: noop,\n\t\n\t\t\t//\n\t\n\t\t\tbeforeBuildLabels: noop,\n\t\t\tbuildLabels: function() {\n\t\t\t\tvar me = this;\n\t\t\t\tvar labelOpts = me.options.labels;\n\t\t\t\tvar legendItems = labelOpts.generateLabels.call(me, me.chart);\n\t\n\t\t\t\tif (labelOpts.filter) {\n\t\t\t\t\tlegendItems = legendItems.filter(function(item) {\n\t\t\t\t\t\treturn labelOpts.filter(item, me.chart.data);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\n\t\t\t\tif (me.options.reverse) {\n\t\t\t\t\tlegendItems.reverse();\n\t\t\t\t}\n\t\n\t\t\t\tme.legendItems = legendItems;\n\t\t\t},\n\t\t\tafterBuildLabels: noop,\n\t\n\t\t\t//\n\t\n\t\t\tbeforeFit: noop,\n\t\t\tfit: function() {\n\t\t\t\tvar me = this;\n\t\t\t\tvar opts = me.options;\n\t\t\t\tvar labelOpts = opts.labels;\n\t\t\t\tvar display = opts.display;\n\t\n\t\t\t\tvar ctx = me.ctx;\n\t\n\t\t\t\tvar globalDefault = Chart.defaults.global,\n\t\t\t\t\titemOrDefault = helpers.getValueOrDefault,\n\t\t\t\t\tfontSize = itemOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize),\n\t\t\t\t\tfontStyle = itemOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle),\n\t\t\t\t\tfontFamily = itemOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily),\n\t\t\t\t\tlabelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\n\t\t\t\t// Reset hit boxes\n\t\t\t\tvar hitboxes = me.legendHitBoxes = [];\n\t\n\t\t\t\tvar minSize = me.minSize;\n\t\t\t\tvar isHorizontal = me.isHorizontal();\n\t\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\t\t\tminSize.height = display ? 10 : 0;\n\t\t\t\t} else {\n\t\t\t\t\tminSize.width = display ? 10 : 0;\n\t\t\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t\t\t}\n\t\n\t\t\t\t// Increase sizes here\n\t\t\t\tif (display) {\n\t\t\t\t\tctx.font = labelFont;\n\t\n\t\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t\t// Labels\n\t\n\t\t\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\t\t\tvar totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\n\t\n\t\t\t\t\t\tctx.textAlign = 'left';\n\t\t\t\t\t\tctx.textBaseline = 'top';\n\t\n\t\t\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\t\n\t\t\t\t\t\t\tif (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n\t\t\t\t\t\t\t\ttotalHeight += fontSize + (labelOpts.padding);\n\t\t\t\t\t\t\t\tlineWidths[lineWidths.length] = me.left;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t\t\t};\n\t\n\t\t\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t\t\t});\n\t\n\t\t\t\t\t\tminSize.height += totalHeight;\n\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\t\t\tvar currentColWidth = 0;\n\t\t\t\t\t\tvar currentColHeight = 0;\n\t\t\t\t\t\tvar itemHeight = fontSize + vPadding;\n\t\n\t\t\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\t\n\t\t\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\t\t\tif (currentColHeight + itemHeight > minSize.height) {\n\t\t\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\t\n\t\t\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// Get max width\n\t\t\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\t\t\tcurrentColHeight += itemHeight;\n\t\n\t\t\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t});\n\t\n\t\t\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\t\t\tminSize.width += totalWidth;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tme.width = minSize.width;\n\t\t\t\tme.height = minSize.height;\n\t\t\t},\n\t\t\tafterFit: noop,\n\t\n\t\t\t// Shared Methods\n\t\t\tisHorizontal: function() {\n\t\t\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t\t\t},\n\t\n\t\t\t// Actually draw the legend on the canvas\n\t\t\tdraw: function() {\n\t\t\t\tvar me = this;\n\t\t\t\tvar opts = me.options;\n\t\t\t\tvar labelOpts = opts.labels;\n\t\t\t\tvar globalDefault = Chart.defaults.global,\n\t\t\t\t\tlineDefault = globalDefault.elements.line,\n\t\t\t\t\tlegendWidth = me.width,\n\t\t\t\t\tlineWidths = me.lineWidths;\n\t\n\t\t\t\tif (opts.display) {\n\t\t\t\t\tvar ctx = me.ctx,\n\t\t\t\t\t\tcursor,\n\t\t\t\t\t\titemOrDefault = helpers.getValueOrDefault,\n\t\t\t\t\t\tfontColor = itemOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor),\n\t\t\t\t\t\tfontSize = itemOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize),\n\t\t\t\t\t\tfontStyle = itemOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle),\n\t\t\t\t\t\tfontFamily = itemOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily),\n\t\t\t\t\t\tlabelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\n\t\t\t\t\t// Canvas setup\n\t\t\t\t\tctx.textAlign = 'left';\n\t\t\t\t\tctx.textBaseline = 'top';\n\t\t\t\t\tctx.lineWidth = 0.5;\n\t\t\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\t\t\tctx.font = labelFont;\n\t\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize),\n\t\t\t\t\t\thitboxes = me.legendHitBoxes;\n\t\n\t\t\t\t\t// current position\n\t\t\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Set the ctx for the box\n\t\t\t\t\t\tctx.save();\n\t\n\t\t\t\t\t\tctx.fillStyle = itemOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n\t\t\t\t\t\tctx.lineCap = itemOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\t\t\tctx.lineDashOffset = itemOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\t\t\tctx.lineJoin = itemOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\t\t\tctx.lineWidth = itemOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\t\t\tctx.strokeStyle = itemOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n\t\t\t\t\t\tvar isLineWidthZero = (itemOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\n\t\n\t\t\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\t\t\tctx.setLineDash(itemOrDefault(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\t\t\tvar radius = fontSize * Math.SQRT2 / 2;\n\t\t\t\t\t\t\tvar offSet = radius / Math.SQRT2;\n\t\t\t\t\t\t\tvar centerX = x + offSet;\n\t\t\t\t\t\t\tvar centerY = y + offSet;\n\t\n\t\t\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\t\t\tChart.canvasHelpers.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\t\t\tif (!isLineWidthZero) {\n\t\t\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t};\n\t\t\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\t\t\tctx.fillText(legendItem.text, boxWidth + (fontSize / 2) + x, y);\n\t\n\t\t\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\t\t\tctx.moveTo(boxWidth + (fontSize / 2) + x, y + (fontSize / 2));\n\t\t\t\t\t\t\tctx.lineTo(boxWidth + (fontSize / 2) + x + textWidth, y + (fontSize / 2));\n\t\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\n\t\t\t\t\t// Horizontal\n\t\t\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t\tcursor = {\n\t\t\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2),\n\t\t\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\t\t\tline: 0\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcursor = {\n\t\t\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\t\t\tline: 0\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width,\n\t\t\t\t\t\t\twidth = boxWidth + (fontSize / 2) + textWidth,\n\t\t\t\t\t\t\tx = cursor.x,\n\t\t\t\t\t\t\ty = cursor.y;\n\t\n\t\t\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t\t\tif (x + width >= legendWidth) {\n\t\t\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (y + itemHeight > me.bottom) {\n\t\t\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\n\t\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tdrawLegendBox(x, y, legendItem);\n\t\n\t\t\t\t\t\thitboxes[i].left = x;\n\t\t\t\t\t\thitboxes[i].top = y;\n\t\n\t\t\t\t\t\t// Fill the actual label\n\t\t\t\t\t\tfillText(x, y, legendItem, textWidth);\n\t\n\t\t\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t\t\tcursor.x += width + (labelOpts.padding);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * Handle an event\n\t\t\t * @private\n\t\t\t * @param {IEvent} event - The event to handle\n\t\t\t * @return {Boolean} true if a change occured\n\t\t\t */\n\t\t\thandleEvent: function(e) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar opts = me.options;\n\t\t\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\t\t\tvar changed = false;\n\t\n\t\t\t\tif (type === 'mousemove') {\n\t\t\t\t\tif (!opts.onHover) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else if (type === 'click') {\n\t\t\t\t\tif (!opts.onClick) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\t// Chart event already has relative position in it\n\t\t\t\tvar x = e.x,\n\t\t\t\t\ty = e.y;\n\t\n\t\t\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t\t\t// See if we are touching one of the dataset boxes\n\t\t\t\t\tvar lh = me.legendHitBoxes;\n\t\t\t\t\tfor (var i = 0; i < lh.length; ++i) {\n\t\t\t\t\t\tvar hitBox = lh[i];\n\t\n\t\t\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t\t\t// Touching an element\n\t\t\t\t\t\t\tif (type === 'click') {\n\t\t\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\t\t\topts.onClick.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t} else if (type === 'mousemove') {\n\t\t\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\t\t\topts.onHover.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn changed;\n\t\t\t}\n\t\t});\n\t\n\t\tfunction createNewLegendAndAttach(chartInstance, legendOpts) {\n\t\t\tvar legend = new Chart.Legend({\n\t\t\t\tctx: chartInstance.chart.ctx,\n\t\t\t\toptions: legendOpts,\n\t\t\t\tchart: chartInstance\n\t\t\t});\n\t\t\tchartInstance.legend = legend;\n\t\t\tChart.layoutService.addBox(chartInstance, legend);\n\t\t}\n\t\n\t\t// Register the legend plugin\n\t\tChart.plugins.register({\n\t\t\tbeforeInit: function(chartInstance) {\n\t\t\t\tvar legendOpts = chartInstance.options.legend;\n\t\n\t\t\t\tif (legendOpts) {\n\t\t\t\t\tcreateNewLegendAndAttach(chartInstance, legendOpts);\n\t\t\t\t}\n\t\t\t},\n\t\t\tbeforeUpdate: function(chartInstance) {\n\t\t\t\tvar legendOpts = chartInstance.options.legend;\n\t\n\t\t\t\tif (legendOpts) {\n\t\t\t\t\tlegendOpts = helpers.configMerge(Chart.defaults.global.legend, legendOpts);\n\t\n\t\t\t\t\tif (chartInstance.legend) {\n\t\t\t\t\t\tchartInstance.legend.options = legendOpts;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcreateNewLegendAndAttach(chartInstance, legendOpts);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tChart.layoutService.removeBox(chartInstance, chartInstance.legend);\n\t\t\t\t\tdelete chartInstance.legend;\n\t\t\t\t}\n\t\t\t},\n\t\t\tafterEvent: function(chartInstance, e) {\n\t\t\t\tvar legend = chartInstance.legend;\n\t\t\t\tif (legend) {\n\t\t\t\t\tlegend.handleEvent(e);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\n/***/ },\n/* 232 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function(Chart) {\n\t\n\t\tvar helpers = Chart.helpers;\n\t\n\t\tChart.defaults.global.plugins = {};\n\t\n\t\t/**\n\t\t * The plugin service singleton\n\t\t * @namespace Chart.plugins\n\t\t * @since 2.1.0\n\t\t */\n\t\tChart.plugins = {\n\t\t\t/**\n\t\t\t * Globally registered plugins.\n\t\t\t * @private\n\t\t\t */\n\t\t\t_plugins: [],\n\t\n\t\t\t/**\n\t\t\t * This identifier is used to invalidate the descriptors cache attached to each chart\n\t\t\t * when a global plugin is registered or unregistered. In this case, the cache ID is\n\t\t\t * incremented and descriptors are regenerated during following API calls.\n\t\t\t * @private\n\t\t\t */\n\t\t\t_cacheId: 0,\n\t\n\t\t\t/**\n\t\t\t * Registers the given plugin(s) if not already registered.\n\t\t\t * @param {Array|Object} plugins plugin instance(s).\n\t\t\t */\n\t\t\tregister: function(plugins) {\n\t\t\t\tvar p = this._plugins;\n\t\t\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\t\t\tp.push(plugin);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\t\t\tthis._cacheId++;\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * Unregisters the given plugin(s) only if registered.\n\t\t\t * @param {Array|Object} plugins plugin instance(s).\n\t\t\t */\n\t\t\tunregister: function(plugins) {\n\t\t\t\tvar p = this._plugins;\n\t\t\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\t\t\tvar idx = p.indexOf(plugin);\n\t\t\t\t\tif (idx !== -1) {\n\t\t\t\t\t\tp.splice(idx, 1);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\t\t\tthis._cacheId++;\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * Remove all registered plugins.\n\t\t\t * @since 2.1.5\n\t\t\t */\n\t\t\tclear: function() {\n\t\t\t\tthis._plugins = [];\n\t\t\t\tthis._cacheId++;\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * Returns the number of registered plugins?\n\t\t\t * @returns {Number}\n\t\t\t * @since 2.1.5\n\t\t\t */\n\t\t\tcount: function() {\n\t\t\t\treturn this._plugins.length;\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * Returns all registered plugin instances.\n\t\t\t * @returns {Array} array of plugin objects.\n\t\t\t * @since 2.1.5\n\t\t\t */\n\t\t\tgetAll: function() {\n\t\t\t\treturn this._plugins;\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t\t\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t\t\t * returned value can be used, for instance, to interrupt the current action.\n\t\t\t * @param {Object} chart - The chart instance for which plugins should be called.\n\t\t\t * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t\t\t * @param {Array} [args] - Extra arguments to apply to the hook call.\n\t\t\t * @returns {Boolean} false if any of the plugins return false, else returns true.\n\t\t\t */\n\t\t\tnotify: function(chart, hook, args) {\n\t\t\t\tvar descriptors = this.descriptors(chart);\n\t\t\t\tvar ilen = descriptors.length;\n\t\t\t\tvar i, descriptor, plugin, params, method;\n\t\n\t\t\t\tfor (i=0; i<ilen; ++i) {\n\t\t\t\t\tdescriptor = descriptors[i];\n\t\t\t\t\tplugin = descriptor.plugin;\n\t\t\t\t\tmethod = plugin[hook];\n\t\t\t\t\tif (typeof method === 'function') {\n\t\t\t\t\t\tparams = [chart].concat(args || []);\n\t\t\t\t\t\tparams.push(descriptor.options);\n\t\t\t\t\t\tif (method.apply(plugin, params) === false) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn true;\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * Returns descriptors of enabled plugins for the given chart.\n\t\t\t * @returns {Array} [{ plugin, options }]\n\t\t\t * @private\n\t\t\t */\n\t\t\tdescriptors: function(chart) {\n\t\t\t\tvar cache = chart._plugins || (chart._plugins = {});\n\t\t\t\tif (cache.id === this._cacheId) {\n\t\t\t\t\treturn cache.descriptors;\n\t\t\t\t}\n\t\n\t\t\t\tvar plugins = [];\n\t\t\t\tvar descriptors = [];\n\t\t\t\tvar config = (chart && chart.config) || {};\n\t\t\t\tvar defaults = Chart.defaults.global.plugins;\n\t\t\t\tvar options = (config.options && config.options.plugins) || {};\n\t\n\t\t\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\n\t\t\t\t\tvar idx = plugins.indexOf(plugin);\n\t\t\t\t\tif (idx !== -1) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar id = plugin.id;\n\t\t\t\t\tvar opts = options[id];\n\t\t\t\t\tif (opts === false) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (opts === true) {\n\t\t\t\t\t\topts = helpers.clone(defaults[id]);\n\t\t\t\t\t}\n\t\n\t\t\t\t\tplugins.push(plugin);\n\t\t\t\t\tdescriptors.push({\n\t\t\t\t\t\tplugin: plugin,\n\t\t\t\t\t\toptions: opts || {}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\n\t\t\t\tcache.descriptors = descriptors;\n\t\t\t\tcache.id = this._cacheId;\n\t\t\t\treturn descriptors;\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Plugin extension hooks.\n\t\t * @interface IPlugin\n\t\t * @since 2.1.0\n\t\t */\n\t\t/**\n\t\t * @method IPlugin#beforeInit\n\t\t * @desc Called before initializing `chart`.\n\t\t * @param {Chart.Controller} chart - The chart instance.\n\t\t * @param {Object} options - The plugin options.\n\t\t */\n\t\t/**\n\t\t * @method IPlugin#afterInit\n\t\t * @desc Called after `chart` has been initialized and before the first update.\n\t\t * @param {Chart.Controller} chart - The chart instance.\n\t\t * @param {Object} options - The plugin options.\n\t\t */\n\t\t/**\n\t\t * @method IPlugin#beforeUpdate\n\t\t * @desc Called before updating `chart`. If any plugin returns `false`, the update\n\t\t * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n\t\t * @param {Chart.Controller} chart - The chart instance.\n\t\t * @param {Object} options - The plugin options.\n\t\t * @returns {Boolean} `false` to cancel the chart update.\n\t\t */\n\t\t/**\n\t\t * @method IPlugin#afterUpdate\n\t\t * @desc Called after `chart` has been updated and before rendering. Note that this\n\t\t * hook will not be called if the chart update has been previously cancelled.\n\t\t * @param {Chart.Controller} chart - The chart instance.\n\t\t * @param {Object} options - The plugin options.\n\t\t */\n\t\t/**\n\t\t * @method IPlugin#beforeDatasetsUpdate\n\t \t * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n\t\t * the datasets update is cancelled until another `update` is triggered.\n\t\t * @param {Chart.Controller} chart - The chart instance.\n\t\t * @param {Object} options - The plugin options.\n\t\t * @returns {Boolean} false to cancel the datasets update.\n\t\t * @since version 2.1.5\n\t\t */\n\t\t/**\n\t\t * @method IPlugin#afterDatasetsUpdate\n\t\t * @desc Called after the `chart` datasets have been updated. Note that this hook\n\t\t * will not be called if the datasets update has been previously cancelled.\n\t\t * @param {Chart.Controller} chart - The chart instance.\n\t\t * @param {Object} options - The plugin options.\n\t\t * @since version 2.1.5\n\t\t */\n\t\t/**\n\t\t * @method IPlugin#beforeLayout\n\t\t * @desc Called before laying out `chart`. If any plugin returns `false`,\n\t\t * the layout update is cancelled until another `update` is triggered.\n\t\t * @param {Chart.Controller} chart - The chart instance.\n\t\t * @param {Object} options - The plugin options.\n\t\t * @returns {Boolean} `false` to cancel the chart layout.\n\t\t */\n\t\t/**\n\t\t * @method IPlugin#afterLayout\n\t\t * @desc Called after the `chart` has been layed out. Note that this hook will not\n\t\t * be called if the layout update has been previously cancelled.\n\t\t * @param {Chart.Controller} chart - The chart instance.\n\t\t * @param {Object} options - The plugin options.\n\t\t */\n\t\t/**\n\t\t * @method IPlugin#beforeRender\n\t\t * @desc Called before rendering `chart`. If any plugin returns `false`,\n\t\t * the rendering is cancelled until another `render` is triggered.\n\t\t * @param {Chart.Controller} chart - The chart instance.\n\t\t * @param {Object} options - The plugin options.\n\t\t * @returns {Boolean} `false` to cancel the chart rendering.\n\t\t */\n\t\t/**\n\t\t * @method IPlugin#afterRender\n\t\t * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n\t\t * that this hook will not be called if the rendering has been previously cancelled.\n\t\t * @param {Chart.Controller} chart - The chart instance.\n\t\t * @param {Object} options - The plugin options.\n\t\t */\n\t\t/**\n\t\t * @method IPlugin#beforeDraw\n\t\t * @desc Called before drawing `chart` at every animation frame specified by the given\n\t\t * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n\t\t * another `render` is triggered.\n\t\t * @param {Chart.Controller} chart - The chart instance.\n\t\t * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n\t\t * @param {Object} options - The plugin options.\n\t\t * @returns {Boolean} `false` to cancel the chart drawing.\n\t\t */\n\t\t/**\n\t\t * @method IPlugin#afterDraw\n\t\t * @desc Called after the `chart` has been drawn for the specific easing value. Note\n\t\t * that this hook will not be called if the drawing has been previously cancelled.\n\t\t * @param {Chart.Controller} chart - The chart instance.\n\t\t * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n\t\t * @param {Object} options - The plugin options.\n\t\t */\n\t\t/**\n\t\t * @method IPlugin#beforeDatasetsDraw\n\t \t * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n\t\t * the datasets drawing is cancelled until another `render` is triggered.\n\t\t * @param {Chart.Controller} chart - The chart instance.\n\t\t * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n\t\t * @param {Object} options - The plugin options.\n\t\t * @returns {Boolean} `false` to cancel the chart datasets drawing.\n\t\t */\n\t\t/**\n\t\t * @method IPlugin#afterDatasetsDraw\n\t\t * @desc Called after the `chart` datasets have been drawn. Note that this hook\n\t\t * will not be called if the datasets drawing has been previously cancelled.\n\t\t * @param {Chart.Controller} chart - The chart instance.\n\t\t * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n\t\t * @param {Object} options - The plugin options.\n\t\t */\n\t\t/**\n\t\t * @method IPlugin#beforeEvent\n\t \t * @desc Called before processing the specified `event`. If any plugin returns `false`,\n\t\t * the event will be discarded.\n\t\t * @param {Chart.Controller} chart - The chart instance.\n\t\t * @param {IEvent} event - The event object.\n\t\t * @param {Object} options - The plugin options.\n\t\t */\n\t\t/**\n\t\t * @method IPlugin#afterEvent\n\t\t * @desc Called after the `event` has been consumed. Note that this hook\n\t\t * will not be called if the `event` has been previously discarded.\n\t\t * @param {Chart.Controller} chart - The chart instance.\n\t\t * @param {IEvent} event - The event object.\n\t\t * @param {Object} options - The plugin options.\n\t\t */\n\t\t/**\n\t\t * @method IPlugin#resize\n\t\t * @desc Called after the chart as been resized.\n\t\t * @param {Chart.Controller} chart - The chart instance.\n\t\t * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n\t\t * @param {Object} options - The plugin options.\n\t\t */\n\t\t/**\n\t\t * @method IPlugin#destroy\n\t\t * @desc Called after the chart as been destroyed.\n\t\t * @param {Chart.Controller} chart - The chart instance.\n\t\t * @param {Object} options - The plugin options.\n\t\t */\n\t\n\t\t/**\n\t\t * Provided for backward compatibility, use Chart.plugins instead\n\t\t * @namespace Chart.pluginService\n\t\t * @deprecated since version 2.1.5\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tChart.pluginService = Chart.plugins;\n\t\n\t\t/**\n\t\t * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n\t\t * effect, instead simply create/register plugins via plain JavaScript objects.\n\t\t * @interface Chart.PluginBase\n\t\t * @deprecated since version 2.5.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tChart.PluginBase = helpers.inherits({});\n\t};\n\n\n/***/ },\n/* 233 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function(Chart) {\n\t\n\t\tvar helpers = Chart.helpers;\n\t\n\t\tChart.defaults.scale = {\n\t\t\tdisplay: true,\n\t\t\tposition: 'left',\n\t\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\tdisplay: true,\n\t\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\t\t\tlineWidth: 1,\n\t\t\t\tdrawBorder: true,\n\t\t\t\tdrawOnChartArea: true,\n\t\t\t\tdrawTicks: true,\n\t\t\t\ttickMarkLength: 10,\n\t\t\t\tzeroLineWidth: 1,\n\t\t\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\t\t\toffsetGridLines: false,\n\t\t\t\tborderDash: [],\n\t\t\t\tborderDashOffset: 0.0\n\t\t\t},\n\t\n\t\t\t// scale label\n\t\t\tscaleLabel: {\n\t\t\t\t// actual label\n\t\t\t\tlabelString: '',\n\t\n\t\t\t\t// display property\n\t\t\t\tdisplay: false\n\t\t\t},\n\t\n\t\t\t// label settings\n\t\t\tticks: {\n\t\t\t\tbeginAtZero: false,\n\t\t\t\tminRotation: 0,\n\t\t\t\tmaxRotation: 50,\n\t\t\t\tmirror: false,\n\t\t\t\tpadding: 0,\n\t\t\t\treverse: false,\n\t\t\t\tdisplay: true,\n\t\t\t\tautoSkip: true,\n\t\t\t\tautoSkipPadding: 0,\n\t\t\t\tlabelOffset: 0,\n\t\t\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\t\t\tcallback: Chart.Ticks.formatters.values\n\t\t\t}\n\t\t};\n\t\n\t\tfunction computeTextSize(context, tick, font) {\n\t\t\treturn helpers.isArray(tick) ?\n\t\t\t\thelpers.longestText(context, font, tick) :\n\t\t\t\tcontext.measureText(tick).width;\n\t\t}\n\t\n\t\tfunction parseFontOptions(options) {\n\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\n\t\t\tvar globalDefaults = Chart.defaults.global;\n\t\t\tvar size = getValueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n\t\t\tvar style = getValueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\tvar family = getValueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n\t\n\t\t\treturn {\n\t\t\t\tsize: size,\n\t\t\t\tstyle: style,\n\t\t\t\tfamily: family,\n\t\t\t\tfont: helpers.fontString(size, style, family)\n\t\t\t};\n\t\t}\n\t\n\t\tChart.Scale = Chart.Element.extend({\n\t\t\t/**\n\t\t\t * Get the padding needed for the scale\n\t\t\t * @method getPadding\n\t\t\t * @private\n\t\t\t * @returns {Padding} the necessary padding\n\t\t\t */\n\t\t\tgetPadding: function() {\n\t\t\t\tvar me = this;\n\t\t\t\treturn {\n\t\t\t\t\tleft: me.paddingLeft || 0,\n\t\t\t\t\ttop: me.paddingTop || 0,\n\t\t\t\t\tright: me.paddingRight || 0,\n\t\t\t\t\tbottom: me.paddingBottom || 0\n\t\t\t\t};\n\t\t\t},\n\t\n\t\t\t// These methods are ordered by lifecyle. Utilities then follow.\n\t\t\t// Any function defined here is inherited by all scale types.\n\t\t\t// Any function can be extended by the scale type\n\t\n\t\t\tbeforeUpdate: function() {\n\t\t\t\thelpers.callCallback(this.options.beforeUpdate, [this]);\n\t\t\t},\n\t\t\tupdate: function(maxWidth, maxHeight, margins) {\n\t\t\t\tvar me = this;\n\t\n\t\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\t\t\tme.beforeUpdate();\n\t\n\t\t\t\t// Absorb the master measurements\n\t\t\t\tme.maxWidth = maxWidth;\n\t\t\t\tme.maxHeight = maxHeight;\n\t\t\t\tme.margins = helpers.extend({\n\t\t\t\t\tleft: 0,\n\t\t\t\t\tright: 0,\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tbottom: 0\n\t\t\t\t}, margins);\n\t\t\t\tme.longestTextCache = me.longestTextCache || {};\n\t\n\t\t\t\t// Dimensions\n\t\t\t\tme.beforeSetDimensions();\n\t\t\t\tme.setDimensions();\n\t\t\t\tme.afterSetDimensions();\n\t\n\t\t\t\t// Data min/max\n\t\t\t\tme.beforeDataLimits();\n\t\t\t\tme.determineDataLimits();\n\t\t\t\tme.afterDataLimits();\n\t\n\t\t\t\t// Ticks\n\t\t\t\tme.beforeBuildTicks();\n\t\t\t\tme.buildTicks();\n\t\t\t\tme.afterBuildTicks();\n\t\n\t\t\t\tme.beforeTickToLabelConversion();\n\t\t\t\tme.convertTicksToLabels();\n\t\t\t\tme.afterTickToLabelConversion();\n\t\n\t\t\t\t// Tick Rotation\n\t\t\t\tme.beforeCalculateTickRotation();\n\t\t\t\tme.calculateTickRotation();\n\t\t\t\tme.afterCalculateTickRotation();\n\t\t\t\t// Fit\n\t\t\t\tme.beforeFit();\n\t\t\t\tme.fit();\n\t\t\t\tme.afterFit();\n\t\t\t\t//\n\t\t\t\tme.afterUpdate();\n\t\n\t\t\t\treturn me.minSize;\n\t\n\t\t\t},\n\t\t\tafterUpdate: function() {\n\t\t\t\thelpers.callCallback(this.options.afterUpdate, [this]);\n\t\t\t},\n\t\n\t\t\t//\n\t\n\t\t\tbeforeSetDimensions: function() {\n\t\t\t\thelpers.callCallback(this.options.beforeSetDimensions, [this]);\n\t\t\t},\n\t\t\tsetDimensions: function() {\n\t\t\t\tvar me = this;\n\t\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\t\tif (me.isHorizontal()) {\n\t\t\t\t\t// Reset position before calculating rotation\n\t\t\t\t\tme.width = me.maxWidth;\n\t\t\t\t\tme.left = 0;\n\t\t\t\t\tme.right = me.width;\n\t\t\t\t} else {\n\t\t\t\t\tme.height = me.maxHeight;\n\t\n\t\t\t\t\t// Reset position before calculating rotation\n\t\t\t\t\tme.top = 0;\n\t\t\t\t\tme.bottom = me.height;\n\t\t\t\t}\n\t\n\t\t\t\t// Reset padding\n\t\t\t\tme.paddingLeft = 0;\n\t\t\t\tme.paddingTop = 0;\n\t\t\t\tme.paddingRight = 0;\n\t\t\t\tme.paddingBottom = 0;\n\t\t\t},\n\t\t\tafterSetDimensions: function() {\n\t\t\t\thelpers.callCallback(this.options.afterSetDimensions, [this]);\n\t\t\t},\n\t\n\t\t\t// Data limits\n\t\t\tbeforeDataLimits: function() {\n\t\t\t\thelpers.callCallback(this.options.beforeDataLimits, [this]);\n\t\t\t},\n\t\t\tdetermineDataLimits: helpers.noop,\n\t\t\tafterDataLimits: function() {\n\t\t\t\thelpers.callCallback(this.options.afterDataLimits, [this]);\n\t\t\t},\n\t\n\t\t\t//\n\t\t\tbeforeBuildTicks: function() {\n\t\t\t\thelpers.callCallback(this.options.beforeBuildTicks, [this]);\n\t\t\t},\n\t\t\tbuildTicks: helpers.noop,\n\t\t\tafterBuildTicks: function() {\n\t\t\t\thelpers.callCallback(this.options.afterBuildTicks, [this]);\n\t\t\t},\n\t\n\t\t\tbeforeTickToLabelConversion: function() {\n\t\t\t\thelpers.callCallback(this.options.beforeTickToLabelConversion, [this]);\n\t\t\t},\n\t\t\tconvertTicksToLabels: function() {\n\t\t\t\tvar me = this;\n\t\t\t\t// Convert ticks to strings\n\t\t\t\tvar tickOpts = me.options.ticks;\n\t\t\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback);\n\t\t\t},\n\t\t\tafterTickToLabelConversion: function() {\n\t\t\t\thelpers.callCallback(this.options.afterTickToLabelConversion, [this]);\n\t\t\t},\n\t\n\t\t\t//\n\t\n\t\t\tbeforeCalculateTickRotation: function() {\n\t\t\t\thelpers.callCallback(this.options.beforeCalculateTickRotation, [this]);\n\t\t\t},\n\t\t\tcalculateTickRotation: function() {\n\t\t\t\tvar me = this;\n\t\t\t\tvar context = me.ctx;\n\t\t\t\tvar tickOpts = me.options.ticks;\n\t\n\t\t\t\t// Get the width of each grid by calculating the difference\n\t\t\t\t// between x offsets between 0 and 1.\n\t\t\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\t\t\tcontext.font = tickFont.font;\n\t\n\t\t\t\tvar labelRotation = tickOpts.minRotation || 0;\n\t\n\t\t\t\tif (me.options.display && me.isHorizontal()) {\n\t\t\t\t\tvar originalLabelWidth = helpers.longestText(context, tickFont.font, me.ticks, me.longestTextCache);\n\t\t\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\t\t\tvar cosRotation;\n\t\t\t\t\tvar sinRotation;\n\t\n\t\t\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\t\n\t\t\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n\t\t\t\t\t\tvar angleRadians = helpers.toRadians(labelRotation);\n\t\t\t\t\t\tcosRotation = Math.cos(angleRadians);\n\t\t\t\t\t\tsinRotation = Math.sin(angleRadians);\n\t\n\t\t\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t\t\t// go back one step\n\t\t\t\t\t\t\tlabelRotation--;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tlabelRotation++;\n\t\t\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tme.labelRotation = labelRotation;\n\t\t\t},\n\t\t\tafterCalculateTickRotation: function() {\n\t\t\t\thelpers.callCallback(this.options.afterCalculateTickRotation, [this]);\n\t\t\t},\n\t\n\t\t\t//\n\t\n\t\t\tbeforeFit: function() {\n\t\t\t\thelpers.callCallback(this.options.beforeFit, [this]);\n\t\t\t},\n\t\t\tfit: function() {\n\t\t\t\tvar me = this;\n\t\t\t\t// Reset\n\t\t\t\tvar minSize = me.minSize = {\n\t\t\t\t\twidth: 0,\n\t\t\t\t\theight: 0\n\t\t\t\t};\n\t\n\t\t\t\tvar opts = me.options;\n\t\t\t\tvar tickOpts = opts.ticks;\n\t\t\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\t\tvar display = opts.display;\n\t\t\t\tvar isHorizontal = me.isHorizontal();\n\t\n\t\t\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\t\t\tvar scaleLabelFontSize = parseFontOptions(scaleLabelOpts).size * 1.5;\n\t\t\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\t\n\t\t\t\t// Width\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t\t\t} else {\n\t\t\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t\t}\n\t\n\t\t\t\t// height\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t\t} else {\n\t\t\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t\t\t}\n\t\n\t\t\t\t// Are we showing a title for the scale?\n\t\t\t\tif (scaleLabelOpts.display && display) {\n\t\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t\tminSize.height += scaleLabelFontSize;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tminSize.width += scaleLabelFontSize;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Don't bother fitting the ticks if we are not showing them\n\t\t\t\tif (tickOpts.display && display) {\n\t\t\t\t\tvar largestTextWidth = helpers.longestText(me.ctx, tickFont.font, me.ticks, me.longestTextCache);\n\t\t\t\t\tvar tallestLabelHeightInLines = helpers.numberOfLabelLines(me.ticks);\n\t\t\t\t\tvar lineSpace = tickFont.size * 0.5;\n\t\n\t\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t\t// A horizontal axis is more constrained by the height.\n\t\t\t\t\t\tme.longestLabelWidth = largestTextWidth;\n\t\n\t\t\t\t\t\tvar angleRadians = helpers.toRadians(me.labelRotation);\n\t\t\t\t\t\tvar cosRotation = Math.cos(angleRadians);\n\t\t\t\t\t\tvar sinRotation = Math.sin(angleRadians);\n\t\n\t\t\t\t\t\t// TODO - improve this calculation\n\t\t\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\n\t\t\t\t\t\t\t+ (tickFont.size * tallestLabelHeightInLines)\n\t\t\t\t\t\t\t+ (lineSpace * tallestLabelHeightInLines);\n\t\n\t\t\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight);\n\t\t\t\t\t\tme.ctx.font = tickFont.font;\n\t\n\t\t\t\t\t\tvar firstTick = me.ticks[0];\n\t\t\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, firstTick, tickFont.font);\n\t\n\t\t\t\t\t\tvar lastTick = me.ticks[me.ticks.length - 1];\n\t\t\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, lastTick, tickFont.font);\n\t\n\t\t\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned which means that the right padding is dominated\n\t\t\t\t\t\t// by the font height\n\t\t\t\t\t\tif (me.labelRotation !== 0) {\n\t\t\t\t\t\t\tme.paddingLeft = opts.position === 'bottom'? (cosRotation * firstLabelWidth) + 3: (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\t\t\tme.paddingRight = opts.position === 'bottom'? (cosRotation * lineSpace) + 3: (cosRotation * lastLabelWidth) + 3;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tme.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\t\t\tme.paddingRight = lastLabelWidth / 2 + 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// A vertical axis is more constrained by the width. Labels are the dominant factor here, so get that length first\n\t\t\t\t\t\t// Account for padding\n\t\n\t\t\t\t\t\tif (tickOpts.mirror) {\n\t\t\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlargestTextWidth += me.options.ticks.padding;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tminSize.width += largestTextWidth;\n\t\t\t\t\t\tme.paddingTop = tickFont.size / 2;\n\t\t\t\t\t\tme.paddingBottom = tickFont.size / 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tme.handleMargins();\n\t\n\t\t\t\tme.width = minSize.width;\n\t\t\t\tme.height = minSize.height;\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * Handle margins and padding interactions\n\t\t\t * @private\n\t\t\t */\n\t\t\thandleMargins: function() {\n\t\t\t\tvar me = this;\n\t\t\t\tif (me.margins) {\n\t\t\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\tafterFit: function() {\n\t\t\t\thelpers.callCallback(this.options.afterFit, [this]);\n\t\t\t},\n\t\n\t\t\t// Shared Methods\n\t\t\tisHorizontal: function() {\n\t\t\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t\t\t},\n\t\t\tisFullWidth: function() {\n\t\t\t\treturn (this.options.fullWidth);\n\t\t\t},\n\t\n\t\t\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\t\t\tgetRightValue: function(rawValue) {\n\t\t\t\t// Null and undefined values first\n\t\t\t\tif (rawValue === null || typeof(rawValue) === 'undefined') {\n\t\t\t\t\treturn NaN;\n\t\t\t\t}\n\t\t\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\t\t\tif (typeof(rawValue) === 'number' && !isFinite(rawValue)) {\n\t\t\t\t\treturn NaN;\n\t\t\t\t}\n\t\t\t\t// If it is in fact an object, dive in one more level\n\t\t\t\tif (typeof(rawValue) === 'object') {\n\t\t\t\t\tif ((rawValue instanceof Date) || (rawValue.isValid)) {\n\t\t\t\t\t\treturn rawValue;\n\t\t\t\t\t}\n\t\t\t\t\treturn this.getRightValue(this.isHorizontal() ? rawValue.x : rawValue.y);\n\t\t\t\t}\n\t\n\t\t\t\t// Value is good, return it\n\t\t\t\treturn rawValue;\n\t\t\t},\n\t\n\t\t\t// Used to get the value to display in the tooltip for the data at the given index\n\t\t\t// function getLabelForIndex(index, datasetIndex)\n\t\t\tgetLabelForIndex: helpers.noop,\n\t\n\t\t\t// Used to get data value locations.  Value can either be an index or a numerical value\n\t\t\tgetPixelForValue: helpers.noop,\n\t\n\t\t\t// Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t\t\tgetValueForPixel: helpers.noop,\n\t\n\t\t\t// Used for tick location, should\n\t\t\tgetPixelForTick: function(index, includeOffset) {\n\t\t\t\tvar me = this;\n\t\t\t\tif (me.isHorizontal()) {\n\t\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\t\tvar tickWidth = innerWidth / Math.max((me.ticks.length - ((me.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\n\t\t\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\t\n\t\t\t\t\tif (includeOffset) {\n\t\t\t\t\t\tpixel += tickWidth / 2;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar finalVal = me.left + Math.round(pixel);\n\t\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\t\treturn finalVal;\n\t\t\t\t}\n\t\t\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\t\t\treturn me.top + (index * (innerHeight / (me.ticks.length - 1)));\n\t\t\t},\n\t\n\t\t\t// Utility for getting the pixel location of a percentage of scale\n\t\t\tgetPixelForDecimal: function(decimal /* , includeOffset*/) {\n\t\t\t\tvar me = this;\n\t\t\t\tif (me.isHorizontal()) {\n\t\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\t\n\t\t\t\t\tvar finalVal = me.left + Math.round(valueOffset);\n\t\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\t\treturn finalVal;\n\t\t\t\t}\n\t\t\t\treturn me.top + (decimal * me.height);\n\t\t\t},\n\t\n\t\t\tgetBasePixel: function() {\n\t\t\t\treturn this.getPixelForValue(this.getBaseValue());\n\t\t\t},\n\t\n\t\t\tgetBaseValue: function() {\n\t\t\t\tvar me = this;\n\t\t\t\tvar min = me.min;\n\t\t\t\tvar max = me.max;\n\t\n\t\t\t\treturn me.beginAtZero ? 0:\n\t\t\t\t\tmin < 0 && max < 0? max :\n\t\t\t\t\tmin > 0 && max > 0? min :\n\t\t\t\t\t0;\n\t\t\t},\n\t\n\t\t\t// Actually draw the scale on the canvas\n\t\t\t// @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n\t\t\tdraw: function(chartArea) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar options = me.options;\n\t\t\t\tif (!options.display) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tvar context = me.ctx;\n\t\t\t\tvar globalDefaults = Chart.defaults.global;\n\t\t\t\tvar optionTicks = options.ticks;\n\t\t\t\tvar gridLines = options.gridLines;\n\t\t\t\tvar scaleLabel = options.scaleLabel;\n\t\n\t\t\t\tvar isRotated = me.labelRotation !== 0;\n\t\t\t\tvar skipRatio;\n\t\t\t\tvar useAutoskipper = optionTicks.autoSkip;\n\t\t\t\tvar isHorizontal = me.isHorizontal();\n\t\n\t\t\t\t// figure out the maximum number of gridlines to show\n\t\t\t\tvar maxTicks;\n\t\t\t\tif (optionTicks.maxTicksLimit) {\n\t\t\t\t\tmaxTicks = optionTicks.maxTicksLimit;\n\t\t\t\t}\n\t\n\t\t\t\tvar tickFontColor = helpers.getValueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n\t\t\t\tvar tickFont = parseFontOptions(optionTicks);\n\t\n\t\t\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n\t\t\t\tvar borderDash = helpers.getValueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n\t\t\t\tvar borderDashOffset = helpers.getValueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n\t\n\t\t\t\tvar scaleLabelFontColor = helpers.getValueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n\t\t\t\tvar scaleLabelFont = parseFontOptions(scaleLabel);\n\t\n\t\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\t\t\t\tvar cosRotation = Math.cos(labelRotationRadians);\n\t\t\t\tvar longestRotatedLabel = me.longestLabelWidth * cosRotation;\n\t\n\t\t\t\t// Make sure we draw text in the correct color and font\n\t\t\t\tcontext.fillStyle = tickFontColor;\n\t\n\t\t\t\tvar itemsToDraw = [];\n\t\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tskipRatio = false;\n\t\n\t\t\t\t\t// Only calculate the skip ratio with the half width of longestRotateLabel if we got an actual rotation\n\t\t\t\t\t// See #2584\n\t\t\t\t\tif (isRotated) {\n\t\t\t\t\t\tlongestRotatedLabel /= 2;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ((longestRotatedLabel + optionTicks.autoSkipPadding) * me.ticks.length > (me.width - (me.paddingLeft + me.paddingRight))) {\n\t\t\t\t\t\tskipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * me.ticks.length) / (me.width - (me.paddingLeft + me.paddingRight)));\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// if they defined a max number of optionTicks,\n\t\t\t\t\t// increase skipRatio until that number is met\n\t\t\t\t\tif (maxTicks && me.ticks.length > maxTicks) {\n\t\t\t\t\t\twhile (!skipRatio || me.ticks.length / (skipRatio || 1) > maxTicks) {\n\t\t\t\t\t\t\tif (!skipRatio) {\n\t\t\t\t\t\t\t\tskipRatio = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tskipRatio += 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (!useAutoskipper) {\n\t\t\t\t\t\tskipRatio = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\n\t\t\t\tvar xTickStart = options.position === 'right' ? me.left : me.right - tl;\n\t\t\t\tvar xTickEnd = options.position === 'right' ? me.left + tl : me.right;\n\t\t\t\tvar yTickStart = options.position === 'bottom' ? me.top : me.bottom - tl;\n\t\t\t\tvar yTickEnd = options.position === 'bottom' ? me.top + tl : me.bottom;\n\t\n\t\t\t\thelpers.each(me.ticks, function(label, index) {\n\t\t\t\t\t// If the callback returned a null or undefined value, do not draw this line\n\t\t\t\t\tif (label === undefined || label === null) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar isLastTick = me.ticks.length === index + 1;\n\t\n\t\t\t\t\t// Since we always show the last tick,we need may need to hide the last shown one before\n\t\t\t\t\tvar shouldSkip = (skipRatio > 1 && index % skipRatio > 0) || (index % skipRatio === 0 && index + skipRatio >= me.ticks.length);\n\t\t\t\t\tif (shouldSkip && !isLastTick || (label === undefined || label === null)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar lineWidth, lineColor;\n\t\t\t\t\tif (index === (typeof me.zeroLineIndex !== 'undefined' ? me.zeroLineIndex : 0)) {\n\t\t\t\t\t\t// Draw the first index specially\n\t\t\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlineWidth = helpers.getValueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\t\t\tlineColor = helpers.getValueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Common properties\n\t\t\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n\t\t\t\t\tvar textAlign = 'middle';\n\t\t\t\t\tvar textBaseline = 'middle';\n\t\n\t\t\t\t\tif (isHorizontal) {\n\t\n\t\t\t\t\t\tif (options.position === 'bottom') {\n\t\t\t\t\t\t\t// bottom\n\t\t\t\t\t\t\ttextBaseline = !isRotated? 'top':'middle';\n\t\t\t\t\t\t\ttextAlign = !isRotated? 'center': 'right';\n\t\t\t\t\t\t\tlabelY = me.top + tl;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// top\n\t\t\t\t\t\t\ttextBaseline = !isRotated? 'bottom':'middle';\n\t\t\t\t\t\t\ttextAlign = !isRotated? 'center': 'left';\n\t\t\t\t\t\t\tlabelY = me.bottom - tl;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tvar xLineValue = me.getPixelForTick(index) + helpers.aliasPixel(lineWidth); // xvalues for grid lines\n\t\t\t\t\t\tlabelX = me.getPixelForTick(index, gridLines.offsetGridLines) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\t\n\t\t\t\t\t\ttx1 = tx2 = x1 = x2 = xLineValue;\n\t\t\t\t\t\tty1 = yTickStart;\n\t\t\t\t\t\tty2 = yTickEnd;\n\t\t\t\t\t\ty1 = chartArea.top;\n\t\t\t\t\t\ty2 = chartArea.bottom;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\t\tvar tickPadding = optionTicks.padding;\n\t\t\t\t\t\tvar labelXOffset;\n\t\n\t\t\t\t\t\tif (optionTicks.mirror) {\n\t\t\t\t\t\t\ttextAlign = isLeft ? 'left' : 'right';\n\t\t\t\t\t\t\tlabelXOffset = tickPadding;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttextAlign = isLeft ? 'right' : 'left';\n\t\t\t\t\t\t\tlabelXOffset = tl + tickPadding;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tlabelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n\t\n\t\t\t\t\t\tvar yLineValue = me.getPixelForTick(index); // xvalues for grid lines\n\t\t\t\t\t\tyLineValue += helpers.aliasPixel(lineWidth);\n\t\t\t\t\t\tlabelY = me.getPixelForTick(index, gridLines.offsetGridLines);\n\t\n\t\t\t\t\t\ttx1 = xTickStart;\n\t\t\t\t\t\ttx2 = xTickEnd;\n\t\t\t\t\t\tx1 = chartArea.left;\n\t\t\t\t\t\tx2 = chartArea.right;\n\t\t\t\t\t\tty1 = ty2 = y1 = y2 = yLineValue;\n\t\t\t\t\t}\n\t\n\t\t\t\t\titemsToDraw.push({\n\t\t\t\t\t\ttx1: tx1,\n\t\t\t\t\t\tty1: ty1,\n\t\t\t\t\t\ttx2: tx2,\n\t\t\t\t\t\tty2: ty2,\n\t\t\t\t\t\tx1: x1,\n\t\t\t\t\t\ty1: y1,\n\t\t\t\t\t\tx2: x2,\n\t\t\t\t\t\ty2: y2,\n\t\t\t\t\t\tlabelX: labelX,\n\t\t\t\t\t\tlabelY: labelY,\n\t\t\t\t\t\tglWidth: lineWidth,\n\t\t\t\t\t\tglColor: lineColor,\n\t\t\t\t\t\tglBorderDash: borderDash,\n\t\t\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\t\t\tlabel: label,\n\t\t\t\t\t\ttextBaseline: textBaseline,\n\t\t\t\t\t\ttextAlign: textAlign\n\t\t\t\t\t});\n\t\t\t\t});\n\t\n\t\t\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\t\t\thelpers.each(itemsToDraw, function(itemToDraw) {\n\t\t\t\t\tif (gridLines.display) {\n\t\t\t\t\t\tcontext.save();\n\t\t\t\t\t\tcontext.lineWidth = itemToDraw.glWidth;\n\t\t\t\t\t\tcontext.strokeStyle = itemToDraw.glColor;\n\t\t\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tcontext.beginPath();\n\t\n\t\t\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tcontext.stroke();\n\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (optionTicks.display) {\n\t\t\t\t\t\tcontext.save();\n\t\t\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\t\t\tcontext.font = tickFont.font;\n\t\t\t\t\t\tcontext.textBaseline = itemToDraw.textBaseline;\n\t\t\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\t\n\t\t\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\t\t\tif (helpers.isArray(label)) {\n\t\t\t\t\t\t\tfor (var i = 0, y = 0; i < label.length; ++i) {\n\t\t\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\t\t\t// apply same lineSpacing as calculated @ L#320\n\t\t\t\t\t\t\t\ty += (tickFont.size * 1.5);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcontext.fillText(label, 0, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\t\t\tif (scaleLabel.display) {\n\t\t\t\t\t// Draw the scale label\n\t\t\t\t\tvar scaleLabelX;\n\t\t\t\t\tvar scaleLabelY;\n\t\t\t\t\tvar rotation = 0;\n\t\n\t\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\t\t\tscaleLabelY = options.position === 'bottom' ? me.bottom - (scaleLabelFont.size / 2) : me.top + (scaleLabelFont.size / 2);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\t\tscaleLabelX = isLeft ? me.left + (scaleLabelFont.size / 2) : me.right - (scaleLabelFont.size / 2);\n\t\t\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\t\t\tcontext.rotate(rotation);\n\t\t\t\t\tcontext.textAlign = 'center';\n\t\t\t\t\tcontext.textBaseline = 'middle';\n\t\t\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\t\t\tcontext.font = scaleLabelFont.font;\n\t\t\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\t\n\t\t\t\tif (gridLines.drawBorder) {\n\t\t\t\t\t// Draw the line at the edge of the axis\n\t\t\t\t\tcontext.lineWidth = helpers.getValueAtIndexOrDefault(gridLines.lineWidth, 0);\n\t\t\t\t\tcontext.strokeStyle = helpers.getValueAtIndexOrDefault(gridLines.color, 0);\n\t\t\t\t\tvar x1 = me.left,\n\t\t\t\t\t\tx2 = me.right,\n\t\t\t\t\t\ty1 = me.top,\n\t\t\t\t\t\ty2 = me.bottom;\n\t\n\t\t\t\t\tvar aliasPixel = helpers.aliasPixel(context.lineWidth);\n\t\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t\ty1 = y2 = options.position === 'top' ? me.bottom : me.top;\n\t\t\t\t\t\ty1 += aliasPixel;\n\t\t\t\t\t\ty2 += aliasPixel;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tx1 = x2 = options.position === 'left' ? me.right : me.left;\n\t\t\t\t\t\tx1 += aliasPixel;\n\t\t\t\t\t\tx2 += aliasPixel;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tcontext.beginPath();\n\t\t\t\t\tcontext.moveTo(x1, y1);\n\t\t\t\t\tcontext.lineTo(x2, y2);\n\t\t\t\t\tcontext.stroke();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\n/***/ },\n/* 234 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function(Chart) {\n\t\n\t\tvar helpers = Chart.helpers;\n\t\n\t\tChart.scaleService = {\n\t\t\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t\t\t// use the new chart options to grab the correct scale\n\t\t\tconstructors: {},\n\t\t\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t\t\t// old browsers\n\t\n\t\t\t// Scale config defaults\n\t\t\tdefaults: {},\n\t\t\tregisterScaleType: function(type, scaleConstructor, defaults) {\n\t\t\t\tthis.constructors[type] = scaleConstructor;\n\t\t\t\tthis.defaults[type] = helpers.clone(defaults);\n\t\t\t},\n\t\t\tgetScaleConstructor: function(type) {\n\t\t\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t\t\t},\n\t\t\tgetScaleDefaults: function(type) {\n\t\t\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\t\t\treturn this.defaults.hasOwnProperty(type) ? helpers.scaleMerge(Chart.defaults.scale, this.defaults[type]) : {};\n\t\t\t},\n\t\t\tupdateScaleDefaults: function(type, additions) {\n\t\t\t\tvar defaults = this.defaults;\n\t\t\t\tif (defaults.hasOwnProperty(type)) {\n\t\t\t\t\tdefaults[type] = helpers.extend(defaults[type], additions);\n\t\t\t\t}\n\t\t\t},\n\t\t\taddScalesToLayout: function(chartInstance) {\n\t\t\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\t\t\thelpers.each(chartInstance.scales, function(scale) {\n\t\t\t\t\tChart.layoutService.addBox(chartInstance, scale);\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t};\n\n\n/***/ },\n/* 235 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function(Chart) {\n\t\n\t\tvar helpers = Chart.helpers;\n\t\n\t\t/**\n\t\t * Namespace to hold static tick generation functions\n\t\t * @namespace Chart.Ticks\n\t\t */\n\t\tChart.Ticks = {\n\t\t\t/**\n\t\t\t * Namespace to hold generators for different types of ticks\n\t\t\t * @namespace Chart.Ticks.generators\n\t\t\t */\n\t\t\tgenerators: {\n\t\t\t\t/**\n\t\t\t\t * Interface for the options provided to the numeric tick generator\n\t\t\t\t * @interface INumericTickGenerationOptions\n\t\t\t\t */\n\t\t\t\t/**\n\t\t\t\t * The maximum number of ticks to display\n\t\t\t\t * @name INumericTickGenerationOptions#maxTicks\n\t\t\t\t * @type Number\n\t\t\t\t */\n\t\t\t\t/**\n\t\t\t\t * The distance between each tick.\n\t\t\t\t * @name INumericTickGenerationOptions#stepSize\n\t\t\t\t * @type Number\n\t\t\t\t * @optional\n\t\t\t\t */\n\t\t\t\t/**\n\t\t\t\t * Forced minimum for the ticks. If not specified, the minimum of the data range is used to calculate the tick minimum\n\t\t\t\t * @name INumericTickGenerationOptions#min\n\t\t\t\t * @type Number\n\t\t\t\t * @optional\n\t\t\t\t */\n\t\t\t\t/**\n\t\t\t\t * The maximum value of the ticks. If not specified, the maximum of the data range is used to calculate the tick maximum\n\t\t\t\t * @name INumericTickGenerationOptions#max\n\t\t\t\t * @type Number\n\t\t\t\t * @optional\n\t\t\t\t */\n\t\n\t\t\t\t/**\n\t\t\t\t * Generate a set of linear ticks\n\t\t\t\t * @method Chart.Ticks.generators.linear\n\t\t\t\t * @param generationOptions {INumericTickGenerationOptions} the options used to generate the ticks\n\t\t\t\t * @param dataRange {IRange} the range of the data\n\t\t\t\t * @returns {Array<Number>} array of tick values\n\t\t\t\t */\n\t\t\t\tlinear: function(generationOptions, dataRange) {\n\t\t\t\t\tvar ticks = [];\n\t\t\t\t\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t\t\t\t\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t\t\t\t\t// for details.\n\t\n\t\t\t\t\tvar spacing;\n\t\t\t\t\tif (generationOptions.stepSize && generationOptions.stepSize > 0) {\n\t\t\t\t\t\tspacing = generationOptions.stepSize;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n\t\t\t\t\t\tspacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n\t\t\t\t\t}\n\t\t\t\t\tvar niceMin = Math.floor(dataRange.min / spacing) * spacing;\n\t\t\t\t\tvar niceMax = Math.ceil(dataRange.max / spacing) * spacing;\n\t\n\t\t\t\t\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\t\t\t\t\tif (generationOptions.min && generationOptions.max && generationOptions.stepSize) {\n\t\t\t\t\t\t// If very close to our whole number, use it.\n\t\t\t\t\t\tif (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n\t\t\t\t\t\t\tniceMin = generationOptions.min;\n\t\t\t\t\t\t\tniceMax = generationOptions.max;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar numSpaces = (niceMax - niceMin) / spacing;\n\t\t\t\t\t// If very close to our rounded value, use it.\n\t\t\t\t\tif (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\t\t\t\t\tnumSpaces = Math.round(numSpaces);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnumSpaces = Math.ceil(numSpaces);\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Put the values into the ticks array\n\t\t\t\t\tticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\t\t\t\t\tfor (var j = 1; j < numSpaces; ++j) {\n\t\t\t\t\t\tticks.push(niceMin + (j * spacing));\n\t\t\t\t\t}\n\t\t\t\t\tticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n\t\n\t\t\t\t\treturn ticks;\n\t\t\t\t},\n\t\n\t\t\t\t/**\n\t\t\t\t * Generate a set of logarithmic ticks\n\t\t\t\t * @method Chart.Ticks.generators.logarithmic\n\t\t\t\t * @param generationOptions {INumericTickGenerationOptions} the options used to generate the ticks\n\t\t\t\t * @param dataRange {IRange} the range of the data\n\t\t\t\t * @returns {Array<Number>} array of tick values\n\t\t\t\t */\n\t\t\t\tlogarithmic: function(generationOptions, dataRange) {\n\t\t\t\t\tvar ticks = [];\n\t\t\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\n\t\n\t\t\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t\t\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t\t\t\t// the graph\n\t\t\t\t\tvar tickVal = getValueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n\t\n\t\t\t\t\tvar endExp = Math.floor(helpers.log10(dataRange.max));\n\t\t\t\t\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n\t\t\t\t\tvar exp;\n\t\t\t\t\tvar significand;\n\t\n\t\t\t\t\tif (tickVal === 0) {\n\t\t\t\t\t\texp = Math.floor(helpers.log10(dataRange.minNotZero));\n\t\t\t\t\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n\t\n\t\t\t\t\t\tticks.push(tickVal);\n\t\t\t\t\t\ttickVal = significand * Math.pow(10, exp);\n\t\t\t\t\t} else {\n\t\t\t\t\t\texp = Math.floor(helpers.log10(tickVal));\n\t\t\t\t\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\n\t\t\t\t\t}\n\t\n\t\t\t\t\tdo {\n\t\t\t\t\t\tticks.push(tickVal);\n\t\n\t\t\t\t\t\t++significand;\n\t\t\t\t\t\tif (significand === 10) {\n\t\t\t\t\t\t\tsignificand = 1;\n\t\t\t\t\t\t\t++exp;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\ttickVal = significand * Math.pow(10, exp);\n\t\t\t\t\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\n\t\n\t\t\t\t\tvar lastTick = getValueOrDefault(generationOptions.max, tickVal);\n\t\t\t\t\tticks.push(lastTick);\n\t\n\t\t\t\t\treturn ticks;\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * Namespace to hold formatters for different types of ticks\n\t\t\t * @namespace Chart.Ticks.formatters\n\t\t\t */\n\t\t\tformatters: {\n\t\t\t\t/**\n\t\t\t\t * Formatter for value labels\n\t\t\t\t * @method Chart.Ticks.formatters.values\n\t\t\t\t * @param value the value to display\n\t\t\t\t * @return {String|Array} the label to display\n\t\t\t\t */\n\t\t\t\tvalues: function(value) {\n\t\t\t\t\treturn helpers.isArray(value) ? value : '' + value;\n\t\t\t\t},\n\t\n\t\t\t\t/**\n\t\t\t\t * Formatter for linear numeric ticks\n\t\t\t\t * @method Chart.Ticks.formatters.linear\n\t\t\t\t * @param tickValue {Number} the value to be formatted\n\t\t\t\t * @param index {Number} the position of the tickValue parameter in the ticks array\n\t\t\t\t * @param ticks {Array<Number>} the list of ticks being converted\n\t\t\t\t * @return {String} string representation of the tickValue parameter\n\t\t\t\t */\n\t\t\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\t\n\t\t\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t\t\t// not an integer\n\t\t\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar logDelta = helpers.log10(Math.abs(delta));\n\t\t\t\t\tvar tickString = '';\n\t\n\t\t\t\t\tif (tickValue !== 0) {\n\t\t\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn tickString;\n\t\t\t\t},\n\t\n\t\t\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\n\t\n\t\t\t\t\tif (tickValue === 0) {\n\t\t\t\t\t\treturn '0';\n\t\t\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\t\t\treturn tickValue.toExponential();\n\t\t\t\t\t}\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t};\n\n\n/***/ },\n/* 236 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function(Chart) {\n\t\n\t\tvar helpers = Chart.helpers;\n\t\n\t\tChart.defaults.global.title = {\n\t\t\tdisplay: false,\n\t\t\tposition: 'top',\n\t\t\tfullWidth: true, // marks that this box should take the full width of the canvas (pushing down other boxes)\n\t\n\t\t\tfontStyle: 'bold',\n\t\t\tpadding: 10,\n\t\n\t\t\t// actual title\n\t\t\ttext: ''\n\t\t};\n\t\n\t\tvar noop = helpers.noop;\n\t\tChart.Title = Chart.Element.extend({\n\t\n\t\t\tinitialize: function(config) {\n\t\t\t\tvar me = this;\n\t\t\t\thelpers.extend(me, config);\n\t\n\t\t\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\t\t\tme.legendHitBoxes = [];\n\t\t\t},\n\t\n\t\t\t// These methods are ordered by lifecycle. Utilities then follow.\n\t\n\t\t\tbeforeUpdate: noop,\n\t\t\tupdate: function(maxWidth, maxHeight, margins) {\n\t\t\t\tvar me = this;\n\t\n\t\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\t\t\tme.beforeUpdate();\n\t\n\t\t\t\t// Absorb the master measurements\n\t\t\t\tme.maxWidth = maxWidth;\n\t\t\t\tme.maxHeight = maxHeight;\n\t\t\t\tme.margins = margins;\n\t\n\t\t\t\t// Dimensions\n\t\t\t\tme.beforeSetDimensions();\n\t\t\t\tme.setDimensions();\n\t\t\t\tme.afterSetDimensions();\n\t\t\t\t// Labels\n\t\t\t\tme.beforeBuildLabels();\n\t\t\t\tme.buildLabels();\n\t\t\t\tme.afterBuildLabels();\n\t\n\t\t\t\t// Fit\n\t\t\t\tme.beforeFit();\n\t\t\t\tme.fit();\n\t\t\t\tme.afterFit();\n\t\t\t\t//\n\t\t\t\tme.afterUpdate();\n\t\n\t\t\t\treturn me.minSize;\n\t\n\t\t\t},\n\t\t\tafterUpdate: noop,\n\t\n\t\t\t//\n\t\n\t\t\tbeforeSetDimensions: noop,\n\t\t\tsetDimensions: function() {\n\t\t\t\tvar me = this;\n\t\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\t\tif (me.isHorizontal()) {\n\t\t\t\t\t// Reset position before calculating rotation\n\t\t\t\t\tme.width = me.maxWidth;\n\t\t\t\t\tme.left = 0;\n\t\t\t\t\tme.right = me.width;\n\t\t\t\t} else {\n\t\t\t\t\tme.height = me.maxHeight;\n\t\n\t\t\t\t\t// Reset position before calculating rotation\n\t\t\t\t\tme.top = 0;\n\t\t\t\t\tme.bottom = me.height;\n\t\t\t\t}\n\t\n\t\t\t\t// Reset padding\n\t\t\t\tme.paddingLeft = 0;\n\t\t\t\tme.paddingTop = 0;\n\t\t\t\tme.paddingRight = 0;\n\t\t\t\tme.paddingBottom = 0;\n\t\n\t\t\t\t// Reset minSize\n\t\t\t\tme.minSize = {\n\t\t\t\t\twidth: 0,\n\t\t\t\t\theight: 0\n\t\t\t\t};\n\t\t\t},\n\t\t\tafterSetDimensions: noop,\n\t\n\t\t\t//\n\t\n\t\t\tbeforeBuildLabels: noop,\n\t\t\tbuildLabels: noop,\n\t\t\tafterBuildLabels: noop,\n\t\n\t\t\t//\n\t\n\t\t\tbeforeFit: noop,\n\t\t\tfit: function() {\n\t\t\t\tvar me = this,\n\t\t\t\t\tvalueOrDefault = helpers.getValueOrDefault,\n\t\t\t\t\topts = me.options,\n\t\t\t\t\tglobalDefaults = Chart.defaults.global,\n\t\t\t\t\tdisplay = opts.display,\n\t\t\t\t\tfontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize),\n\t\t\t\t\tminSize = me.minSize;\n\t\n\t\t\t\tif (me.isHorizontal()) {\n\t\t\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\t\t\tminSize.height = display ? fontSize + (opts.padding * 2) : 0;\n\t\t\t\t} else {\n\t\t\t\t\tminSize.width = display ? fontSize + (opts.padding * 2) : 0;\n\t\t\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t\t\t}\n\t\n\t\t\t\tme.width = minSize.width;\n\t\t\t\tme.height = minSize.height;\n\t\n\t\t\t},\n\t\t\tafterFit: noop,\n\t\n\t\t\t// Shared Methods\n\t\t\tisHorizontal: function() {\n\t\t\t\tvar pos = this.options.position;\n\t\t\t\treturn pos === 'top' || pos === 'bottom';\n\t\t\t},\n\t\n\t\t\t// Actually draw the title block on the canvas\n\t\t\tdraw: function() {\n\t\t\t\tvar me = this,\n\t\t\t\t\tctx = me.ctx,\n\t\t\t\t\tvalueOrDefault = helpers.getValueOrDefault,\n\t\t\t\t\topts = me.options,\n\t\t\t\t\tglobalDefaults = Chart.defaults.global;\n\t\n\t\t\t\tif (opts.display) {\n\t\t\t\t\tvar fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize),\n\t\t\t\t\t\tfontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle),\n\t\t\t\t\t\tfontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily),\n\t\t\t\t\t\ttitleFont = helpers.fontString(fontSize, fontStyle, fontFamily),\n\t\t\t\t\t\trotation = 0,\n\t\t\t\t\t\ttitleX,\n\t\t\t\t\t\ttitleY,\n\t\t\t\t\t\ttop = me.top,\n\t\t\t\t\t\tleft = me.left,\n\t\t\t\t\t\tbottom = me.bottom,\n\t\t\t\t\t\tright = me.right,\n\t\t\t\t\t\tmaxWidth;\n\t\n\t\t\t\t\tctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\t\t\t\t\tctx.font = titleFont;\n\t\n\t\t\t\t\t// Horizontal\n\t\t\t\t\tif (me.isHorizontal()) {\n\t\t\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\t\t\ttitleY = top + ((bottom - top) / 2); // midpoint of the height\n\t\t\t\t\t\tmaxWidth = right - left;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttitleX = opts.position === 'left' ? left + (fontSize / 2) : right - (fontSize / 2);\n\t\t\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t\t\t}\n\t\n\t\t\t\t\tctx.save();\n\t\t\t\t\tctx.translate(titleX, titleY);\n\t\t\t\t\tctx.rotate(rotation);\n\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\tctx.fillText(opts.text, 0, 0, maxWidth);\n\t\t\t\t\tctx.restore();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\n\t\tfunction createNewTitleBlockAndAttach(chartInstance, titleOpts) {\n\t\t\tvar title = new Chart.Title({\n\t\t\t\tctx: chartInstance.chart.ctx,\n\t\t\t\toptions: titleOpts,\n\t\t\t\tchart: chartInstance\n\t\t\t});\n\t\t\tchartInstance.titleBlock = title;\n\t\t\tChart.layoutService.addBox(chartInstance, title);\n\t\t}\n\t\n\t\t// Register the title plugin\n\t\tChart.plugins.register({\n\t\t\tbeforeInit: function(chartInstance) {\n\t\t\t\tvar titleOpts = chartInstance.options.title;\n\t\n\t\t\t\tif (titleOpts) {\n\t\t\t\t\tcreateNewTitleBlockAndAttach(chartInstance, titleOpts);\n\t\t\t\t}\n\t\t\t},\n\t\t\tbeforeUpdate: function(chartInstance) {\n\t\t\t\tvar titleOpts = chartInstance.options.title;\n\t\n\t\t\t\tif (titleOpts) {\n\t\t\t\t\ttitleOpts = helpers.configMerge(Chart.defaults.global.title, titleOpts);\n\t\n\t\t\t\t\tif (chartInstance.titleBlock) {\n\t\t\t\t\t\tchartInstance.titleBlock.options = titleOpts;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcreateNewTitleBlockAndAttach(chartInstance, titleOpts);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tChart.layoutService.removeBox(chartInstance, chartInstance.titleBlock);\n\t\t\t\t\tdelete chartInstance.titleBlock;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\n/***/ },\n/* 237 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function(Chart) {\n\t\n\t\tvar helpers = Chart.helpers;\n\t\n\t\t/**\n\t \t * Helper method to merge the opacity into a color\n\t \t */\n\t\tfunction mergeOpacity(colorString, opacity) {\n\t\t\tvar color = helpers.color(colorString);\n\t\t\treturn color.alpha(opacity * color.alpha()).rgbaString();\n\t\t}\n\t\n\t\tChart.defaults.global.tooltips = {\n\t\t\tenabled: true,\n\t\t\tcustom: null,\n\t\t\tmode: 'nearest',\n\t\t\tposition: 'average',\n\t\t\tintersect: true,\n\t\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\t\ttitleFontStyle: 'bold',\n\t\t\ttitleSpacing: 2,\n\t\t\ttitleMarginBottom: 6,\n\t\t\ttitleFontColor: '#fff',\n\t\t\ttitleAlign: 'left',\n\t\t\tbodySpacing: 2,\n\t\t\tbodyFontColor: '#fff',\n\t\t\tbodyAlign: 'left',\n\t\t\tfooterFontStyle: 'bold',\n\t\t\tfooterSpacing: 2,\n\t\t\tfooterMarginTop: 6,\n\t\t\tfooterFontColor: '#fff',\n\t\t\tfooterAlign: 'left',\n\t\t\tyPadding: 6,\n\t\t\txPadding: 6,\n\t\t\tcaretSize: 5,\n\t\t\tcornerRadius: 6,\n\t\t\tmultiKeyBackground: '#fff',\n\t\t\tdisplayColors: true,\n\t\t\tcallbacks: {\n\t\t\t\t// Args are: (tooltipItems, data)\n\t\t\t\tbeforeTitle: helpers.noop,\n\t\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\t\t// Pick first xLabel for now\n\t\t\t\t\tvar title = '';\n\t\t\t\t\tvar labels = data.labels;\n\t\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\t\n\t\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\t\tvar item = tooltipItems[0];\n\t\n\t\t\t\t\t\tif (item.xLabel) {\n\t\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn title;\n\t\t\t\t},\n\t\t\t\tafterTitle: helpers.noop,\n\t\n\t\t\t\t// Args are: (tooltipItems, data)\n\t\t\t\tbeforeBody: helpers.noop,\n\t\n\t\t\t\t// Args are: (tooltipItem, data)\n\t\t\t\tbeforeLabel: helpers.noop,\n\t\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\t\tvar datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\n\t\t\t\t\treturn datasetLabel + ': ' + tooltipItem.yLabel;\n\t\t\t\t},\n\t\t\t\tlabelColor: function(tooltipItem, chartInstance) {\n\t\t\t\t\tvar meta = chartInstance.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\t\tvar view = activeElement._view;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tafterLabel: helpers.noop,\n\t\n\t\t\t\t// Args are: (tooltipItems, data)\n\t\t\t\tafterBody: helpers.noop,\n\t\n\t\t\t\t// Args are: (tooltipItems, data)\n\t\t\t\tbeforeFooter: helpers.noop,\n\t\t\t\tfooter: helpers.noop,\n\t\t\t\tafterFooter: helpers.noop\n\t\t\t}\n\t\t};\n\t\n\t\t// Helper to push or concat based on if the 2nd parameter is an array or not\n\t\tfunction pushOrConcat(base, toPush) {\n\t\t\tif (toPush) {\n\t\t\t\tif (helpers.isArray(toPush)) {\n\t\t\t\t\t// base = base.concat(toPush);\n\t\t\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t\t\t} else {\n\t\t\t\t\tbase.push(toPush);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn base;\n\t\t}\n\t\n\t\t// Private helper to create a tooltip item model\n\t\t// @param element : the chart element (point, arc, bar) to create the tooltip item for\n\t\t// @return : new tooltip item\n\t\tfunction createTooltipItem(element) {\n\t\t\tvar xScale = element._xScale;\n\t\t\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\t\t\tvar index = element._index,\n\t\t\t\tdatasetIndex = element._datasetIndex;\n\t\n\t\t\treturn {\n\t\t\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\t\tindex: index,\n\t\t\t\tdatasetIndex: datasetIndex,\n\t\t\t\tx: element._model.x,\n\t\t\t\ty: element._model.y\n\t\t\t};\n\t\t}\n\t\n\t\t/**\n\t\t * Helper to get the reset model for the tooltip\n\t\t * @param tooltipOpts {Object} the tooltip options\n\t\t */\n\t\tfunction getBaseModel(tooltipOpts) {\n\t\t\tvar globalDefaults = Chart.defaults.global;\n\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\n\t\n\t\t\treturn {\n\t\t\t\t// Positioning\n\t\t\t\txPadding: tooltipOpts.xPadding,\n\t\t\t\tyPadding: tooltipOpts.yPadding,\n\t\t\t\txAlign: tooltipOpts.xAlign,\n\t\t\t\tyAlign: tooltipOpts.yAlign,\n\t\n\t\t\t\t// Body\n\t\t\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t\t\t_bodyFontFamily: getValueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t\t_bodyFontStyle: getValueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\t\t\tbodyFontSize: getValueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\t\t\tbodySpacing: tooltipOpts.bodySpacing,\n\t\n\t\t\t\t// Title\n\t\t\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t\t\t_titleFontFamily: getValueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t\t_titleFontStyle: getValueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\t\t\ttitleFontSize: getValueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\t\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\t\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\t\n\t\t\t\t// Footer\n\t\t\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t\t\t_footerFontFamily: getValueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t\t_footerFontStyle: getValueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\t\t\tfooterFontSize: getValueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\t\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\t\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\t\n\t\t\t\t// Appearance\n\t\t\t\tcaretSize: tooltipOpts.caretSize,\n\t\t\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\t\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\t\t\topacity: 0,\n\t\t\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\n\t\t\t\tdisplayColors: tooltipOpts.displayColors\n\t\t\t};\n\t\t}\n\t\n\t\t/**\n\t\t * Get the size of the tooltip\n\t\t */\n\t\tfunction getTooltipSize(tooltip, model) {\n\t\t\tvar ctx = tooltip._chart.ctx;\n\t\n\t\t\tvar height = model.yPadding * 2; // Tooltip Padding\n\t\t\tvar width = 0;\n\t\n\t\t\t// Count of all lines in the body\n\t\t\tvar body = model.body;\n\t\t\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\t\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t\t\t}, 0);\n\t\t\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\t\n\t\t\tvar titleLineCount = model.title.length;\n\t\t\tvar footerLineCount = model.footer.length;\n\t\t\tvar titleFontSize = model.titleFontSize,\n\t\t\t\tbodyFontSize = model.bodyFontSize,\n\t\t\t\tfooterFontSize = model.footerFontSize;\n\t\n\t\t\theight += titleLineCount * titleFontSize; // Title Lines\n\t\t\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\t\t\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\t\t\theight += combinedBodyLength * bodyFontSize; // Body Lines\n\t\t\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\t\t\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\t\t\theight += footerLineCount * (footerFontSize); // Footer Lines\n\t\t\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\t\n\t\t\t// Title width\n\t\t\tvar widthPadding = 0;\n\t\t\tvar maxLineWidth = function(line) {\n\t\t\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\n\t\t\t};\n\t\n\t\t\tctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n\t\t\thelpers.each(model.title, maxLineWidth);\n\t\n\t\t\t// Body width\n\t\t\tctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n\t\t\thelpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\t\n\t\t\t// Body lines may include some extra width due to the color box\n\t\t\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n\t\t\thelpers.each(body, function(bodyItem) {\n\t\t\t\thelpers.each(bodyItem.before, maxLineWidth);\n\t\t\t\thelpers.each(bodyItem.lines, maxLineWidth);\n\t\t\t\thelpers.each(bodyItem.after, maxLineWidth);\n\t\t\t});\n\t\n\t\t\t// Reset back to 0\n\t\t\twidthPadding = 0;\n\t\n\t\t\t// Footer width\n\t\t\tctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n\t\t\thelpers.each(model.footer, maxLineWidth);\n\t\n\t\t\t// Add padding\n\t\t\twidth += 2 * model.xPadding;\n\t\n\t\t\treturn {\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t};\n\t\t}\n\t\n\t\t/**\n\t\t * Helper to get the alignment of a tooltip given the size\n\t\t */\n\t\tfunction determineAlignment(tooltip, size) {\n\t\t\tvar model = tooltip._model;\n\t\t\tvar chart = tooltip._chart;\n\t\t\tvar chartArea = tooltip._chartInstance.chartArea;\n\t\t\tvar xAlign = 'center';\n\t\t\tvar yAlign = 'center';\n\t\n\t\t\tif (model.y < size.height) {\n\t\t\t\tyAlign = 'top';\n\t\t\t} else if (model.y > (chart.height - size.height)) {\n\t\t\t\tyAlign = 'bottom';\n\t\t\t}\n\t\n\t\t\tvar lf, rf; // functions to determine left, right alignment\n\t\t\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\t\t\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\t\t\tvar midX = (chartArea.left + chartArea.right) / 2;\n\t\t\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\t\n\t\t\tif (yAlign === 'center') {\n\t\t\t\tlf = function(x) {\n\t\t\t\t\treturn x <= midX;\n\t\t\t\t};\n\t\t\t\trf = function(x) {\n\t\t\t\t\treturn x > midX;\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tlf = function(x) {\n\t\t\t\t\treturn x <= (size.width / 2);\n\t\t\t\t};\n\t\t\t\trf = function(x) {\n\t\t\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t\t\t};\n\t\t\t}\n\t\n\t\t\tolf = function(x) {\n\t\t\t\treturn x + size.width > chart.width;\n\t\t\t};\n\t\t\torf = function(x) {\n\t\t\t\treturn x - size.width < 0;\n\t\t\t};\n\t\t\tyf = function(y) {\n\t\t\t\treturn y <= midY ? 'top' : 'bottom';\n\t\t\t};\n\t\n\t\t\tif (lf(model.x)) {\n\t\t\t\txAlign = 'left';\n\t\n\t\t\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\t\t\tif (olf(model.x)) {\n\t\t\t\t\txAlign = 'center';\n\t\t\t\t\tyAlign = yf(model.y);\n\t\t\t\t}\n\t\t\t} else if (rf(model.x)) {\n\t\t\t\txAlign = 'right';\n\t\n\t\t\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\t\t\tif (orf(model.x)) {\n\t\t\t\t\txAlign = 'center';\n\t\t\t\t\tyAlign = yf(model.y);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tvar opts = tooltip._options;\n\t\t\treturn {\n\t\t\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\n\t\t\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\n\t\t\t};\n\t\t}\n\t\n\t\t/**\n\t\t * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n\t\t */\n\t\tfunction getBackgroundPoint(vm, size, alignment) {\n\t\t\t// Background Position\n\t\t\tvar x = vm.x;\n\t\t\tvar y = vm.y;\n\t\n\t\t\tvar caretSize = vm.caretSize,\n\t\t\t\tcaretPadding = vm.caretPadding,\n\t\t\t\tcornerRadius = vm.cornerRadius,\n\t\t\t\txAlign = alignment.xAlign,\n\t\t\t\tyAlign = alignment.yAlign,\n\t\t\t\tpaddingAndSize = caretSize + caretPadding,\n\t\t\t\tradiusAndPadding = cornerRadius + caretPadding;\n\t\n\t\t\tif (xAlign === 'right') {\n\t\t\t\tx -= size.width;\n\t\t\t} else if (xAlign === 'center') {\n\t\t\t\tx -= (size.width / 2);\n\t\t\t}\n\t\n\t\t\tif (yAlign === 'top') {\n\t\t\t\ty += paddingAndSize;\n\t\t\t} else if (yAlign === 'bottom') {\n\t\t\t\ty -= size.height + paddingAndSize;\n\t\t\t} else {\n\t\t\t\ty -= (size.height / 2);\n\t\t\t}\n\t\n\t\t\tif (yAlign === 'center') {\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx += paddingAndSize;\n\t\t\t\t} else if (xAlign === 'right') {\n\t\t\t\t\tx -= paddingAndSize;\n\t\t\t\t}\n\t\t\t} else if (xAlign === 'left') {\n\t\t\t\tx -= radiusAndPadding;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tx += radiusAndPadding;\n\t\t\t}\n\t\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: y\n\t\t\t};\n\t\t}\n\t\n\t\tChart.Tooltip = Chart.Element.extend({\n\t\t\tinitialize: function() {\n\t\t\t\tthis._model = getBaseModel(this._options);\n\t\t\t},\n\t\n\t\t\t// Get the title\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tgetTitle: function() {\n\t\t\t\tvar me = this;\n\t\t\t\tvar opts = me._options;\n\t\t\t\tvar callbacks = opts.callbacks;\n\t\n\t\t\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments),\n\t\t\t\t\ttitle = callbacks.title.apply(me, arguments),\n\t\t\t\t\tafterTitle = callbacks.afterTitle.apply(me, arguments);\n\t\n\t\t\t\tvar lines = [];\n\t\t\t\tlines = pushOrConcat(lines, beforeTitle);\n\t\t\t\tlines = pushOrConcat(lines, title);\n\t\t\t\tlines = pushOrConcat(lines, afterTitle);\n\t\n\t\t\t\treturn lines;\n\t\t\t},\n\t\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tgetBeforeBody: function() {\n\t\t\t\tvar lines = this._options.callbacks.beforeBody.apply(this, arguments);\n\t\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t\t},\n\t\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tgetBody: function(tooltipItems, data) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar callbacks = me._options.callbacks;\n\t\t\t\tvar bodyItems = [];\n\t\n\t\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\t\tvar bodyItem = {\n\t\t\t\t\t\tbefore: [],\n\t\t\t\t\t\tlines: [],\n\t\t\t\t\t\tafter: []\n\t\t\t\t\t};\n\t\t\t\t\tpushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\n\t\t\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\t\t\tpushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\n\t\n\t\t\t\t\tbodyItems.push(bodyItem);\n\t\t\t\t});\n\t\n\t\t\t\treturn bodyItems;\n\t\t\t},\n\t\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tgetAfterBody: function() {\n\t\t\t\tvar lines = this._options.callbacks.afterBody.apply(this, arguments);\n\t\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t\t},\n\t\n\t\t\t// Get the footer and beforeFooter and afterFooter lines\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tgetFooter: function() {\n\t\t\t\tvar me = this;\n\t\t\t\tvar callbacks = me._options.callbacks;\n\t\n\t\t\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\t\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\t\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\t\n\t\t\t\tvar lines = [];\n\t\t\t\tlines = pushOrConcat(lines, beforeFooter);\n\t\t\t\tlines = pushOrConcat(lines, footer);\n\t\t\t\tlines = pushOrConcat(lines, afterFooter);\n\t\n\t\t\t\treturn lines;\n\t\t\t},\n\t\n\t\t\tupdate: function(changed) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar opts = me._options;\n\t\n\t\t\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n\t\t\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n\t\t\t\t// which breaks any animations.\n\t\t\t\tvar existingModel = me._model;\n\t\t\t\tvar model = me._model = getBaseModel(opts);\n\t\t\t\tvar active = me._active;\n\t\n\t\t\t\tvar data = me._data;\n\t\t\t\tvar chartInstance = me._chartInstance;\n\t\n\t\t\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\n\t\t\t\tvar alignment = {\n\t\t\t\t\txAlign: existingModel.xAlign,\n\t\t\t\t\tyAlign: existingModel.yAlign\n\t\t\t\t};\n\t\t\t\tvar backgroundPoint = {\n\t\t\t\t\tx: existingModel.x,\n\t\t\t\t\ty: existingModel.y\n\t\t\t\t};\n\t\t\t\tvar tooltipSize = {\n\t\t\t\t\twidth: existingModel.width,\n\t\t\t\t\theight: existingModel.height\n\t\t\t\t};\n\t\t\t\tvar tooltipPosition = {\n\t\t\t\t\tx: existingModel.caretX,\n\t\t\t\t\ty: existingModel.caretY\n\t\t\t\t};\n\t\n\t\t\t\tvar i, len;\n\t\n\t\t\t\tif (active.length) {\n\t\t\t\t\tmodel.opacity = 1;\n\t\n\t\t\t\t\tvar labelColors = [];\n\t\t\t\t\ttooltipPosition = Chart.Tooltip.positioners[opts.position](active, me._eventPosition);\n\t\n\t\t\t\t\tvar tooltipItems = [];\n\t\t\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// If the user provided a filter function, use it to modify the tooltip items\n\t\t\t\t\tif (opts.filter) {\n\t\t\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\n\t\t\t\t\t\t\treturn opts.filter(a, data);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\t\t\tif (opts.itemSort) {\n\t\t\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Determine colors for boxes\n\t\t\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, chartInstance));\n\t\t\t\t\t});\n\t\n\t\t\t\t\t// Build the Text Lines\n\t\t\t\t\tmodel.title = me.getTitle(tooltipItems, data);\n\t\t\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\n\t\t\t\t\tmodel.body = me.getBody(tooltipItems, data);\n\t\t\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\n\t\t\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\n\t\n\t\t\t\t\t// Initial positioning and colors\n\t\t\t\t\tmodel.x = Math.round(tooltipPosition.x);\n\t\t\t\t\tmodel.y = Math.round(tooltipPosition.y);\n\t\t\t\t\tmodel.caretPadding = helpers.getValueOrDefault(tooltipPosition.padding, 2);\n\t\t\t\t\tmodel.labelColors = labelColors;\n\t\n\t\t\t\t\t// data points\n\t\t\t\t\tmodel.dataPoints = tooltipItems;\n\t\n\t\t\t\t\t// We need to determine alignment of the tooltip\n\t\t\t\t\ttooltipSize = getTooltipSize(this, model);\n\t\t\t\t\talignment = determineAlignment(this, tooltipSize);\n\t\t\t\t\t// Final Size and Position\n\t\t\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment);\n\t\t\t\t} else {\n\t\t\t\t\tmodel.opacity = 0;\n\t\t\t\t}\n\t\n\t\t\t\tmodel.xAlign = alignment.xAlign;\n\t\t\t\tmodel.yAlign = alignment.yAlign;\n\t\t\t\tmodel.x = backgroundPoint.x;\n\t\t\t\tmodel.y = backgroundPoint.y;\n\t\t\t\tmodel.width = tooltipSize.width;\n\t\t\t\tmodel.height = tooltipSize.height;\n\t\n\t\t\t\t// Point where the caret on the tooltip points to\n\t\t\t\tmodel.caretX = tooltipPosition.x;\n\t\t\t\tmodel.caretY = tooltipPosition.y;\n\t\n\t\t\t\tme._model = model;\n\t\n\t\t\t\tif (changed && opts.custom) {\n\t\t\t\t\topts.custom.call(me, model);\n\t\t\t\t}\n\t\n\t\t\t\treturn me;\n\t\t\t},\n\t\t\tdrawCaret: function(tooltipPoint, size, opacity) {\n\t\t\t\tvar vm = this._view;\n\t\t\t\tvar ctx = this._chart.ctx;\n\t\t\t\tvar x1, x2, x3;\n\t\t\t\tvar y1, y2, y3;\n\t\t\t\tvar caretSize = vm.caretSize;\n\t\t\t\tvar cornerRadius = vm.cornerRadius;\n\t\t\t\tvar xAlign = vm.xAlign,\n\t\t\t\t\tyAlign = vm.yAlign;\n\t\t\t\tvar ptX = tooltipPoint.x,\n\t\t\t\t\tptY = tooltipPoint.y;\n\t\t\t\tvar width = size.width,\n\t\t\t\t\theight = size.height;\n\t\n\t\t\t\tif (yAlign === 'center') {\n\t\t\t\t\t// Left or right side\n\t\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\t\tx1 = ptX;\n\t\t\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\t\t\tx3 = x1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tx1 = ptX + width;\n\t\t\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\t\t\tx3 = x1;\n\t\t\t\t\t}\n\t\n\t\t\t\t\ty2 = ptY + (height / 2);\n\t\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\t\ty3 = y2 + caretSize;\n\t\t\t\t} else {\n\t\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\t\tx1 = ptX + cornerRadius;\n\t\t\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t\t} else if (xAlign === 'right') {\n\t\t\t\t\t\tx1 = ptX + width - cornerRadius;\n\t\t\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\t\t\tx3 = x2 - caretSize;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tx2 = ptX + (width / 2);\n\t\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (yAlign === 'top') {\n\t\t\t\t\t\ty1 = ptY;\n\t\t\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\t\t\ty3 = y1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ty1 = ptY + height;\n\t\t\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\t\t\ty3 = y1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(x1, y1);\n\t\t\t\tctx.lineTo(x2, y2);\n\t\t\t\tctx.lineTo(x3, y3);\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.fill();\n\t\t\t},\n\t\t\tdrawTitle: function(pt, vm, ctx, opacity) {\n\t\t\t\tvar title = vm.title;\n\t\n\t\t\t\tif (title.length) {\n\t\t\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\t\t\tctx.textBaseline = 'top';\n\t\n\t\t\t\t\tvar titleFontSize = vm.titleFontSize,\n\t\t\t\t\t\ttitleSpacing = vm.titleSpacing;\n\t\n\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n\t\t\t\t\tctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\t\n\t\t\t\t\tvar i, len;\n\t\t\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\t\n\t\t\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdrawBody: function(pt, vm, ctx, opacity) {\n\t\t\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\t\t\tvar bodySpacing = vm.bodySpacing;\n\t\t\t\tvar body = vm.body;\n\t\n\t\t\t\tctx.textAlign = vm._bodyAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\t\n\t\t\t\tvar textColor = mergeOpacity(vm.bodyFontColor, opacity);\n\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\tctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\t\n\t\t\t\t// Before Body\n\t\t\t\tvar xLinePadding = 0;\n\t\t\t\tvar fillLineOfText = function(line) {\n\t\t\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t\t\t};\n\t\n\t\t\t\t// Before body lines\n\t\t\t\thelpers.each(vm.beforeBody, fillLineOfText);\n\t\n\t\t\t\tvar drawColorBoxes = vm.displayColors;\n\t\t\t\txLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\n\t\n\t\t\t\t// Draw body lines now\n\t\t\t\thelpers.each(body, function(bodyItem, i) {\n\t\t\t\t\thelpers.each(bodyItem.before, fillLineOfText);\n\t\n\t\t\t\t\thelpers.each(bodyItem.lines, function(line) {\n\t\t\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n\t\t\t\t\t\t\tctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\t\n\t\t\t\t\t\t\t// Border\n\t\t\t\t\t\t\tctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n\t\t\t\t\t\t\tctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\t\n\t\t\t\t\t\t\t// Inner square\n\t\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n\t\t\t\t\t\t\tctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\t\n\t\t\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tfillLineOfText(line);\n\t\t\t\t\t});\n\t\n\t\t\t\t\thelpers.each(bodyItem.after, fillLineOfText);\n\t\t\t\t});\n\t\n\t\t\t\t// Reset back to 0 for after body\n\t\t\t\txLinePadding = 0;\n\t\n\t\t\t\t// After body lines\n\t\t\t\thelpers.each(vm.afterBody, fillLineOfText);\n\t\t\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t\t\t},\n\t\t\tdrawFooter: function(pt, vm, ctx, opacity) {\n\t\t\t\tvar footer = vm.footer;\n\t\n\t\t\t\tif (footer.length) {\n\t\t\t\t\tpt.y += vm.footerMarginTop;\n\t\n\t\t\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\t\t\tctx.textBaseline = 'top';\n\t\n\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n\t\t\t\t\tctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\t\n\t\t\t\t\thelpers.each(footer, function(line) {\n\t\t\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tdrawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n\t\t\t\thelpers.drawRoundedRectangle(ctx, pt.x, pt.y, tooltipSize.width, tooltipSize.height, vm.cornerRadius);\n\t\t\t\tctx.fill();\n\t\t\t},\n\t\t\tdraw: function() {\n\t\t\t\tvar ctx = this._chart.ctx;\n\t\t\t\tvar vm = this._view;\n\t\n\t\t\t\tif (vm.opacity === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tvar tooltipSize = {\n\t\t\t\t\twidth: vm.width,\n\t\t\t\t\theight: vm.height\n\t\t\t\t};\n\t\t\t\tvar pt = {\n\t\t\t\t\tx: vm.x,\n\t\t\t\t\ty: vm.y\n\t\t\t\t};\n\t\n\t\t\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\t\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\t\n\t\t\t\tif (this._options.enabled) {\n\t\t\t\t\t// Draw Background\n\t\t\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize, opacity);\n\t\n\t\t\t\t\t// Draw Caret\n\t\t\t\t\tthis.drawCaret(pt, tooltipSize, opacity);\n\t\n\t\t\t\t\t// Draw Title, Body, and Footer\n\t\t\t\t\tpt.x += vm.xPadding;\n\t\t\t\t\tpt.y += vm.yPadding;\n\t\n\t\t\t\t\t// Titles\n\t\t\t\t\tthis.drawTitle(pt, vm, ctx, opacity);\n\t\n\t\t\t\t\t// Body\n\t\t\t\t\tthis.drawBody(pt, vm, ctx, opacity);\n\t\n\t\t\t\t\t// Footer\n\t\t\t\t\tthis.drawFooter(pt, vm, ctx, opacity);\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * Handle an event\n\t\t\t * @private\n\t\t\t * @param {IEvent} event - The event to handle\n\t\t\t * @returns {Boolean} true if the tooltip changed\n\t\t\t */\n\t\t\thandleEvent: function(e) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar options = me._options;\n\t\t\t\tvar changed = false;\n\t\n\t\t\t\tme._lastActive = me._lastActive || [];\n\t\n\t\t\t\t// Find Active Elements for tooltips\n\t\t\t\tif (e.type === 'mouseout') {\n\t\t\t\t\tme._active = [];\n\t\t\t\t} else {\n\t\t\t\t\tme._active = me._chartInstance.getElementsAtEventForMode(e, options.mode, options);\n\t\t\t\t}\n\t\n\t\t\t\t// Remember Last Actives\n\t\t\t\tchanged = !helpers.arrayEquals(me._active, me._lastActive);\n\t\t\t\tme._lastActive = me._active;\n\t\n\t\t\t\tif (options.enabled || options.custom) {\n\t\t\t\t\tme._eventPosition = {\n\t\t\t\t\t\tx: e.x,\n\t\t\t\t\t\ty: e.y\n\t\t\t\t\t};\n\t\n\t\t\t\t\tvar model = me._model;\n\t\t\t\t\tme.update(true);\n\t\t\t\t\tme.pivot();\n\t\n\t\t\t\t\t// See if our tooltip position changed\n\t\t\t\t\tchanged |= (model.x !== me._model.x) || (model.y !== me._model.y);\n\t\t\t\t}\n\t\n\t\t\t\treturn changed;\n\t\t\t}\n\t\t});\n\t\n\t\t/**\n\t\t * @namespace Chart.Tooltip.positioners\n\t\t */\n\t\tChart.Tooltip.positioners = {\n\t\t\t/**\n\t\t\t * Average mode places the tooltip at the average position of the elements shown\n\t\t\t * @function Chart.Tooltip.positioners.average\n\t\t\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\n\t\t\t * @returns {Point} tooltip position\n\t\t\t */\n\t\t\taverage: function(elements) {\n\t\t\t\tif (!elements.length) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\n\t\t\t\tvar i, len;\n\t\t\t\tvar x = 0;\n\t\t\t\tvar y = 0;\n\t\t\t\tvar count = 0;\n\t\n\t\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\t\tvar el = elements[i];\n\t\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\t\t\tx += pos.x;\n\t\t\t\t\t\ty += pos.y;\n\t\t\t\t\t\t++count;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn {\n\t\t\t\t\tx: Math.round(x / count),\n\t\t\t\t\ty: Math.round(y / count)\n\t\t\t\t};\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * Gets the tooltip position nearest of the item nearest to the event position\n\t\t\t * @function Chart.Tooltip.positioners.nearest\n\t\t\t * @param elements {Chart.Element[]} the tooltip elements\n\t\t\t * @param eventPosition {Point} the position of the event in canvas coordinates\n\t\t\t * @returns {Point} the tooltip position\n\t\t\t */\n\t\t\tnearest: function(elements, eventPosition) {\n\t\t\t\tvar x = eventPosition.x;\n\t\t\t\tvar y = eventPosition.y;\n\t\n\t\t\t\tvar nearestElement;\n\t\t\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\t\t\tvar i, len;\n\t\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\t\tvar el = elements[i];\n\t\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\t\tvar center = el.getCenterPoint();\n\t\t\t\t\t\tvar d = helpers.distanceBetweenPoints(eventPosition, center);\n\t\n\t\t\t\t\t\tif (d < minDistance) {\n\t\t\t\t\t\t\tminDistance = d;\n\t\t\t\t\t\t\tnearestElement = el;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tif (nearestElement) {\n\t\t\t\t\tvar tp = nearestElement.tooltipPosition();\n\t\t\t\t\tx = tp.x;\n\t\t\t\t\ty = tp.y;\n\t\t\t\t}\n\t\n\t\t\t\treturn {\n\t\t\t\t\tx: x,\n\t\t\t\t\ty: y\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t};\n\n\n/***/ },\n/* 238 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function(Chart) {\n\t\n\t\tvar helpers = Chart.helpers,\n\t\t\tglobalOpts = Chart.defaults.global;\n\t\n\t\tglobalOpts.elements.arc = {\n\t\t\tbackgroundColor: globalOpts.defaultColor,\n\t\t\tborderColor: '#fff',\n\t\t\tborderWidth: 2\n\t\t};\n\t\n\t\tChart.elements.Arc = Chart.Element.extend({\n\t\t\tinLabelRange: function(mouseX) {\n\t\t\t\tvar vm = this._view;\n\t\n\t\t\t\tif (vm) {\n\t\t\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tinRange: function(chartX, chartY) {\n\t\t\t\tvar vm = this._view;\n\t\n\t\t\t\tif (vm) {\n\t\t\t\t\tvar pointRelativePosition = helpers.getAngleFromPoint(vm, {\n\t\t\t\t\t\t\tx: chartX,\n\t\t\t\t\t\t\ty: chartY\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tangle = pointRelativePosition.angle,\n\t\t\t\t\t\tdistance = pointRelativePosition.distance;\n\t\n\t\t\t\t\t// Sanitise angle range\n\t\t\t\t\tvar startAngle = vm.startAngle;\n\t\t\t\t\tvar endAngle = vm.endAngle;\n\t\t\t\t\twhile (endAngle < startAngle) {\n\t\t\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t\t\t}\n\t\t\t\t\twhile (angle > endAngle) {\n\t\t\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t\t\t}\n\t\t\t\t\twhile (angle < startAngle) {\n\t\t\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Check if within the range of the open/close angle\n\t\t\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle),\n\t\t\t\t\t\twithinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\t\n\t\t\t\t\treturn (betweenAngles && withinRadius);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tgetCenterPoint: function() {\n\t\t\t\tvar vm = this._view;\n\t\t\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\t\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\t\t\treturn {\n\t\t\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t\t\t};\n\t\t\t},\n\t\t\tgetArea: function() {\n\t\t\t\tvar vm = this._view;\n\t\t\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t\t\t},\n\t\t\ttooltipPosition: function() {\n\t\t\t\tvar vm = this._view;\n\t\n\t\t\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2),\n\t\t\t\t\trangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\t\t\t\treturn {\n\t\t\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t\t\t};\n\t\t\t},\n\t\t\tdraw: function() {\n\t\n\t\t\t\tvar ctx = this._chart.ctx,\n\t\t\t\t\tvm = this._view,\n\t\t\t\t\tsA = vm.startAngle,\n\t\t\t\t\teA = vm.endAngle;\n\t\n\t\t\t\tctx.beginPath();\n\t\n\t\t\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\t\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\t\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.strokeStyle = vm.borderColor;\n\t\t\t\tctx.lineWidth = vm.borderWidth;\n\t\n\t\t\t\tctx.fillStyle = vm.backgroundColor;\n\t\n\t\t\t\tctx.fill();\n\t\t\t\tctx.lineJoin = 'bevel';\n\t\n\t\t\t\tif (vm.borderWidth) {\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\n/***/ },\n/* 239 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function(Chart) {\n\t\n\t\tvar helpers = Chart.helpers;\n\t\tvar globalDefaults = Chart.defaults.global;\n\t\n\t\tChart.defaults.global.elements.line = {\n\t\t\ttension: 0.4,\n\t\t\tbackgroundColor: globalDefaults.defaultColor,\n\t\t\tborderWidth: 3,\n\t\t\tborderColor: globalDefaults.defaultColor,\n\t\t\tborderCapStyle: 'butt',\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: 'miter',\n\t\t\tcapBezierPoints: true,\n\t\t\tfill: true, // do we fill in the area between the line and its base axis\n\t\t};\n\t\n\t\tChart.elements.Line = Chart.Element.extend({\n\t\t\tdraw: function() {\n\t\t\t\tvar me = this;\n\t\t\t\tvar vm = me._view;\n\t\t\t\tvar spanGaps = vm.spanGaps;\n\t\t\t\tvar fillPoint = vm.scaleZero;\n\t\t\t\tvar loop = me._loop;\n\t\n\t\t\t\t// Handle different fill modes for cartesian lines\n\t\t\t\tif (!loop) {\n\t\t\t\t\tif (vm.fill === 'top') {\n\t\t\t\t\t\tfillPoint = vm.scaleTop;\n\t\t\t\t\t} else if (vm.fill === 'bottom') {\n\t\t\t\t\t\tfillPoint = vm.scaleBottom;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tvar ctx = me._chart.ctx;\n\t\t\t\tctx.save();\n\t\n\t\t\t\t// Helper function to draw a line to a point\n\t\t\t\tfunction lineToPoint(previousPoint, point) {\n\t\t\t\t\tvar pointVM = point._view;\n\t\t\t\t\tif (point._view.steppedLine === true) {\n\t\t\t\t\t\tctx.lineTo(pointVM.x, previousPoint._view.y);\n\t\t\t\t\t\tctx.lineTo(pointVM.x, pointVM.y);\n\t\t\t\t\t} else if (point._view.tension === 0) {\n\t\t\t\t\t\tctx.lineTo(pointVM.x, pointVM.y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tctx.bezierCurveTo(\n\t\t\t\t\t\t\tpreviousPoint._view.controlPointNextX,\n\t\t\t\t\t\t\tpreviousPoint._view.controlPointNextY,\n\t\t\t\t\t\t\tpointVM.controlPointPreviousX,\n\t\t\t\t\t\t\tpointVM.controlPointPreviousY,\n\t\t\t\t\t\t\tpointVM.x,\n\t\t\t\t\t\t\tpointVM.y\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tvar points = me._children.slice(); // clone array\n\t\t\t\tvar lastDrawnIndex = -1;\n\t\n\t\t\t\t// If we are looping, adding the first point again\n\t\t\t\tif (loop && points.length) {\n\t\t\t\t\tpoints.push(points[0]);\n\t\t\t\t}\n\t\n\t\t\t\tvar index, current, previous, currentVM;\n\t\n\t\t\t\t// Fill Line\n\t\t\t\tif (points.length && vm.fill) {\n\t\t\t\t\tctx.beginPath();\n\t\n\t\t\t\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\t\t\t\tcurrent = points[index];\n\t\t\t\t\t\tprevious = helpers.previousItem(points, index);\n\t\t\t\t\t\tcurrentVM = current._view;\n\t\n\t\t\t\t\t\t// First point moves to it's starting position no matter what\n\t\t\t\t\t\tif (index === 0) {\n\t\t\t\t\t\t\tif (loop) {\n\t\t\t\t\t\t\t\tctx.moveTo(fillPoint.x, fillPoint.y);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tctx.moveTo(currentVM.x, fillPoint);\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t\t\t\t\tctx.lineTo(currentVM.x, currentVM.y);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\t\n\t\t\t\t\t\t\tif (currentVM.skip) {\n\t\t\t\t\t\t\t\t// Only do this if this is the first point that is skipped\n\t\t\t\t\t\t\t\tif (!spanGaps && lastDrawnIndex === (index - 1)) {\n\t\t\t\t\t\t\t\t\tif (loop) {\n\t\t\t\t\t\t\t\t\t\tctx.lineTo(fillPoint.x, fillPoint.y);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tctx.lineTo(previous._view.x, fillPoint);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (lastDrawnIndex !== (index - 1)) {\n\t\t\t\t\t\t\t\t\t// There was a gap and this is the first point after the gap. If we've never drawn a point, this is a special case.\n\t\t\t\t\t\t\t\t\t// If the first data point is NaN, then there is no real gap to skip\n\t\t\t\t\t\t\t\t\tif (spanGaps && lastDrawnIndex !== -1) {\n\t\t\t\t\t\t\t\t\t\t// We are spanning the gap, so simple draw a line to this point\n\t\t\t\t\t\t\t\t\t\tlineToPoint(previous, current);\n\t\t\t\t\t\t\t\t\t} else if (loop) {\n\t\t\t\t\t\t\t\t\t\tctx.lineTo(currentVM.x, currentVM.y);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tctx.lineTo(currentVM.x, fillPoint);\n\t\t\t\t\t\t\t\t\t\tctx.lineTo(currentVM.x, currentVM.y);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\t\t\t\tlineToPoint(previous, current);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (!loop && lastDrawnIndex !== -1) {\n\t\t\t\t\t\tctx.lineTo(points[lastDrawnIndex]._view.x, fillPoint);\n\t\t\t\t\t}\n\t\n\t\t\t\t\tctx.fillStyle = vm.backgroundColor || globalDefaults.defaultColor;\n\t\t\t\t\tctx.closePath();\n\t\t\t\t\tctx.fill();\n\t\t\t\t}\n\t\n\t\t\t\t// Stroke Line Options\n\t\t\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\t\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\t\n\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t\t\t}\n\t\n\t\t\t\tctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n\t\t\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\t\t\tctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n\t\t\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\t\n\t\t\t\t// Stroke Line\n\t\t\t\tctx.beginPath();\n\t\t\t\tlastDrawnIndex = -1;\n\t\n\t\t\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\t\t\tcurrent = points[index];\n\t\t\t\t\tprevious = helpers.previousItem(points, index);\n\t\t\t\t\tcurrentVM = current._view;\n\t\n\t\t\t\t\t// First point moves to it's starting position no matter what\n\t\t\t\t\tif (index === 0) {\n\t\t\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\t\n\t\t\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\t\t\tlineToPoint(previous, current);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.restore();\n\t\t\t}\n\t\t});\n\t};\n\n\n/***/ },\n/* 240 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function(Chart) {\n\t\n\t\tvar helpers = Chart.helpers,\n\t\t\tglobalOpts = Chart.defaults.global,\n\t\t\tdefaultColor = globalOpts.defaultColor;\n\t\n\t\tglobalOpts.elements.point = {\n\t\t\tradius: 3,\n\t\t\tpointStyle: 'circle',\n\t\t\tbackgroundColor: defaultColor,\n\t\t\tborderWidth: 1,\n\t\t\tborderColor: defaultColor,\n\t\t\t// Hover\n\t\t\thitRadius: 1,\n\t\t\thoverRadius: 4,\n\t\t\thoverBorderWidth: 1\n\t\t};\n\t\n\t\tfunction xRange(mouseX) {\n\t\t\tvar vm = this._view;\n\t\t\treturn vm ? (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hitRadius, 2)) : false;\n\t\t}\n\t\n\t\tfunction yRange(mouseY) {\n\t\t\tvar vm = this._view;\n\t\t\treturn vm ? (Math.pow(mouseY - vm.y, 2) < Math.pow(vm.radius + vm.hitRadius, 2)) : false;\n\t\t}\n\t\n\t\tChart.elements.Point = Chart.Element.extend({\n\t\t\tinRange: function(mouseX, mouseY) {\n\t\t\t\tvar vm = this._view;\n\t\t\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t\t\t},\n\t\n\t\t\tinLabelRange: xRange,\n\t\t\tinXRange: xRange,\n\t\t\tinYRange: yRange,\n\t\n\t\t\tgetCenterPoint: function() {\n\t\t\t\tvar vm = this._view;\n\t\t\t\treturn {\n\t\t\t\t\tx: vm.x,\n\t\t\t\t\ty: vm.y\n\t\t\t\t};\n\t\t\t},\n\t\t\tgetArea: function() {\n\t\t\t\treturn Math.PI * Math.pow(this._view.radius, 2);\n\t\t\t},\n\t\t\ttooltipPosition: function() {\n\t\t\t\tvar vm = this._view;\n\t\t\t\treturn {\n\t\t\t\t\tx: vm.x,\n\t\t\t\t\ty: vm.y,\n\t\t\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t\t\t};\n\t\t\t},\n\t\t\tdraw: function(chartArea) {\n\t\t\t\tvar vm = this._view;\n\t\t\t\tvar model = this._model;\n\t\t\t\tvar ctx = this._chart.ctx;\n\t\t\t\tvar pointStyle = vm.pointStyle;\n\t\t\t\tvar radius = vm.radius;\n\t\t\t\tvar x = vm.x;\n\t\t\t\tvar y = vm.y;\n\t\t\t\tvar color = Chart.helpers.color;\n\t\t\t\tvar errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\t\t\t\tvar ratio = 0;\n\t\n\t\t\t\tif (vm.skip) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\t\t\tctx.lineWidth = helpers.getValueOrDefault(vm.borderWidth, globalOpts.elements.point.borderWidth);\n\t\t\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\t\n\t\t\t\t// Cliping for Points.\n\t\t\t\t// going out from inner charArea?\n\t\t\t\tif ((chartArea !== undefined) && ((model.x < chartArea.left) || (chartArea.right*errMargin < model.x) || (model.y < chartArea.top) || (chartArea.bottom*errMargin < model.y))) {\n\t\t\t\t\t// Point fade out\n\t\t\t\t\tif (model.x < chartArea.left) {\n\t\t\t\t\t\tratio = (x - model.x) / (chartArea.left - model.x);\n\t\t\t\t\t} else if (chartArea.right*errMargin < model.x) {\n\t\t\t\t\t\tratio = (model.x - x) / (model.x - chartArea.right);\n\t\t\t\t\t} else if (model.y < chartArea.top) {\n\t\t\t\t\t\tratio = (y - model.y) / (chartArea.top - model.y);\n\t\t\t\t\t} else if (chartArea.bottom*errMargin < model.y) {\n\t\t\t\t\t\tratio = (model.y - y) / (model.y - chartArea.bottom);\n\t\t\t\t\t}\n\t\t\t\t\tratio = Math.round(ratio*100) / 100;\n\t\t\t\t\tctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();\n\t\t\t\t\tctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();\n\t\t\t\t}\n\t\n\t\t\t\tChart.canvasHelpers.drawPoint(ctx, pointStyle, radius, x, y);\n\t\t\t}\n\t\t});\n\t};\n\n\n/***/ },\n/* 241 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function(Chart) {\n\t\n\t\tvar globalOpts = Chart.defaults.global;\n\t\n\t\tglobalOpts.elements.rectangle = {\n\t\t\tbackgroundColor: globalOpts.defaultColor,\n\t\t\tborderWidth: 0,\n\t\t\tborderColor: globalOpts.defaultColor,\n\t\t\tborderSkipped: 'bottom'\n\t\t};\n\t\n\t\tfunction isVertical(bar) {\n\t\t\treturn bar._view.width !== undefined;\n\t\t}\n\t\n\t\t/**\n\t\t * Helper function to get the bounds of the bar regardless of the orientation\n\t\t * @private\n\t\t * @param bar {Chart.Element.Rectangle} the bar\n\t\t * @return {Bounds} bounds of the bar\n\t\t */\n\t\tfunction getBarBounds(bar) {\n\t\t\tvar vm = bar._view;\n\t\t\tvar x1, x2, y1, y2;\n\t\n\t\t\tif (isVertical(bar)) {\n\t\t\t\t// vertical\n\t\t\t\tvar halfWidth = vm.width / 2;\n\t\t\t\tx1 = vm.x - halfWidth;\n\t\t\t\tx2 = vm.x + halfWidth;\n\t\t\t\ty1 = Math.min(vm.y, vm.base);\n\t\t\t\ty2 = Math.max(vm.y, vm.base);\n\t\t\t} else {\n\t\t\t\t// horizontal bar\n\t\t\t\tvar halfHeight = vm.height / 2;\n\t\t\t\tx1 = Math.min(vm.x, vm.base);\n\t\t\t\tx2 = Math.max(vm.x, vm.base);\n\t\t\t\ty1 = vm.y - halfHeight;\n\t\t\t\ty2 = vm.y + halfHeight;\n\t\t\t}\n\t\n\t\t\treturn {\n\t\t\t\tleft: x1,\n\t\t\t\ttop: y1,\n\t\t\t\tright: x2,\n\t\t\t\tbottom: y2\n\t\t\t};\n\t\t}\n\t\n\t\tChart.elements.Rectangle = Chart.Element.extend({\n\t\t\tdraw: function() {\n\t\t\t\tvar ctx = this._chart.ctx;\n\t\t\t\tvar vm = this._view;\n\t\t\t\tvar left, right, top, bottom, signX, signY, borderSkipped;\n\t\t\t\tvar borderWidth = vm.borderWidth;\n\t\n\t\t\t\tif (!vm.horizontal) {\n\t\t\t\t\t// bar\n\t\t\t\t\tleft = vm.x - vm.width / 2;\n\t\t\t\t\tright = vm.x + vm.width / 2;\n\t\t\t\t\ttop = vm.y;\n\t\t\t\t\tbottom = vm.base;\n\t\t\t\t\tsignX = 1;\n\t\t\t\t\tsignY = bottom > top? 1: -1;\n\t\t\t\t\tborderSkipped = vm.borderSkipped || 'bottom';\n\t\t\t\t} else {\n\t\t\t\t\t// horizontal bar\n\t\t\t\t\tleft = vm.base;\n\t\t\t\t\tright = vm.x;\n\t\t\t\t\ttop = vm.y - vm.height / 2;\n\t\t\t\t\tbottom = vm.y + vm.height / 2;\n\t\t\t\t\tsignX = right > left? 1: -1;\n\t\t\t\t\tsignY = 1;\n\t\t\t\t\tborderSkipped = vm.borderSkipped || 'left';\n\t\t\t\t}\n\t\n\t\t\t\t// Canvas doesn't allow us to stroke inside the width so we can\n\t\t\t\t// adjust the sizes to fit if we're setting a stroke on the line\n\t\t\t\tif (borderWidth) {\n\t\t\t\t\t// borderWidth shold be less than bar width and bar height.\n\t\t\t\t\tvar barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n\t\t\t\t\tborderWidth = borderWidth > barSize? barSize: borderWidth;\n\t\t\t\t\tvar halfStroke = borderWidth / 2;\n\t\t\t\t\t// Adjust borderWidth when bar top position is near vm.base(zero).\n\t\t\t\t\tvar borderLeft = left + (borderSkipped !== 'left'? halfStroke * signX: 0);\n\t\t\t\t\tvar borderRight = right + (borderSkipped !== 'right'? -halfStroke * signX: 0);\n\t\t\t\t\tvar borderTop = top + (borderSkipped !== 'top'? halfStroke * signY: 0);\n\t\t\t\t\tvar borderBottom = bottom + (borderSkipped !== 'bottom'? -halfStroke * signY: 0);\n\t\t\t\t\t// not become a vertical line?\n\t\t\t\t\tif (borderLeft !== borderRight) {\n\t\t\t\t\t\ttop = borderTop;\n\t\t\t\t\t\tbottom = borderBottom;\n\t\t\t\t\t}\n\t\t\t\t\t// not become a horizontal line?\n\t\t\t\t\tif (borderTop !== borderBottom) {\n\t\t\t\t\t\tleft = borderLeft;\n\t\t\t\t\t\tright = borderRight;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.fillStyle = vm.backgroundColor;\n\t\t\t\tctx.strokeStyle = vm.borderColor;\n\t\t\t\tctx.lineWidth = borderWidth;\n\t\n\t\t\t\t// Corner points, from bottom-left to bottom-right clockwise\n\t\t\t\t// | 1 2 |\n\t\t\t\t// | 0 3 |\n\t\t\t\tvar corners = [\n\t\t\t\t\t[left, bottom],\n\t\t\t\t\t[left, top],\n\t\t\t\t\t[right, top],\n\t\t\t\t\t[right, bottom]\n\t\t\t\t];\n\t\n\t\t\t\t// Find first (starting) corner with fallback to 'bottom'\n\t\t\t\tvar borders = ['bottom', 'left', 'top', 'right'];\n\t\t\t\tvar startCorner = borders.indexOf(borderSkipped, 0);\n\t\t\t\tif (startCorner === -1) {\n\t\t\t\t\tstartCorner = 0;\n\t\t\t\t}\n\t\n\t\t\t\tfunction cornerAt(index) {\n\t\t\t\t\treturn corners[(startCorner + index) % 4];\n\t\t\t\t}\n\t\n\t\t\t\t// Draw rectangle from 'startCorner'\n\t\t\t\tvar corner = cornerAt(0);\n\t\t\t\tctx.moveTo(corner[0], corner[1]);\n\t\n\t\t\t\tfor (var i = 1; i < 4; i++) {\n\t\t\t\t\tcorner = cornerAt(i);\n\t\t\t\t\tctx.lineTo(corner[0], corner[1]);\n\t\t\t\t}\n\t\n\t\t\t\tctx.fill();\n\t\t\t\tif (borderWidth) {\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t},\n\t\t\theight: function() {\n\t\t\t\tvar vm = this._view;\n\t\t\t\treturn vm.base - vm.y;\n\t\t\t},\n\t\t\tinRange: function(mouseX, mouseY) {\n\t\t\t\tvar inRange = false;\n\t\n\t\t\t\tif (this._view) {\n\t\t\t\t\tvar bounds = getBarBounds(this);\n\t\t\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t\t\t}\n\t\n\t\t\t\treturn inRange;\n\t\t\t},\n\t\t\tinLabelRange: function(mouseX, mouseY) {\n\t\t\t\tvar me = this;\n\t\t\t\tif (!me._view) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\n\t\t\t\tvar inRange = false;\n\t\t\t\tvar bounds = getBarBounds(me);\n\t\n\t\t\t\tif (isVertical(me)) {\n\t\t\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right;\n\t\t\t\t} else {\n\t\t\t\t\tinRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t\t\t}\n\t\n\t\t\t\treturn inRange;\n\t\t\t},\n\t\t\tinXRange: function(mouseX) {\n\t\t\t\tvar bounds = getBarBounds(this);\n\t\t\t\treturn mouseX >= bounds.left && mouseX <= bounds.right;\n\t\t\t},\n\t\t\tinYRange: function(mouseY) {\n\t\t\t\tvar bounds = getBarBounds(this);\n\t\t\t\treturn mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t\t},\n\t\t\tgetCenterPoint: function() {\n\t\t\t\tvar vm = this._view;\n\t\t\t\tvar x, y;\n\t\t\t\tif (isVertical(this)) {\n\t\t\t\t\tx = vm.x;\n\t\t\t\t\ty = (vm.y + vm.base) / 2;\n\t\t\t\t} else {\n\t\t\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\t\t\ty = vm.y;\n\t\t\t\t}\n\t\n\t\t\t\treturn {x: x, y: y};\n\t\t\t},\n\t\t\tgetArea: function() {\n\t\t\t\tvar vm = this._view;\n\t\t\t\treturn vm.width * Math.abs(vm.y - vm.base);\n\t\t\t},\n\t\t\ttooltipPosition: function() {\n\t\t\t\tvar vm = this._view;\n\t\t\t\treturn {\n\t\t\t\t\tx: vm.x,\n\t\t\t\t\ty: vm.y\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\t\n\t};\n\n\n/***/ },\n/* 242 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t// Chart.Platform implementation for targeting a web browser\n\tmodule.exports = function(Chart) {\n\t\tvar helpers = Chart.helpers;\n\t\n\t\t// DOM event types -> Chart.js event types.\n\t\t// Note: only events with different types are mapped.\n\t\t// https://developer.mozilla.org/en-US/docs/Web/Events\n\t\tvar eventTypeMap = {\n\t\t\t// Touch events\n\t\t\ttouchstart: 'mousedown',\n\t\t\ttouchmove: 'mousemove',\n\t\t\ttouchend: 'mouseup',\n\t\n\t\t\t// Pointer events\n\t\t\tpointerenter: 'mouseenter',\n\t\t\tpointerdown: 'mousedown',\n\t\t\tpointermove: 'mousemove',\n\t\t\tpointerup: 'mouseup',\n\t\t\tpointerleave: 'mouseout',\n\t\t\tpointerout: 'mouseout'\n\t\t};\n\t\n\t\t/**\n\t\t * The \"used\" size is the final value of a dimension property after all calculations have\n\t\t * been performed. This method uses the computed style of `element` but returns undefined\n\t\t * if the computed style is not expressed in pixels. That can happen in some cases where\n\t\t * `element` has a size relative to its parent and this last one is not yet displayed,\n\t\t * for example because of `display: none` on a parent node.\n\t\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n\t\t * @returns {Number} Size in pixels or undefined if unknown.\n\t\t */\n\t\tfunction readUsedSize(element, property) {\n\t\t\tvar value = helpers.getStyle(element, property);\n\t\t\tvar matches = value && value.match(/(\\d+)px/);\n\t\t\treturn matches? Number(matches[1]) : undefined;\n\t\t}\n\t\n\t\t/**\n\t\t * Initializes the canvas style and render size without modifying the canvas display size,\n\t\t * since responsiveness is handled by the controller.resize() method. The config is used\n\t\t * to determine the aspect ratio to apply in case no explicit height has been specified.\n\t\t */\n\t\tfunction initCanvas(canvas, config) {\n\t\t\tvar style = canvas.style;\n\t\n\t\t\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n\t\t\t// returns null or '' if no explicit value has been set to the canvas attribute.\n\t\t\tvar renderHeight = canvas.getAttribute('height');\n\t\t\tvar renderWidth = canvas.getAttribute('width');\n\t\n\t\t\t// Chart.js modifies some canvas values that we want to restore on destroy\n\t\t\tcanvas._chartjs = {\n\t\t\t\tinitial: {\n\t\t\t\t\theight: renderHeight,\n\t\t\t\t\twidth: renderWidth,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tdisplay: style.display,\n\t\t\t\t\t\theight: style.height,\n\t\t\t\t\t\twidth: style.width\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\t// Force canvas to display as block to avoid extra space caused by inline\n\t\t\t// elements, which would interfere with the responsive resize process.\n\t\t\t// https://github.com/chartjs/Chart.js/issues/2538\n\t\t\tstyle.display = style.display || 'block';\n\t\n\t\t\tif (renderWidth === null || renderWidth === '') {\n\t\t\t\tvar displayWidth = readUsedSize(canvas, 'width');\n\t\t\t\tif (displayWidth !== undefined) {\n\t\t\t\t\tcanvas.width = displayWidth;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (renderHeight === null || renderHeight === '') {\n\t\t\t\tif (canvas.style.height === '') {\n\t\t\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\n\t\t\t\t\t// which one can be specified by the user but also by charts as default option\n\t\t\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n\t\t\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\n\t\t\t\t} else {\n\t\t\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\n\t\t\t\t\tif (displayWidth !== undefined) {\n\t\t\t\t\t\tcanvas.height = displayHeight;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn canvas;\n\t\t}\n\t\n\t\tfunction createEvent(type, chart, x, y, native) {\n\t\t\treturn {\n\t\t\t\ttype: type,\n\t\t\t\tchart: chart,\n\t\t\t\tnative: native || null,\n\t\t\t\tx: x !== undefined? x : null,\n\t\t\t\ty: y !== undefined? y : null,\n\t\t\t};\n\t\t}\n\t\n\t\tfunction fromNativeEvent(event, chart) {\n\t\t\tvar type = eventTypeMap[event.type] || event.type;\n\t\t\tvar pos = helpers.getRelativePosition(event, chart);\n\t\t\treturn createEvent(type, chart, pos.x, pos.y, event);\n\t\t}\n\t\n\t\tfunction createResizer(handler) {\n\t\t\tvar iframe = document.createElement('iframe');\n\t\t\tiframe.className = 'chartjs-hidden-iframe';\n\t\t\tiframe.style.cssText =\n\t\t\t\t'display:block;'+\n\t\t\t\t'overflow:hidden;'+\n\t\t\t\t'border:0;'+\n\t\t\t\t'margin:0;'+\n\t\t\t\t'top:0;'+\n\t\t\t\t'left:0;'+\n\t\t\t\t'bottom:0;'+\n\t\t\t\t'right:0;'+\n\t\t\t\t'height:100%;'+\n\t\t\t\t'width:100%;'+\n\t\t\t\t'position:absolute;'+\n\t\t\t\t'pointer-events:none;'+\n\t\t\t\t'z-index:-1;';\n\t\n\t\t\t// Prevent the iframe to gain focus on tab.\n\t\t\t// https://github.com/chartjs/Chart.js/issues/3090\n\t\t\tiframe.tabIndex = -1;\n\t\n\t\t\t// If the iframe is re-attached to the DOM, the resize listener is removed because the\n\t\t\t// content is reloaded, so make sure to install the handler after the iframe is loaded.\n\t\t\t// https://github.com/chartjs/Chart.js/issues/3521\n\t\t\thelpers.addEvent(iframe, 'load', function() {\n\t\t\t\thelpers.addEvent(iframe.contentWindow || iframe, 'resize', handler);\n\t\n\t\t\t\t// The iframe size might have changed while loading, which can also\n\t\t\t\t// happen if the size has been changed while detached from the DOM.\n\t\t\t\thandler();\n\t\t\t});\n\t\n\t\t\treturn iframe;\n\t\t}\n\t\n\t\tfunction addResizeListener(node, listener, chart) {\n\t\t\tvar stub = node._chartjs = {\n\t\t\t\tticking: false\n\t\t\t};\n\t\n\t\t\t// Throttle the callback notification until the next animation frame.\n\t\t\tvar notify = function() {\n\t\t\t\tif (!stub.ticking) {\n\t\t\t\t\tstub.ticking = true;\n\t\t\t\t\thelpers.requestAnimFrame.call(window, function() {\n\t\t\t\t\t\tif (stub.resizer) {\n\t\t\t\t\t\t\tstub.ticking = false;\n\t\t\t\t\t\t\treturn listener(createEvent('resize', chart));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\t// Let's keep track of this added iframe and thus avoid DOM query when removing it.\n\t\t\tstub.resizer = createResizer(notify);\n\t\n\t\t\tnode.insertBefore(stub.resizer, node.firstChild);\n\t\t}\n\t\n\t\tfunction removeResizeListener(node) {\n\t\t\tif (!node || !node._chartjs) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tvar resizer = node._chartjs.resizer;\n\t\t\tif (resizer) {\n\t\t\t\tresizer.parentNode.removeChild(resizer);\n\t\t\t\tnode._chartjs.resizer = null;\n\t\t\t}\n\t\n\t\t\tdelete node._chartjs;\n\t\t}\n\t\n\t\treturn {\n\t\t\tacquireContext: function(item, config) {\n\t\t\t\tif (typeof item === 'string') {\n\t\t\t\t\titem = document.getElementById(item);\n\t\t\t\t} else if (item.length) {\n\t\t\t\t\t// Support for array based queries (such as jQuery)\n\t\t\t\t\titem = item[0];\n\t\t\t\t}\n\t\n\t\t\t\tif (item && item.canvas) {\n\t\t\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\t\t\titem = item.canvas;\n\t\t\t\t}\n\t\n\t\t\t\tif (item instanceof HTMLCanvasElement) {\n\t\t\t\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\n\t\t\t\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\n\t\t\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\t\t\tvar context = item.getContext && item.getContext('2d');\n\t\t\t\t\tif (context instanceof CanvasRenderingContext2D) {\n\t\t\t\t\t\tinitCanvas(item, config);\n\t\t\t\t\t\treturn context;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn null;\n\t\t\t},\n\t\n\t\t\treleaseContext: function(context) {\n\t\t\t\tvar canvas = context.canvas;\n\t\t\t\tif (!canvas._chartjs) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tvar initial = canvas._chartjs.initial;\n\t\t\t\t['height', 'width'].forEach(function(prop) {\n\t\t\t\t\tvar value = initial[prop];\n\t\t\t\t\tif (value === undefined || value === null) {\n\t\t\t\t\t\tcanvas.removeAttribute(prop);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcanvas.setAttribute(prop, value);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\t\t\thelpers.each(initial.style || {}, function(value, key) {\n\t\t\t\t\tcanvas.style[key] = value;\n\t\t\t\t});\n\t\n\t\t\t\t// The canvas render size might have been changed (and thus the state stack discarded),\n\t\t\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\n\t\t\t\t// least the canvas context is reset to the default state by setting the canvas width.\n\t\t\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\t\t\t\tcanvas.width = canvas.width;\n\t\n\t\t\t\tdelete canvas._chartjs;\n\t\t\t},\n\t\n\t\t\taddEventListener: function(chart, type, listener) {\n\t\t\t\tvar canvas = chart.chart.canvas;\n\t\t\t\tif (type === 'resize') {\n\t\t\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\t\t\taddResizeListener(canvas.parentNode, listener, chart.chart);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tvar stub = listener._chartjs || (listener._chartjs = {});\n\t\t\t\tvar proxies = stub.proxies || (stub.proxies = {});\n\t\t\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\n\t\t\t\t\tlistener(fromNativeEvent(event, chart.chart));\n\t\t\t\t};\n\t\n\t\t\t\thelpers.addEvent(canvas, type, proxy);\n\t\t\t},\n\t\n\t\t\tremoveEventListener: function(chart, type, listener) {\n\t\t\t\tvar canvas = chart.chart.canvas;\n\t\t\t\tif (type === 'resize') {\n\t\t\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\t\t\tremoveResizeListener(canvas.parentNode, listener);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tvar stub = listener._chartjs || {};\n\t\t\t\tvar proxies = stub.proxies || {};\n\t\t\t\tvar proxy = proxies[chart.id + '_' + type];\n\t\t\t\tif (!proxy) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\thelpers.removeEvent(canvas, type, proxy);\n\t\t\t}\n\t\t};\n\t};\n\n\n/***/ },\n/* 243 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t// By default, select the browser (DOM) platform.\n\t// @TODO Make possible to select another platform at build time.\n\tvar implementation = __webpack_require__(242);\n\t\n\tmodule.exports = function(Chart) {\n\t\t/**\n\t\t * @namespace Chart.platform\n\t\t * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n\t\t * @since 2.4.0\n\t\t */\n\t\tChart.platform = {\n\t\t\t/**\n\t\t\t * Called at chart construction time, returns a context2d instance implementing\n\t\t\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t\t\t * @param {*} item - The native item from which to acquire context (platform specific)\n\t\t\t * @param {Object} options - The chart options\n\t\t\t * @returns {CanvasRenderingContext2D} context2d instance\n\t\t\t */\n\t\t\tacquireContext: function() {},\n\t\n\t\t\t/**\n\t\t\t * Called at chart destruction time, releases any resources associated to the context\n\t\t\t * previously returned by the acquireContext() method.\n\t\t\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t\t\t * @returns {Boolean} true if the method succeeded, else false\n\t\t\t */\n\t\t\treleaseContext: function() {},\n\t\n\t\t\t/**\n\t\t\t * Registers the specified listener on the given chart.\n\t\t\t * @param {Chart} chart - Chart from which to listen for event\n\t\t\t * @param {String} type - The ({@link IEvent}) type to listen for\n\t\t\t * @param {Function} listener - Receives a notification (an object that implements\n\t\t\t * the {@link IEvent} interface) when an event of the specified type occurs.\n\t\t\t */\n\t\t\taddEventListener: function() {},\n\t\n\t\t\t/**\n\t\t\t * Removes the specified listener previously registered with addEventListener.\n\t\t\t * @param {Chart} chart -Chart from which to remove the listener\n\t\t\t * @param {String} type - The ({@link IEvent}) type to remove\n\t\t\t * @param {Function} listener - The listener function to remove from the event target.\n\t\t\t */\n\t\t\tremoveEventListener: function() {}\n\t\t};\n\t\n\t\t/**\n\t\t * @interface IPlatform\n\t\t * Allows abstracting platform dependencies away from the chart\n\t\t * @borrows Chart.platform.acquireContext as acquireContext\n\t\t * @borrows Chart.platform.releaseContext as releaseContext\n\t\t * @borrows Chart.platform.addEventListener as addEventListener\n\t\t * @borrows Chart.platform.removeEventListener as removeEventListener\n\t\t */\n\t\n\t\t/**\n\t\t * @interface IEvent\n\t\t * @prop {String} type - The event type name, possible values are:\n\t\t * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n\t\t * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n\t\t * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n\t\t * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n\t\t * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n\t\t */\n\t\n\t\tChart.helpers.extend(Chart.platform, implementation(Chart));\n\t};\n\n\n/***/ },\n/* 244 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function(Chart) {\n\t\n\t\tvar helpers = Chart.helpers;\n\t\t// Default config for a category scale\n\t\tvar defaultConfig = {\n\t\t\tposition: 'bottom'\n\t\t};\n\t\n\t\tvar DatasetScale = Chart.Scale.extend({\n\t\t\t/**\n\t\t\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t\t\t* else fall back to data.labels\n\t\t\t* @private\n\t\t\t*/\n\t\t\tgetLabels: function() {\n\t\t\t\tvar data = this.chart.data;\n\t\t\t\treturn (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t\t\t},\n\t\t\t// Implement this so that\n\t\t\tdetermineDataLimits: function() {\n\t\t\t\tvar me = this;\n\t\t\t\tvar labels = me.getLabels();\n\t\t\t\tme.minIndex = 0;\n\t\t\t\tme.maxIndex = labels.length - 1;\n\t\t\t\tvar findIndex;\n\t\n\t\t\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t\t\t// user specified min value\n\t\t\t\t\tfindIndex = helpers.indexOf(labels, me.options.ticks.min);\n\t\t\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t\t\t}\n\t\n\t\t\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t\t\t// user specified max value\n\t\t\t\t\tfindIndex = helpers.indexOf(labels, me.options.ticks.max);\n\t\t\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t\t\t}\n\t\n\t\t\t\tme.min = labels[me.minIndex];\n\t\t\t\tme.max = labels[me.maxIndex];\n\t\t\t},\n\t\n\t\t\tbuildTicks: function() {\n\t\t\t\tvar me = this;\n\t\t\t\tvar labels = me.getLabels();\n\t\t\t\t// If we are viewing some subset of labels, slice the original array\n\t\t\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t\t\t},\n\t\n\t\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar data = me.chart.data;\n\t\t\t\tvar isHorizontal = me.isHorizontal();\n\t\n\t\t\t\tif (data.yLabels && !isHorizontal) {\n\t\t\t\t\treturn me.getRightValue(data.datasets[datasetIndex].data[index]);\n\t\t\t\t}\n\t\t\t\treturn me.ticks[index - me.minIndex];\n\t\t\t},\n\t\n\t\t\t// Used to get data value locations.  Value can either be an index or a numerical value\n\t\t\tgetPixelForValue: function(value, index, datasetIndex, includeOffset) {\n\t\t\t\tvar me = this;\n\t\t\t\t// 1 is added because we need the length but we have the indexes\n\t\t\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - ((me.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\n\t\n\t\t\t\tif (value !== undefined && isNaN(index)) {\n\t\t\t\t\tvar labels = me.getLabels();\n\t\t\t\t\tvar idx = labels.indexOf(value);\n\t\t\t\t\tindex = idx !== -1 ? idx : index;\n\t\t\t\t}\n\t\n\t\t\t\tif (me.isHorizontal()) {\n\t\t\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\t\n\t\t\t\t\tif (me.options.gridLines.offsetGridLines && includeOffset || me.maxIndex === me.minIndex && includeOffset) {\n\t\t\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn me.left + Math.round(widthOffset);\n\t\t\t\t}\n\t\t\t\tvar valueHeight = me.height / offsetAmt;\n\t\t\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\t\n\t\t\t\tif (me.options.gridLines.offsetGridLines && includeOffset) {\n\t\t\t\t\theightOffset += (valueHeight / 2);\n\t\t\t\t}\n\t\n\t\t\t\treturn me.top + Math.round(heightOffset);\n\t\t\t},\n\t\t\tgetPixelForTick: function(index, includeOffset) {\n\t\t\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null, includeOffset);\n\t\t\t},\n\t\t\tgetValueForPixel: function(pixel) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar value;\n\t\t\t\tvar offsetAmt = Math.max((me.ticks.length - ((me.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\n\t\t\t\tvar horz = me.isHorizontal();\n\t\t\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\t\n\t\t\t\tpixel -= horz ? me.left : me.top;\n\t\n\t\t\t\tif (me.options.gridLines.offsetGridLines) {\n\t\t\t\t\tpixel -= (valueDimension / 2);\n\t\t\t\t}\n\t\n\t\t\t\tif (pixel <= 0) {\n\t\t\t\t\tvalue = 0;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t\t\t}\n\t\n\t\t\t\treturn value;\n\t\t\t},\n\t\t\tgetBasePixel: function() {\n\t\t\t\treturn this.bottom;\n\t\t\t}\n\t\t});\n\t\n\t\tChart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);\n\t\n\t};\n\n\n/***/ },\n/* 245 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function(Chart) {\n\t\n\t\tvar helpers = Chart.helpers;\n\t\n\t\tvar defaultConfig = {\n\t\t\tposition: 'left',\n\t\t\tticks: {\n\t\t\t\tcallback: Chart.Ticks.formatters.linear\n\t\t\t}\n\t\t};\n\t\n\t\tvar LinearScale = Chart.LinearScaleBase.extend({\n\t\t\tdetermineDataLimits: function() {\n\t\t\t\tvar me = this;\n\t\t\t\tvar opts = me.options;\n\t\t\t\tvar chart = me.chart;\n\t\t\t\tvar data = chart.data;\n\t\t\t\tvar datasets = data.datasets;\n\t\t\t\tvar isHorizontal = me.isHorizontal();\n\t\n\t\t\t\tfunction IDMatches(meta) {\n\t\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t\t}\n\t\n\t\t\t\t// First Calculate the range\n\t\t\t\tme.min = null;\n\t\t\t\tme.max = null;\n\t\n\t\t\t\tvar hasStacks = opts.stacked;\n\t\t\t\tif (hasStacks === undefined) {\n\t\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\n\t\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\t\tvar valuesPerStack = {};\n\t\n\t\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\t\tvar key = [\n\t\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t\t].join('.');\n\t\n\t\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\t\tvaluesPerStack[key] = {\n\t\t\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Store these per type\n\t\t\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\n\t\t\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\n\t\n\t\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\t\n\t\t\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\n\t\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\t\t\tvar minVal = helpers.min(values);\n\t\t\t\t\t\tvar maxVal = helpers.max(values);\n\t\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t\t});\n\t\n\t\t\t\t} else {\n\t\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\n\t\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\t\tthis.handleTickRangeOptions();\n\t\t\t},\n\t\t\tgetTickLimit: function() {\n\t\t\t\tvar maxTicks;\n\t\t\t\tvar me = this;\n\t\t\t\tvar tickOpts = me.options.ticks;\n\t\n\t\t\t\tif (me.isHorizontal()) {\n\t\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n\t\t\t\t} else {\n\t\t\t\t\t// The factor of 2 used to scale the font size has been experimentally determined.\n\t\t\t\t\tvar tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, Chart.defaults.global.defaultFontSize);\n\t\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n\t\t\t\t}\n\t\n\t\t\t\treturn maxTicks;\n\t\t\t},\n\t\t\t// Called after the ticks are built. We need\n\t\t\thandleDirectionalChanges: function() {\n\t\t\t\tif (!this.isHorizontal()) {\n\t\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\t\t\tthis.ticks.reverse();\n\t\t\t\t}\n\t\t\t},\n\t\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t\t},\n\t\t\t// Utils\n\t\t\tgetPixelForValue: function(value) {\n\t\t\t\t// This must be called after fit has been run so that\n\t\t\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\t\t\tvar me = this;\n\t\t\t\tvar start = me.start;\n\t\n\t\t\t\tvar rightValue = +me.getRightValue(value);\n\t\t\t\tvar pixel;\n\t\t\t\tvar range = me.end - start;\n\t\n\t\t\t\tif (me.isHorizontal()) {\n\t\t\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\n\t\t\t\t\treturn Math.round(pixel);\n\t\t\t\t}\n\t\n\t\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\n\t\t\t\treturn Math.round(pixel);\n\t\t\t},\n\t\t\tgetValueForPixel: function(pixel) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\t\tvar innerDimension = isHorizontal ? me.width : me.height;\n\t\t\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n\t\t\t\treturn me.start + ((me.end - me.start) * offset);\n\t\t\t},\n\t\t\tgetPixelForTick: function(index) {\n\t\t\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t\t\t}\n\t\t});\n\t\tChart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);\n\t\n\t};\n\n\n/***/ },\n/* 246 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function(Chart) {\n\t\n\t\tvar helpers = Chart.helpers,\n\t\t\tnoop = helpers.noop;\n\t\n\t\tChart.LinearScaleBase = Chart.Scale.extend({\n\t\t\thandleTickRangeOptions: function() {\n\t\t\t\tvar me = this;\n\t\t\t\tvar opts = me.options;\n\t\t\t\tvar tickOpts = opts.ticks;\n\t\n\t\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t\t\t// axis, they can manually override it\n\t\t\t\tif (tickOpts.beginAtZero) {\n\t\t\t\t\tvar minSign = helpers.sign(me.min);\n\t\t\t\t\tvar maxSign = helpers.sign(me.max);\n\t\n\t\t\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t\t\t// move the top up to 0\n\t\t\t\t\t\tme.max = 0;\n\t\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t\t\t// move the bottom down to 0\n\t\t\t\t\t\tme.min = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tif (tickOpts.min !== undefined) {\n\t\t\t\t\tme.min = tickOpts.min;\n\t\t\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t\t}\n\t\n\t\t\t\tif (tickOpts.max !== undefined) {\n\t\t\t\t\tme.max = tickOpts.max;\n\t\t\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t\t}\n\t\n\t\t\t\tif (me.min === me.max) {\n\t\t\t\t\tme.max++;\n\t\n\t\t\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\t\t\tme.min--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tgetTickLimit: noop,\n\t\t\thandleDirectionalChanges: noop,\n\t\n\t\t\tbuildTicks: function() {\n\t\t\t\tvar me = this;\n\t\t\t\tvar opts = me.options;\n\t\t\t\tvar tickOpts = opts.ticks;\n\t\n\t\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t\t\t// the graph. Make sure we always have at least 2 ticks\n\t\t\t\tvar maxTicks = me.getTickLimit();\n\t\t\t\tmaxTicks = Math.max(2, maxTicks);\n\t\n\t\t\t\tvar numericGeneratorOptions = {\n\t\t\t\t\tmaxTicks: maxTicks,\n\t\t\t\t\tmin: tickOpts.min,\n\t\t\t\t\tmax: tickOpts.max,\n\t\t\t\t\tstepSize: helpers.getValueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t\t\t};\n\t\t\t\tvar ticks = me.ticks = Chart.Ticks.generators.linear(numericGeneratorOptions, me);\n\t\n\t\t\t\tme.handleDirectionalChanges();\n\t\n\t\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t\t// range of the scale\n\t\t\t\tme.max = helpers.max(ticks);\n\t\t\t\tme.min = helpers.min(ticks);\n\t\n\t\t\t\tif (tickOpts.reverse) {\n\t\t\t\t\tticks.reverse();\n\t\n\t\t\t\t\tme.start = me.max;\n\t\t\t\t\tme.end = me.min;\n\t\t\t\t} else {\n\t\t\t\t\tme.start = me.min;\n\t\t\t\t\tme.end = me.max;\n\t\t\t\t}\n\t\t\t},\n\t\t\tconvertTicksToLabels: function() {\n\t\t\t\tvar me = this;\n\t\t\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\t\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\t\n\t\t\t\tChart.Scale.prototype.convertTicksToLabels.call(me);\n\t\t\t}\n\t\t});\n\t};\n\n\n/***/ },\n/* 247 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function(Chart) {\n\t\n\t\tvar helpers = Chart.helpers;\n\t\n\t\tvar defaultConfig = {\n\t\t\tposition: 'left',\n\t\n\t\t\t// label settings\n\t\t\tticks: {\n\t\t\t\tcallback: Chart.Ticks.formatters.logarithmic\n\t\t\t}\n\t\t};\n\t\n\t\tvar LogarithmicScale = Chart.Scale.extend({\n\t\t\tdetermineDataLimits: function() {\n\t\t\t\tvar me = this;\n\t\t\t\tvar opts = me.options;\n\t\t\t\tvar tickOpts = opts.ticks;\n\t\t\t\tvar chart = me.chart;\n\t\t\t\tvar data = chart.data;\n\t\t\t\tvar datasets = data.datasets;\n\t\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\n\t\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\t\tfunction IDMatches(meta) {\n\t\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t\t}\n\t\n\t\t\t\t// Calculate Range\n\t\t\t\tme.min = null;\n\t\t\t\tme.max = null;\n\t\t\t\tme.minNotZero = null;\n\t\n\t\t\t\tvar hasStacks = opts.stacked;\n\t\t\t\tif (hasStacks === undefined) {\n\t\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\n\t\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\t\tvar valuesPerStack = {};\n\t\n\t\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\t\tvar key = [\n\t\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t\t].join('.');\n\t\n\t\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\t\t\tvaluesPerStack[key] = [];\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\t\tvar values = valuesPerStack[key];\n\t\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\t\n\t\t\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\t\t\tvalues[index] = 100;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// Don't need to split positive and negative since the log scale can't handle a 0 crossing\n\t\t\t\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\n\t\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\t\tvar minVal = helpers.min(valuesForType);\n\t\t\t\t\t\tvar maxVal = helpers.max(valuesForType);\n\t\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t\t});\n\t\n\t\t\t\t} else {\n\t\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\n\t\t\t\tme.min = getValueOrDefault(tickOpts.min, me.min);\n\t\t\t\tme.max = getValueOrDefault(tickOpts.max, me.max);\n\t\n\t\t\t\tif (me.min === me.max) {\n\t\t\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n\t\t\t\t\t\tme.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.min = 1;\n\t\t\t\t\t\tme.max = 10;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tbuildTicks: function() {\n\t\t\t\tvar me = this;\n\t\t\t\tvar opts = me.options;\n\t\t\t\tvar tickOpts = opts.ticks;\n\t\n\t\t\t\tvar generationOptions = {\n\t\t\t\t\tmin: tickOpts.min,\n\t\t\t\t\tmax: tickOpts.max\n\t\t\t\t};\n\t\t\t\tvar ticks = me.ticks = Chart.Ticks.generators.logarithmic(generationOptions, me);\n\t\n\t\t\t\tif (!me.isHorizontal()) {\n\t\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\t\t\tticks.reverse();\n\t\t\t\t}\n\t\n\t\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t\t// range of the scale\n\t\t\t\tme.max = helpers.max(ticks);\n\t\t\t\tme.min = helpers.min(ticks);\n\t\n\t\t\t\tif (tickOpts.reverse) {\n\t\t\t\t\tticks.reverse();\n\t\n\t\t\t\t\tme.start = me.max;\n\t\t\t\t\tme.end = me.min;\n\t\t\t\t} else {\n\t\t\t\t\tme.start = me.min;\n\t\t\t\t\tme.end = me.max;\n\t\t\t\t}\n\t\t\t},\n\t\t\tconvertTicksToLabels: function() {\n\t\t\t\tthis.tickValues = this.ticks.slice();\n\t\n\t\t\t\tChart.Scale.prototype.convertTicksToLabels.call(this);\n\t\t\t},\n\t\t\t// Get the correct tooltip label\n\t\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t\t},\n\t\t\tgetPixelForTick: function(index) {\n\t\t\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t\t\t},\n\t\t\tgetPixelForValue: function(value) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar innerDimension;\n\t\t\t\tvar pixel;\n\t\n\t\t\t\tvar start = me.start;\n\t\t\t\tvar newVal = +me.getRightValue(value);\n\t\t\t\tvar range;\n\t\t\t\tvar opts = me.options;\n\t\t\t\tvar tickOpts = opts.ticks;\n\t\n\t\t\t\tif (me.isHorizontal()) {\n\t\t\t\t\trange = helpers.log10(me.end) - helpers.log10(start); // todo: if start === 0\n\t\t\t\t\tif (newVal === 0) {\n\t\t\t\t\t\tpixel = me.left;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tinnerDimension = me.width;\n\t\t\t\t\t\tpixel = me.left + (innerDimension / range * (helpers.log10(newVal) - helpers.log10(start)));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Bottom - top since pixels increase downward on a screen\n\t\t\t\t\tinnerDimension = me.height;\n\t\t\t\t\tif (start === 0 && !tickOpts.reverse) {\n\t\t\t\t\t\trange = helpers.log10(me.end) - helpers.log10(me.minNotZero);\n\t\t\t\t\t\tif (newVal === start) {\n\t\t\t\t\t\t\tpixel = me.bottom;\n\t\t\t\t\t\t} else if (newVal === me.minNotZero) {\n\t\t\t\t\t\t\tpixel = me.bottom - innerDimension * 0.02;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpixel = me.bottom - innerDimension * 0.02 - (innerDimension * 0.98/ range * (helpers.log10(newVal)-helpers.log10(me.minNotZero)));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (me.end === 0 && tickOpts.reverse) {\n\t\t\t\t\t\trange = helpers.log10(me.start) - helpers.log10(me.minNotZero);\n\t\t\t\t\t\tif (newVal === me.end) {\n\t\t\t\t\t\t\tpixel = me.top;\n\t\t\t\t\t\t} else if (newVal === me.minNotZero) {\n\t\t\t\t\t\t\tpixel = me.top + innerDimension * 0.02;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpixel = me.top + innerDimension * 0.02 + (innerDimension * 0.98/ range * (helpers.log10(newVal)-helpers.log10(me.minNotZero)));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\trange = helpers.log10(me.end) - helpers.log10(start);\n\t\t\t\t\t\tinnerDimension = me.height;\n\t\t\t\t\t\tpixel = me.bottom - (innerDimension / range * (helpers.log10(newVal) - helpers.log10(start)));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn pixel;\n\t\t\t},\n\t\t\tgetValueForPixel: function(pixel) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar range = helpers.log10(me.end) - helpers.log10(me.start);\n\t\t\t\tvar value, innerDimension;\n\t\n\t\t\t\tif (me.isHorizontal()) {\n\t\t\t\t\tinnerDimension = me.width;\n\t\t\t\t\tvalue = me.start * Math.pow(10, (pixel - me.left) * range / innerDimension);\n\t\t\t\t} else {  // todo: if start === 0\n\t\t\t\t\tinnerDimension = me.height;\n\t\t\t\t\tvalue = Math.pow(10, (me.bottom - pixel) * range / innerDimension) / me.start;\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t});\n\t\tChart.scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n\t\n\t};\n\n\n/***/ },\n/* 248 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function(Chart) {\n\t\n\t\tvar helpers = Chart.helpers;\n\t\tvar globalDefaults = Chart.defaults.global;\n\t\n\t\tvar defaultConfig = {\n\t\t\tdisplay: true,\n\t\n\t\t\t// Boolean - Whether to animate scaling the chart from the centre\n\t\t\tanimate: true,\n\t\t\tlineArc: false,\n\t\t\tposition: 'chartArea',\n\t\n\t\t\tangleLines: {\n\t\t\t\tdisplay: true,\n\t\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\t\t\tlineWidth: 1\n\t\t\t},\n\t\n\t\t\t// label settings\n\t\t\tticks: {\n\t\t\t\t// Boolean - Show a backdrop to the scale label\n\t\t\t\tshowLabelBackdrop: true,\n\t\n\t\t\t\t// String - The colour of the label backdrop\n\t\t\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\t\n\t\t\t\t// Number - The backdrop padding above & below the label in pixels\n\t\t\t\tbackdropPaddingY: 2,\n\t\n\t\t\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\t\t\tbackdropPaddingX: 2,\n\t\n\t\t\t\tcallback: Chart.Ticks.formatters.linear\n\t\t\t},\n\t\n\t\t\tpointLabels: {\n\t\t\t\t// Number - Point label font size in pixels\n\t\t\t\tfontSize: 10,\n\t\n\t\t\t\t// Function - Used to convert point labels\n\t\t\t\tcallback: function(label) {\n\t\t\t\t\treturn label;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\tfunction getValueCount(scale) {\n\t\t\treturn !scale.options.lineArc ? scale.chart.data.labels.length : 0;\n\t\t}\n\t\n\t\tfunction getPointLabelFontOptions(scale) {\n\t\t\tvar pointLabelOptions = scale.options.pointLabels;\n\t\t\tvar fontSize = helpers.getValueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n\t\t\tvar fontStyle = helpers.getValueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\tvar fontFamily = helpers.getValueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\tvar font = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\n\t\t\treturn {\n\t\t\t\tsize: fontSize,\n\t\t\t\tstyle: fontStyle,\n\t\t\t\tfamily: fontFamily,\n\t\t\t\tfont: font\n\t\t\t};\n\t\t}\n\t\n\t\tfunction measureLabelSize(ctx, fontSize, label) {\n\t\t\tif (helpers.isArray(label)) {\n\t\t\t\treturn {\n\t\t\t\t\tw: helpers.longestText(ctx, ctx.font, label),\n\t\t\t\t\th: (label.length * fontSize) + ((label.length - 1) * 1.5 * fontSize)\n\t\t\t\t};\n\t\t\t}\n\t\n\t\t\treturn {\n\t\t\t\tw: ctx.measureText(label).width,\n\t\t\t\th: fontSize\n\t\t\t};\n\t\t}\n\t\n\t\tfunction determineLimits(angle, pos, size, min, max) {\n\t\t\tif (angle === min || angle === max) {\n\t\t\t\treturn {\n\t\t\t\t\tstart: pos - (size / 2),\n\t\t\t\t\tend: pos + (size / 2)\n\t\t\t\t};\n\t\t\t} else if (angle < min || angle > max) {\n\t\t\t\treturn {\n\t\t\t\t\tstart: pos - size - 5,\n\t\t\t\t\tend: pos\n\t\t\t\t};\n\t\t\t}\n\t\n\t\t\treturn {\n\t\t\t\tstart: pos,\n\t\t\t\tend: pos + size + 5\n\t\t\t};\n\t\t}\n\t\n\t\t/**\n\t\t * Helper function to fit a radial linear scale with point labels\n\t\t */\n\t\tfunction fitWithPointLabels(scale) {\n\t\t\t/*\n\t\t\t * Right, this is really confusing and there is a lot of maths going on here\n\t\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t\t\t *\n\t\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t\t\t *\n\t\t\t * Solution:\n\t\t\t *\n\t\t\t * We assume the radius of the polygon is half the size of the canvas at first\n\t\t\t * at each index we check if the text overlaps.\n\t\t\t *\n\t\t\t * Where it does, we store that angle and that index.\n\t\t\t *\n\t\t\t * After finding the largest index and angle we calculate how much we need to remove\n\t\t\t * from the shape radius to move the point inwards by that x.\n\t\t\t *\n\t\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\n\t\t\t * along with labels.\n\t\t\t *\n\t\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t\t\t *\n\t\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t\t\t * and position it in the most space efficient manner\n\t\t\t *\n\t\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\t\t\t */\n\t\n\t\t\tvar plFont = getPointLabelFontOptions(scale);\n\t\n\t\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\t\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\t\tvar furthestLimits = {\n\t\t\t\tl: scale.width,\n\t\t\t\tr: 0,\n\t\t\t\tt: scale.height,\n\t\t\t\tb: 0\n\t\t\t};\n\t\t\tvar furthestAngles = {};\n\t\t\tvar i;\n\t\t\tvar textSize;\n\t\t\tvar pointPosition;\n\t\n\t\t\tscale.ctx.font = plFont.font;\n\t\t\tscale._pointLabelSizes = [];\n\t\n\t\t\tvar valueCount = getValueCount(scale);\n\t\t\tfor (i = 0; i < valueCount; i++) {\n\t\t\t\tpointPosition = scale.getPointPosition(i, largestPossibleRadius);\n\t\t\t\ttextSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n\t\t\t\tscale._pointLabelSizes[i] = textSize;\n\t\n\t\t\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\t\tvar angle = helpers.toDegrees(angleRadians) % 360;\n\t\t\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n\t\t\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\t\n\t\t\t\tif (hLimits.start < furthestLimits.l) {\n\t\t\t\t\tfurthestLimits.l = hLimits.start;\n\t\t\t\t\tfurthestAngles.l = angleRadians;\n\t\t\t\t}\n\t\n\t\t\t\tif (hLimits.end > furthestLimits.r) {\n\t\t\t\t\tfurthestLimits.r = hLimits.end;\n\t\t\t\t\tfurthestAngles.r = angleRadians;\n\t\t\t\t}\n\t\n\t\t\t\tif (vLimits.start < furthestLimits.t) {\n\t\t\t\t\tfurthestLimits.t = vLimits.start;\n\t\t\t\t\tfurthestAngles.t = angleRadians;\n\t\t\t\t}\n\t\n\t\t\t\tif (vLimits.end > furthestLimits.b) {\n\t\t\t\t\tfurthestLimits.b = vLimits.end;\n\t\t\t\t\tfurthestAngles.b = angleRadians;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tscale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n\t\t}\n\t\n\t\t/**\n\t\t * Helper function to fit a radial linear scale with no point labels\n\t\t */\n\t\tfunction fit(scale) {\n\t\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\t\tscale.drawingArea = Math.round(largestPossibleRadius);\n\t\t\tscale.setCenterPoint(0, 0, 0, 0);\n\t\t}\n\t\n\t\tfunction getTextAlignForAngle(angle) {\n\t\t\tif (angle === 0 || angle === 180) {\n\t\t\t\treturn 'center';\n\t\t\t} else if (angle < 180) {\n\t\t\t\treturn 'left';\n\t\t\t}\n\t\n\t\t\treturn 'right';\n\t\t}\n\t\n\t\tfunction fillText(ctx, text, position, fontSize) {\n\t\t\tif (helpers.isArray(text)) {\n\t\t\t\tvar y = position.y;\n\t\t\t\tvar spacing = 1.5 * fontSize;\n\t\n\t\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\t\tctx.fillText(text[i], position.x, y);\n\t\t\t\t\ty+= spacing;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tctx.fillText(text, position.x, position.y);\n\t\t\t}\n\t\t}\n\t\n\t\tfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n\t\t\tif (angle === 90 || angle === 270) {\n\t\t\t\tposition.y -= (textSize.h / 2);\n\t\t\t} else if (angle > 270 || angle < 90) {\n\t\t\t\tposition.y -= textSize.h;\n\t\t\t}\n\t\t}\n\t\n\t\tfunction drawPointLabels(scale) {\n\t\t\tvar ctx = scale.ctx;\n\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\n\t\t\tvar opts = scale.options;\n\t\t\tvar angleLineOpts = opts.angleLines;\n\t\t\tvar pointLabelOpts = opts.pointLabels;\n\t\n\t\t\tctx.lineWidth = angleLineOpts.lineWidth;\n\t\t\tctx.strokeStyle = angleLineOpts.color;\n\t\n\t\t\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.reverse ? scale.min : scale.max);\n\t\n\t\t\t// Point Label Font\n\t\t\tvar plFont = getPointLabelFontOptions(scale);\n\t\n\t\t\tctx.textBaseline = 'top';\n\t\n\t\t\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\n\t\t\t\tif (angleLineOpts.display) {\n\t\t\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\n\t\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t\tctx.closePath();\n\t\t\t\t}\n\t\t\t\t// Extra 3px out for some label spacing\n\t\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + 5);\n\t\n\t\t\t\t// Keep this in loop since we may support array properties here\n\t\t\t\tvar pointLabelFontColor = getValueOrDefault(pointLabelOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\t\tctx.font = plFont.font;\n\t\t\t\tctx.fillStyle = pointLabelFontColor;\n\t\n\t\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\t\tvar angle = helpers.toDegrees(angleRadians);\n\t\t\t\tctx.textAlign = getTextAlignForAngle(angle);\n\t\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n\t\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n\t\t\t}\n\t\t}\n\t\n\t\tfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\n\t\t\tvar ctx = scale.ctx;\n\t\t\tctx.strokeStyle = helpers.getValueAtIndexOrDefault(gridLineOpts.color, index - 1);\n\t\t\tctx.lineWidth = helpers.getValueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\t\n\t\t\tif (scale.options.lineArc) {\n\t\t\t\t// Draw circular arcs between the points\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.stroke();\n\t\t\t} else {\n\t\t\t\t// Draw straight lines connecting each index\n\t\t\t\tvar valueCount = getValueCount(scale);\n\t\n\t\t\t\tif (valueCount === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tctx.beginPath();\n\t\t\t\tvar pointPosition = scale.getPointPosition(0, radius);\n\t\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\t\n\t\t\t\tfor (var i = 1; i < valueCount; i++) {\n\t\t\t\t\tpointPosition = scale.getPointPosition(i, radius);\n\t\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t\t\t}\n\t\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t}\n\t\n\t\tfunction numberOrZero(param) {\n\t\t\treturn helpers.isNumber(param) ? param : 0;\n\t\t}\n\t\n\t\tvar LinearRadialScale = Chart.LinearScaleBase.extend({\n\t\t\tsetDimensions: function() {\n\t\t\t\tvar me = this;\n\t\t\t\tvar opts = me.options;\n\t\t\t\tvar tickOpts = opts.ticks;\n\t\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\t\tme.width = me.maxWidth;\n\t\t\t\tme.height = me.maxHeight;\n\t\t\t\tme.xCenter = Math.round(me.width / 2);\n\t\t\t\tme.yCenter = Math.round(me.height / 2);\n\t\n\t\t\t\tvar minSize = helpers.min([me.height, me.width]);\n\t\t\t\tvar tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\t\tme.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);\n\t\t\t},\n\t\t\tdetermineDataLimits: function() {\n\t\t\t\tvar me = this;\n\t\t\t\tvar chart = me.chart;\n\t\t\t\tvar min = Number.POSITIVE_INFINITY;\n\t\t\t\tvar max = Number.NEGATIVE_INFINITY;\n\t\n\t\t\t\thelpers.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tmin = Math.min(value, min);\n\t\t\t\t\t\t\tmax = Math.max(value, max);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\t\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\n\t\t\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\n\t\n\t\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\t\tme.handleTickRangeOptions();\n\t\t\t},\n\t\t\tgetTickLimit: function() {\n\t\t\t\tvar tickOpts = this.options.ticks;\n\t\t\t\tvar tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\t\treturn Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n\t\t\t},\n\t\t\tconvertTicksToLabels: function() {\n\t\t\t\tvar me = this;\n\t\t\t\tChart.LinearScaleBase.prototype.convertTicksToLabels.call(me);\n\t\n\t\t\t\t// Point labels\n\t\t\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t\t\t},\n\t\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t\t},\n\t\t\tfit: function() {\n\t\t\t\tif (this.options.lineArc) {\n\t\t\t\t\tfit(this);\n\t\t\t\t} else {\n\t\t\t\t\tfitWithPointLabels(this);\n\t\t\t\t}\n\t\t\t},\n\t\t\t/**\n\t\t\t * Set radius reductions and determine new radius and center point\n\t\t\t * @private\n\t\t\t */\n\t\t\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n\t\t\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n\t\t\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n\t\t\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n\t\n\t\t\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\n\t\t\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\n\t\t\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\n\t\t\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\n\t\n\t\t\t\tme.drawingArea = Math.min(\n\t\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n\t\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n\t\t\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n\t\t\t},\n\t\t\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar maxRight = me.width - rightMovement - me.drawingArea,\n\t\t\t\t\tmaxLeft = leftMovement + me.drawingArea,\n\t\t\t\t\tmaxTop = topMovement + me.drawingArea,\n\t\t\t\t\tmaxBottom = me.height - bottomMovement - me.drawingArea;\n\t\n\t\t\t\tme.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);\n\t\t\t\tme.yCenter = Math.round(((maxTop + maxBottom) / 2) + me.top);\n\t\t\t},\n\t\n\t\t\tgetIndexAngle: function(index) {\n\t\t\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\n\t\t\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\t\t\tthis.chart.options.startAngle :\n\t\t\t\t\t0;\n\t\n\t\t\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\t\n\t\t\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\t\t\treturn index * angleMultiplier + startAngleRadians;\n\t\t\t},\n\t\t\tgetDistanceFromCenterForValue: function(value) {\n\t\t\t\tvar me = this;\n\t\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn 0; // null always in center\n\t\t\t\t}\n\t\n\t\t\t\t// Take into account half font size + the yPadding of the top value\n\t\t\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\t\t\tif (me.options.reverse) {\n\t\t\t\t\treturn (me.max - value) * scalingFactor;\n\t\t\t\t}\n\t\t\t\treturn (value - me.min) * scalingFactor;\n\t\t\t},\n\t\t\tgetPointPosition: function(index, distanceFromCenter) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\n\t\t\t\treturn {\n\t\t\t\t\tx: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n\t\t\t\t\ty: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n\t\t\t\t};\n\t\t\t},\n\t\t\tgetPointPositionForValue: function(index, value) {\n\t\t\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t\t\t},\n\t\n\t\t\tgetBasePosition: function() {\n\t\t\t\tvar me = this;\n\t\t\t\tvar min = me.min;\n\t\t\t\tvar max = me.max;\n\t\n\t\t\t\treturn me.getPointPositionForValue(0,\n\t\t\t\t\tme.beginAtZero? 0:\n\t\t\t\t\tmin < 0 && max < 0? max :\n\t\t\t\t\tmin > 0 && max > 0? min :\n\t\t\t\t\t0);\n\t\t\t},\n\t\n\t\t\tdraw: function() {\n\t\t\t\tvar me = this;\n\t\t\t\tvar opts = me.options;\n\t\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\t\tvar tickOpts = opts.ticks;\n\t\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\n\t\n\t\t\t\tif (opts.display) {\n\t\t\t\t\tvar ctx = me.ctx;\n\t\n\t\t\t\t\t// Tick Font\n\t\t\t\t\tvar tickFontSize = getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\t\t\tvar tickFontStyle = getValueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\t\t\tvar tickFontFamily = getValueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\t\n\t\t\t\t\thelpers.each(me.ticks, function(label, index) {\n\t\t\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\t\t\tif (index > 0 || opts.reverse) {\n\t\t\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\t\t\t\t\t\t\tvar yHeight = me.yCenter - yCenterOffset;\n\t\n\t\t\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\t\t\tvar tickFontColor = getValueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\t\t\t\t\t\tctx.font = tickLabelFont;\n\t\n\t\t\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t\t\tme.xCenter - labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t\t\tyHeight - tickFontSize / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\t\t\ttickFontSize + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\t\t\tctx.fillText(label, me.xCenter, yHeight);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\n\t\t\t\t\tif (!opts.lineArc) {\n\t\t\t\t\t\tdrawPointLabels(me);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tChart.scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n\t\n\t};\n\n\n/***/ },\n/* 249 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* global window: false */\n\t'use strict';\n\t\n\tvar moment = __webpack_require__(1);\n\tmoment = typeof(moment) === 'function' ? moment : window.moment;\n\t\n\tmodule.exports = function(Chart) {\n\t\n\t\tvar helpers = Chart.helpers;\n\t\tvar time = {\n\t\t\tunits: [{\n\t\t\t\tname: 'millisecond',\n\t\t\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t\t\t}, {\n\t\t\t\tname: 'second',\n\t\t\t\tsteps: [1, 2, 5, 10, 30]\n\t\t\t}, {\n\t\t\t\tname: 'minute',\n\t\t\t\tsteps: [1, 2, 5, 10, 30]\n\t\t\t}, {\n\t\t\t\tname: 'hour',\n\t\t\t\tsteps: [1, 2, 3, 6, 12]\n\t\t\t}, {\n\t\t\t\tname: 'day',\n\t\t\t\tsteps: [1, 2, 5]\n\t\t\t}, {\n\t\t\t\tname: 'week',\n\t\t\t\tmaxStep: 4\n\t\t\t}, {\n\t\t\t\tname: 'month',\n\t\t\t\tmaxStep: 3\n\t\t\t}, {\n\t\t\t\tname: 'quarter',\n\t\t\t\tmaxStep: 4\n\t\t\t}, {\n\t\t\t\tname: 'year',\n\t\t\t\tmaxStep: false\n\t\t\t}]\n\t\t};\n\t\n\t\tvar defaultConfig = {\n\t\t\tposition: 'bottom',\n\t\n\t\t\ttime: {\n\t\t\t\tparser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\t\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n\t\t\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\t\t\tround: false, // none, or override with week, month, year, etc.\n\t\t\t\tdisplayFormat: false, // DEPRECATED\n\t\t\t\tisoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n\t\t\t\tminUnit: 'millisecond',\n\t\n\t\t\t\t// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n\t\t\t\tdisplayFormats: {\n\t\t\t\t\tmillisecond: 'h:mm:ss.SSS a', // 11:20:01.123 AM,\n\t\t\t\t\tsecond: 'h:mm:ss a', // 11:20:01 AM\n\t\t\t\t\tminute: 'h:mm:ss a', // 11:20:01 AM\n\t\t\t\t\thour: 'MMM D, hA', // Sept 4, 5PM\n\t\t\t\t\tday: 'll', // Sep 4 2015\n\t\t\t\t\tweek: 'll', // Week 46, or maybe \"[W]WW - YYYY\" ?\n\t\t\t\t\tmonth: 'MMM YYYY', // Sept 2015\n\t\t\t\t\tquarter: '[Q]Q - YYYY', // Q3\n\t\t\t\t\tyear: 'YYYY' // 2015\n\t\t\t\t}\n\t\t\t},\n\t\t\tticks: {\n\t\t\t\tautoSkip: false\n\t\t\t}\n\t\t};\n\t\n\t\tvar TimeScale = Chart.Scale.extend({\n\t\t\tinitialize: function() {\n\t\t\t\tif (!moment) {\n\t\t\t\t\tthrow new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n\t\t\t\t}\n\t\n\t\t\t\tChart.Scale.prototype.initialize.call(this);\n\t\t\t},\n\t\t\tgetLabelMoment: function(datasetIndex, index) {\n\t\t\t\tif (datasetIndex === null || index === null) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\n\t\t\t\tif (typeof this.labelMoments[datasetIndex] !== 'undefined') {\n\t\t\t\t\treturn this.labelMoments[datasetIndex][index];\n\t\t\t\t}\n\t\n\t\t\t\treturn null;\n\t\t\t},\n\t\t\tgetLabelDiff: function(datasetIndex, index) {\n\t\t\t\tvar me = this;\n\t\t\t\tif (datasetIndex === null || index === null) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\n\t\t\t\tif (me.labelDiffs === undefined) {\n\t\t\t\t\tme.buildLabelDiffs();\n\t\t\t\t}\n\t\n\t\t\t\tif (typeof me.labelDiffs[datasetIndex] !== 'undefined') {\n\t\t\t\t\treturn me.labelDiffs[datasetIndex][index];\n\t\t\t\t}\n\t\n\t\t\t\treturn null;\n\t\t\t},\n\t\t\tgetMomentStartOf: function(tick) {\n\t\t\t\tvar me = this;\n\t\t\t\tif (me.options.time.unit === 'week' && me.options.time.isoWeekday !== false) {\n\t\t\t\t\treturn tick.clone().startOf('isoWeek').isoWeekday(me.options.time.isoWeekday);\n\t\t\t\t}\n\t\t\t\treturn tick.clone().startOf(me.tickUnit);\n\t\t\t},\n\t\t\tdetermineDataLimits: function() {\n\t\t\t\tvar me = this;\n\t\t\t\tme.labelMoments = [];\n\t\n\t\t\t\t// Only parse these once. If the dataset does not have data as x,y pairs, we will use\n\t\t\t\t// these\n\t\t\t\tvar scaleLabelMoments = [];\n\t\t\t\tif (me.chart.data.labels && me.chart.data.labels.length > 0) {\n\t\t\t\t\thelpers.each(me.chart.data.labels, function(label) {\n\t\t\t\t\t\tvar labelMoment = me.parseTime(label);\n\t\n\t\t\t\t\t\tif (labelMoment.isValid()) {\n\t\t\t\t\t\t\tif (me.options.time.round) {\n\t\t\t\t\t\t\t\tlabelMoment.startOf(me.options.time.round);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tscaleLabelMoments.push(labelMoment);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, me);\n\t\n\t\t\t\t\tme.firstTick = moment.min.call(me, scaleLabelMoments);\n\t\t\t\t\tme.lastTick = moment.max.call(me, scaleLabelMoments);\n\t\t\t\t} else {\n\t\t\t\t\tme.firstTick = null;\n\t\t\t\t\tme.lastTick = null;\n\t\t\t\t}\n\t\n\t\t\t\thelpers.each(me.chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar momentsForDataset = [];\n\t\t\t\t\tvar datasetVisible = me.chart.isDatasetVisible(datasetIndex);\n\t\n\t\t\t\t\tif (typeof dataset.data[0] === 'object' && dataset.data[0] !== null) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(value) {\n\t\t\t\t\t\t\tvar labelMoment = me.parseTime(me.getRightValue(value));\n\t\n\t\t\t\t\t\t\tif (labelMoment.isValid()) {\n\t\t\t\t\t\t\t\tif (me.options.time.round) {\n\t\t\t\t\t\t\t\t\tlabelMoment.startOf(me.options.time.round);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tmomentsForDataset.push(labelMoment);\n\t\n\t\t\t\t\t\t\t\tif (datasetVisible) {\n\t\t\t\t\t\t\t\t\t// May have gone outside the scale ranges, make sure we keep the first and last ticks updated\n\t\t\t\t\t\t\t\t\tme.firstTick = me.firstTick !== null ? moment.min(me.firstTick, labelMoment) : labelMoment;\n\t\t\t\t\t\t\t\t\tme.lastTick = me.lastTick !== null ? moment.max(me.lastTick, labelMoment) : labelMoment;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, me);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// We have no labels. Use the ones from the scale\n\t\t\t\t\t\tmomentsForDataset = scaleLabelMoments;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tme.labelMoments.push(momentsForDataset);\n\t\t\t\t}, me);\n\t\n\t\t\t\t// Set these after we've done all the data\n\t\t\t\tif (me.options.time.min) {\n\t\t\t\t\tme.firstTick = me.parseTime(me.options.time.min);\n\t\t\t\t}\n\t\n\t\t\t\tif (me.options.time.max) {\n\t\t\t\t\tme.lastTick = me.parseTime(me.options.time.max);\n\t\t\t\t}\n\t\n\t\t\t\t// We will modify these, so clone for later\n\t\t\t\tme.firstTick = (me.firstTick || moment()).clone();\n\t\t\t\tme.lastTick = (me.lastTick || moment()).clone();\n\t\t\t},\n\t\t\tbuildLabelDiffs: function() {\n\t\t\t\tvar me = this;\n\t\t\t\tme.labelDiffs = [];\n\t\t\t\tvar scaleLabelDiffs = [];\n\t\t\t\t// Parse common labels once\n\t\t\t\tif (me.chart.data.labels && me.chart.data.labels.length > 0) {\n\t\t\t\t\thelpers.each(me.chart.data.labels, function(label) {\n\t\t\t\t\t\tvar labelMoment = me.parseTime(label);\n\t\n\t\t\t\t\t\tif (labelMoment.isValid()) {\n\t\t\t\t\t\t\tif (me.options.time.round) {\n\t\t\t\t\t\t\t\tlabelMoment.startOf(me.options.time.round);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tscaleLabelDiffs.push(labelMoment.diff(me.firstTick, me.tickUnit, true));\n\t\t\t\t\t\t}\n\t\t\t\t\t}, me);\n\t\t\t\t}\n\t\n\t\t\t\thelpers.each(me.chart.data.datasets, function(dataset) {\n\t\t\t\t\tvar diffsForDataset = [];\n\t\n\t\t\t\t\tif (typeof dataset.data[0] === 'object' && dataset.data[0] !== null) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(value) {\n\t\t\t\t\t\t\tvar labelMoment = me.parseTime(me.getRightValue(value));\n\t\n\t\t\t\t\t\t\tif (labelMoment.isValid()) {\n\t\t\t\t\t\t\t\tif (me.options.time.round) {\n\t\t\t\t\t\t\t\t\tlabelMoment.startOf(me.options.time.round);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdiffsForDataset.push(labelMoment.diff(me.firstTick, me.tickUnit, true));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, me);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// We have no labels. Use common ones\n\t\t\t\t\t\tdiffsForDataset = scaleLabelDiffs;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tme.labelDiffs.push(diffsForDataset);\n\t\t\t\t}, me);\n\t\t\t},\n\t\t\tbuildTicks: function() {\n\t\t\t\tvar me = this;\n\t\n\t\t\t\tme.ctx.save();\n\t\t\t\tvar tickFontSize = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\n\t\t\t\tvar tickFontStyle = helpers.getValueOrDefault(me.options.ticks.fontStyle, Chart.defaults.global.defaultFontStyle);\n\t\t\t\tvar tickFontFamily = helpers.getValueOrDefault(me.options.ticks.fontFamily, Chart.defaults.global.defaultFontFamily);\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\t\t\t\tme.ctx.font = tickLabelFont;\n\t\n\t\t\t\tme.ticks = [];\n\t\t\t\tme.unitScale = 1; // How much we scale the unit by, ie 2 means 2x unit per step\n\t\t\t\tme.scaleSizeInUnits = 0; // How large the scale is in the base unit (seconds, minutes, etc)\n\t\n\t\t\t\t// Set unit override if applicable\n\t\t\t\tif (me.options.time.unit) {\n\t\t\t\t\tme.tickUnit = me.options.time.unit || 'day';\n\t\t\t\t\tme.displayFormat = me.options.time.displayFormats[me.tickUnit];\n\t\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true);\n\t\t\t\t\tme.unitScale = helpers.getValueOrDefault(me.options.time.unitStepSize, 1);\n\t\t\t\t} else {\n\t\t\t\t\t// Determine the smallest needed unit of the time\n\t\t\t\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\n\t\n\t\t\t\t\t// Crude approximation of what the label length might be\n\t\t\t\t\tvar tempFirstLabel = me.tickFormatFunction(me.firstTick, 0, []);\n\t\t\t\t\tvar tickLabelWidth = me.ctx.measureText(tempFirstLabel).width;\n\t\t\t\t\tvar cosRotation = Math.cos(helpers.toRadians(me.options.ticks.maxRotation));\n\t\t\t\t\tvar sinRotation = Math.sin(helpers.toRadians(me.options.ticks.maxRotation));\n\t\t\t\t\ttickLabelWidth = (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t\t\t\t\tvar labelCapacity = innerWidth / (tickLabelWidth);\n\t\n\t\t\t\t\t// Start as small as possible\n\t\t\t\t\tme.tickUnit = me.options.time.minUnit;\n\t\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true);\n\t\t\t\t\tme.displayFormat = me.options.time.displayFormats[me.tickUnit];\n\t\n\t\t\t\t\tvar unitDefinitionIndex = 0;\n\t\t\t\t\tvar unitDefinition = time.units[unitDefinitionIndex];\n\t\n\t\t\t\t\t// While we aren't ideal and we don't have units left\n\t\t\t\t\twhile (unitDefinitionIndex < time.units.length) {\n\t\t\t\t\t\t// Can we scale this unit. If `false` we can scale infinitely\n\t\t\t\t\t\tme.unitScale = 1;\n\t\n\t\t\t\t\t\tif (helpers.isArray(unitDefinition.steps) && Math.ceil(me.scaleSizeInUnits / labelCapacity) < helpers.max(unitDefinition.steps)) {\n\t\t\t\t\t\t\t// Use one of the predefined steps\n\t\t\t\t\t\t\tfor (var idx = 0; idx < unitDefinition.steps.length; ++idx) {\n\t\t\t\t\t\t\t\tif (unitDefinition.steps[idx] >= Math.ceil(me.scaleSizeInUnits / labelCapacity)) {\n\t\t\t\t\t\t\t\t\tme.unitScale = helpers.getValueOrDefault(me.options.time.unitStepSize, unitDefinition.steps[idx]);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else if ((unitDefinition.maxStep === false) || (Math.ceil(me.scaleSizeInUnits / labelCapacity) < unitDefinition.maxStep)) {\n\t\t\t\t\t\t\t// We have a max step. Scale this unit\n\t\t\t\t\t\t\tme.unitScale = helpers.getValueOrDefault(me.options.time.unitStepSize, Math.ceil(me.scaleSizeInUnits / labelCapacity));\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Move to the next unit up\n\t\t\t\t\t\t\t++unitDefinitionIndex;\n\t\t\t\t\t\t\tunitDefinition = time.units[unitDefinitionIndex];\n\t\n\t\t\t\t\t\t\tme.tickUnit = unitDefinition.name;\n\t\t\t\t\t\t\tvar leadingUnitBuffer = me.firstTick.diff(me.getMomentStartOf(me.firstTick), me.tickUnit, true);\n\t\t\t\t\t\t\tvar trailingUnitBuffer = me.getMomentStartOf(me.lastTick.clone().add(1, me.tickUnit)).diff(me.lastTick, me.tickUnit, true);\n\t\t\t\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true) + leadingUnitBuffer + trailingUnitBuffer;\n\t\t\t\t\t\t\tme.displayFormat = me.options.time.displayFormats[unitDefinition.name];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tvar roundedStart;\n\t\n\t\t\t\t// Only round the first tick if we have no hard minimum\n\t\t\t\tif (!me.options.time.min) {\n\t\t\t\t\tme.firstTick = me.getMomentStartOf(me.firstTick);\n\t\t\t\t\troundedStart = me.firstTick;\n\t\t\t\t} else {\n\t\t\t\t\troundedStart = me.getMomentStartOf(me.firstTick);\n\t\t\t\t}\n\t\n\t\t\t\t// Only round the last tick if we have no hard maximum\n\t\t\t\tif (!me.options.time.max) {\n\t\t\t\t\tvar roundedEnd = me.getMomentStartOf(me.lastTick);\n\t\t\t\t\tvar delta = roundedEnd.diff(me.lastTick, me.tickUnit, true);\n\t\t\t\t\tif (delta < 0) {\n\t\t\t\t\t\t// Do not use end of because we need me to be in the next time unit\n\t\t\t\t\t\tme.lastTick = me.getMomentStartOf(me.lastTick.add(1, me.tickUnit));\n\t\t\t\t\t} else if (delta >= 0) {\n\t\t\t\t\t\tme.lastTick = roundedEnd;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true);\n\t\t\t\t}\n\t\n\t\t\t\t// Tick displayFormat override\n\t\t\t\tif (me.options.time.displayFormat) {\n\t\t\t\t\tme.displayFormat = me.options.time.displayFormat;\n\t\t\t\t}\n\t\n\t\t\t\t// first tick. will have been rounded correctly if options.time.min is not specified\n\t\t\t\tme.ticks.push(me.firstTick.clone());\n\t\n\t\t\t\t// For every unit in between the first and last moment, create a moment and add it to the ticks tick\n\t\t\t\tfor (var i = me.unitScale; i <= me.scaleSizeInUnits; i += me.unitScale) {\n\t\t\t\t\tvar newTick = roundedStart.clone().add(i, me.tickUnit);\n\t\n\t\t\t\t\t// Are we greater than the max time\n\t\t\t\t\tif (me.options.time.max && newTick.diff(me.lastTick, me.tickUnit, true) >= 0) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tme.ticks.push(newTick);\n\t\t\t\t}\n\t\n\t\t\t\t// Always show the right tick\n\t\t\t\tvar diff = me.ticks[me.ticks.length - 1].diff(me.lastTick, me.tickUnit);\n\t\t\t\tif (diff !== 0 || me.scaleSizeInUnits === 0) {\n\t\t\t\t\t// this is a weird case. If the <max> option is the same as the end option, we can't just diff the times because the tick was created from the roundedStart\n\t\t\t\t\t// but the last tick was not rounded.\n\t\t\t\t\tif (me.options.time.max) {\n\t\t\t\t\t\tme.ticks.push(me.lastTick.clone());\n\t\t\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.ticks[0], me.tickUnit, true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.ticks.push(me.lastTick.clone());\n\t\t\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tme.ctx.restore();\n\t\n\t\t\t\t// Invalidate label diffs cache\n\t\t\t\tme.labelDiffs = undefined;\n\t\t\t},\n\t\t\t// Get tooltip label\n\t\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar label = me.chart.data.labels && index < me.chart.data.labels.length ? me.chart.data.labels[index] : '';\n\t\t\t\tvar value = me.chart.data.datasets[datasetIndex].data[index];\n\t\n\t\t\t\tif (value !== null && typeof value === 'object') {\n\t\t\t\t\tlabel = me.getRightValue(value);\n\t\t\t\t}\n\t\n\t\t\t\t// Format nicely\n\t\t\t\tif (me.options.time.tooltipFormat) {\n\t\t\t\t\tlabel = me.parseTime(label).format(me.options.time.tooltipFormat);\n\t\t\t\t}\n\t\n\t\t\t\treturn label;\n\t\t\t},\n\t\t\t// Function to format an individual tick mark\n\t\t\ttickFormatFunction: function(tick, index, ticks) {\n\t\t\t\tvar formattedTick = tick.format(this.displayFormat);\n\t\t\t\tvar tickOpts = this.options.ticks;\n\t\t\t\tvar callback = helpers.getValueOrDefault(tickOpts.callback, tickOpts.userCallback);\n\t\n\t\t\t\tif (callback) {\n\t\t\t\t\treturn callback(formattedTick, index, ticks);\n\t\t\t\t}\n\t\t\t\treturn formattedTick;\n\t\t\t},\n\t\t\tconvertTicksToLabels: function() {\n\t\t\t\tvar me = this;\n\t\t\t\tme.tickMoments = me.ticks;\n\t\t\t\tme.ticks = me.ticks.map(me.tickFormatFunction, me);\n\t\t\t},\n\t\t\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar offset = null;\n\t\t\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\t\t\toffset = me.getLabelDiff(datasetIndex, index);\n\t\t\t\t}\n\t\n\t\t\t\tif (offset === null) {\n\t\t\t\t\tif (!value || !value.isValid) {\n\t\t\t\t\t\t// not already a moment object\n\t\t\t\t\t\tvalue = me.parseTime(me.getRightValue(value));\n\t\t\t\t\t}\n\t\t\t\t\tif (value && value.isValid && value.isValid()) {\n\t\t\t\t\t\toffset = value.diff(me.firstTick, me.tickUnit, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tif (offset !== null) {\n\t\t\t\t\tvar decimal = offset !== 0 ? offset / me.scaleSizeInUnits : offset;\n\t\n\t\t\t\t\tif (me.isHorizontal()) {\n\t\t\t\t\t\tvar valueOffset = (me.width * decimal);\n\t\t\t\t\t\treturn me.left + Math.round(valueOffset);\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar heightOffset = (me.height * decimal);\n\t\t\t\t\treturn me.top + Math.round(heightOffset);\n\t\t\t\t}\n\t\t\t},\n\t\t\tgetPixelForTick: function(index) {\n\t\t\t\treturn this.getPixelForValue(this.tickMoments[index], null, null);\n\t\t\t},\n\t\t\tgetValueForPixel: function(pixel) {\n\t\t\t\tvar me = this;\n\t\t\t\tvar innerDimension = me.isHorizontal() ? me.width : me.height;\n\t\t\t\tvar offset = (pixel - (me.isHorizontal() ? me.left : me.top)) / innerDimension;\n\t\t\t\toffset *= me.scaleSizeInUnits;\n\t\t\t\treturn me.firstTick.clone().add(moment.duration(offset, me.tickUnit).asSeconds(), 'seconds');\n\t\t\t},\n\t\t\tparseTime: function(label) {\n\t\t\t\tvar me = this;\n\t\t\t\tif (typeof me.options.time.parser === 'string') {\n\t\t\t\t\treturn moment(label, me.options.time.parser);\n\t\t\t\t}\n\t\t\t\tif (typeof me.options.time.parser === 'function') {\n\t\t\t\t\treturn me.options.time.parser(label);\n\t\t\t\t}\n\t\t\t\t// Date objects\n\t\t\t\tif (typeof label.getMonth === 'function' || typeof label === 'number') {\n\t\t\t\t\treturn moment(label);\n\t\t\t\t}\n\t\t\t\t// Moment support\n\t\t\t\tif (label.isValid && label.isValid()) {\n\t\t\t\t\treturn label;\n\t\t\t\t}\n\t\t\t\t// Custom parsing (return an instance of moment)\n\t\t\t\tif (typeof me.options.time.format !== 'string' && me.options.time.format.call) {\n\t\t\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser. See http://nnnick.github.io/Chart.js/docs-v2/#scales-time-scale');\n\t\t\t\t\treturn me.options.time.format(label);\n\t\t\t\t}\n\t\t\t\t// Moment format parsing\n\t\t\t\treturn moment(label, me.options.time.format);\n\t\t\t}\n\t\t});\n\t\tChart.scaleService.registerScaleType('time', TimeScale, defaultConfig);\n\t\n\t};\n\n\n/***/ },\n/* 250 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* MIT license */\r\n\tvar colorNames = __webpack_require__(254);\r\n\t\r\n\tmodule.exports = {\r\n\t   getRgba: getRgba,\r\n\t   getHsla: getHsla,\r\n\t   getRgb: getRgb,\r\n\t   getHsl: getHsl,\r\n\t   getHwb: getHwb,\r\n\t   getAlpha: getAlpha,\r\n\t\r\n\t   hexString: hexString,\r\n\t   rgbString: rgbString,\r\n\t   rgbaString: rgbaString,\r\n\t   percentString: percentString,\r\n\t   percentaString: percentaString,\r\n\t   hslString: hslString,\r\n\t   hslaString: hslaString,\r\n\t   hwbString: hwbString,\r\n\t   keyword: keyword\r\n\t}\r\n\t\r\n\tfunction getRgba(string) {\r\n\t   if (!string) {\r\n\t      return;\r\n\t   }\r\n\t   var abbr =  /^#([a-fA-F0-9]{3})$/,\r\n\t       hex =  /^#([a-fA-F0-9]{6})$/,\r\n\t       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/,\r\n\t       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/,\r\n\t       keyword = /(\\w+)/;\r\n\t\r\n\t   var rgb = [0, 0, 0],\r\n\t       a = 1,\r\n\t       match = string.match(abbr);\r\n\t   if (match) {\r\n\t      match = match[1];\r\n\t      for (var i = 0; i < rgb.length; i++) {\r\n\t         rgb[i] = parseInt(match[i] + match[i], 16);\r\n\t      }\r\n\t   }\r\n\t   else if (match = string.match(hex)) {\r\n\t      match = match[1];\r\n\t      for (var i = 0; i < rgb.length; i++) {\r\n\t         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\r\n\t      }\r\n\t   }\r\n\t   else if (match = string.match(rgba)) {\r\n\t      for (var i = 0; i < rgb.length; i++) {\r\n\t         rgb[i] = parseInt(match[i + 1]);\r\n\t      }\r\n\t      a = parseFloat(match[4]);\r\n\t   }\r\n\t   else if (match = string.match(per)) {\r\n\t      for (var i = 0; i < rgb.length; i++) {\r\n\t         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\r\n\t      }\r\n\t      a = parseFloat(match[4]);\r\n\t   }\r\n\t   else if (match = string.match(keyword)) {\r\n\t      if (match[1] == \"transparent\") {\r\n\t         return [0, 0, 0, 0];\r\n\t      }\r\n\t      rgb = colorNames[match[1]];\r\n\t      if (!rgb) {\r\n\t         return;\r\n\t      }\r\n\t   }\r\n\t\r\n\t   for (var i = 0; i < rgb.length; i++) {\r\n\t      rgb[i] = scale(rgb[i], 0, 255);\r\n\t   }\r\n\t   if (!a && a != 0) {\r\n\t      a = 1;\r\n\t   }\r\n\t   else {\r\n\t      a = scale(a, 0, 1);\r\n\t   }\r\n\t   rgb[3] = a;\r\n\t   return rgb;\r\n\t}\r\n\t\r\n\tfunction getHsla(string) {\r\n\t   if (!string) {\r\n\t      return;\r\n\t   }\r\n\t   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n\t   var match = string.match(hsl);\r\n\t   if (match) {\r\n\t      var alpha = parseFloat(match[4]);\r\n\t      var h = scale(parseInt(match[1]), 0, 360),\r\n\t          s = scale(parseFloat(match[2]), 0, 100),\r\n\t          l = scale(parseFloat(match[3]), 0, 100),\r\n\t          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n\t      return [h, s, l, a];\r\n\t   }\r\n\t}\r\n\t\r\n\tfunction getHwb(string) {\r\n\t   if (!string) {\r\n\t      return;\r\n\t   }\r\n\t   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n\t   var match = string.match(hwb);\r\n\t   if (match) {\r\n\t    var alpha = parseFloat(match[4]);\r\n\t      var h = scale(parseInt(match[1]), 0, 360),\r\n\t          w = scale(parseFloat(match[2]), 0, 100),\r\n\t          b = scale(parseFloat(match[3]), 0, 100),\r\n\t          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n\t      return [h, w, b, a];\r\n\t   }\r\n\t}\r\n\t\r\n\tfunction getRgb(string) {\r\n\t   var rgba = getRgba(string);\r\n\t   return rgba && rgba.slice(0, 3);\r\n\t}\r\n\t\r\n\tfunction getHsl(string) {\r\n\t  var hsla = getHsla(string);\r\n\t  return hsla && hsla.slice(0, 3);\r\n\t}\r\n\t\r\n\tfunction getAlpha(string) {\r\n\t   var vals = getRgba(string);\r\n\t   if (vals) {\r\n\t      return vals[3];\r\n\t   }\r\n\t   else if (vals = getHsla(string)) {\r\n\t      return vals[3];\r\n\t   }\r\n\t   else if (vals = getHwb(string)) {\r\n\t      return vals[3];\r\n\t   }\r\n\t}\r\n\t\r\n\t// generators\r\n\tfunction hexString(rgb) {\r\n\t   return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\r\n\t              + hexDouble(rgb[2]);\r\n\t}\r\n\t\r\n\tfunction rgbString(rgba, alpha) {\r\n\t   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n\t      return rgbaString(rgba, alpha);\r\n\t   }\r\n\t   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\r\n\t}\r\n\t\r\n\tfunction rgbaString(rgba, alpha) {\r\n\t   if (alpha === undefined) {\r\n\t      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\r\n\t   }\r\n\t   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\r\n\t           + \", \" + alpha + \")\";\r\n\t}\r\n\t\r\n\tfunction percentString(rgba, alpha) {\r\n\t   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n\t      return percentaString(rgba, alpha);\r\n\t   }\r\n\t   var r = Math.round(rgba[0]/255 * 100),\r\n\t       g = Math.round(rgba[1]/255 * 100),\r\n\t       b = Math.round(rgba[2]/255 * 100);\r\n\t\r\n\t   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\r\n\t}\r\n\t\r\n\tfunction percentaString(rgba, alpha) {\r\n\t   var r = Math.round(rgba[0]/255 * 100),\r\n\t       g = Math.round(rgba[1]/255 * 100),\r\n\t       b = Math.round(rgba[2]/255 * 100);\r\n\t   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\r\n\t}\r\n\t\r\n\tfunction hslString(hsla, alpha) {\r\n\t   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\r\n\t      return hslaString(hsla, alpha);\r\n\t   }\r\n\t   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\r\n\t}\r\n\t\r\n\tfunction hslaString(hsla, alpha) {\r\n\t   if (alpha === undefined) {\r\n\t      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\r\n\t   }\r\n\t   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\r\n\t           + alpha + \")\";\r\n\t}\r\n\t\r\n\t// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\r\n\t// (hwb have alpha optional & 1 is default value)\r\n\tfunction hwbString(hwb, alpha) {\r\n\t   if (alpha === undefined) {\r\n\t      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\r\n\t   }\r\n\t   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\r\n\t           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\r\n\t}\r\n\t\r\n\tfunction keyword(rgb) {\r\n\t  return reverseNames[rgb.slice(0, 3)];\r\n\t}\r\n\t\r\n\t// helpers\r\n\tfunction scale(num, min, max) {\r\n\t   return Math.min(Math.max(min, num), max);\r\n\t}\r\n\t\r\n\tfunction hexDouble(num) {\r\n\t  var str = num.toString(16).toUpperCase();\r\n\t  return (str.length < 2) ? \"0\" + str : str;\r\n\t}\r\n\t\r\n\t\r\n\t//create a list of reverse color names\r\n\tvar reverseNames = {};\r\n\tfor (var name in colorNames) {\r\n\t   reverseNames[colorNames[name]] = name;\r\n\t}\r\n\n\n/***/ },\n/* 251 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* MIT license */\n\tvar convert = __webpack_require__(253);\n\tvar string = __webpack_require__(250);\n\t\n\tvar Color = function (obj) {\n\t\tif (obj instanceof Color) {\n\t\t\treturn obj;\n\t\t}\n\t\tif (!(this instanceof Color)) {\n\t\t\treturn new Color(obj);\n\t\t}\n\t\n\t\tthis.valid = false;\n\t\tthis.values = {\n\t\t\trgb: [0, 0, 0],\n\t\t\thsl: [0, 0, 0],\n\t\t\thsv: [0, 0, 0],\n\t\t\thwb: [0, 0, 0],\n\t\t\tcmyk: [0, 0, 0, 0],\n\t\t\talpha: 1\n\t\t};\n\t\n\t\t// parse Color() argument\n\t\tvar vals;\n\t\tif (typeof obj === 'string') {\n\t\t\tvals = string.getRgba(obj);\n\t\t\tif (vals) {\n\t\t\t\tthis.setValues('rgb', vals);\n\t\t\t} else if (vals = string.getHsla(obj)) {\n\t\t\t\tthis.setValues('hsl', vals);\n\t\t\t} else if (vals = string.getHwb(obj)) {\n\t\t\t\tthis.setValues('hwb', vals);\n\t\t\t}\n\t\t} else if (typeof obj === 'object') {\n\t\t\tvals = obj;\n\t\t\tif (vals.r !== undefined || vals.red !== undefined) {\n\t\t\t\tthis.setValues('rgb', vals);\n\t\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\n\t\t\t\tthis.setValues('hsl', vals);\n\t\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\n\t\t\t\tthis.setValues('hsv', vals);\n\t\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\n\t\t\t\tthis.setValues('hwb', vals);\n\t\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\n\t\t\t\tthis.setValues('cmyk', vals);\n\t\t\t}\n\t\t}\n\t};\n\t\n\tColor.prototype = {\n\t\tisValid: function () {\n\t\t\treturn this.valid;\n\t\t},\n\t\trgb: function () {\n\t\t\treturn this.setSpace('rgb', arguments);\n\t\t},\n\t\thsl: function () {\n\t\t\treturn this.setSpace('hsl', arguments);\n\t\t},\n\t\thsv: function () {\n\t\t\treturn this.setSpace('hsv', arguments);\n\t\t},\n\t\thwb: function () {\n\t\t\treturn this.setSpace('hwb', arguments);\n\t\t},\n\t\tcmyk: function () {\n\t\t\treturn this.setSpace('cmyk', arguments);\n\t\t},\n\t\n\t\trgbArray: function () {\n\t\t\treturn this.values.rgb;\n\t\t},\n\t\thslArray: function () {\n\t\t\treturn this.values.hsl;\n\t\t},\n\t\thsvArray: function () {\n\t\t\treturn this.values.hsv;\n\t\t},\n\t\thwbArray: function () {\n\t\t\tvar values = this.values;\n\t\t\tif (values.alpha !== 1) {\n\t\t\t\treturn values.hwb.concat([values.alpha]);\n\t\t\t}\n\t\t\treturn values.hwb;\n\t\t},\n\t\tcmykArray: function () {\n\t\t\treturn this.values.cmyk;\n\t\t},\n\t\trgbaArray: function () {\n\t\t\tvar values = this.values;\n\t\t\treturn values.rgb.concat([values.alpha]);\n\t\t},\n\t\thslaArray: function () {\n\t\t\tvar values = this.values;\n\t\t\treturn values.hsl.concat([values.alpha]);\n\t\t},\n\t\talpha: function (val) {\n\t\t\tif (val === undefined) {\n\t\t\t\treturn this.values.alpha;\n\t\t\t}\n\t\t\tthis.setValues('alpha', val);\n\t\t\treturn this;\n\t\t},\n\t\n\t\tred: function (val) {\n\t\t\treturn this.setChannel('rgb', 0, val);\n\t\t},\n\t\tgreen: function (val) {\n\t\t\treturn this.setChannel('rgb', 1, val);\n\t\t},\n\t\tblue: function (val) {\n\t\t\treturn this.setChannel('rgb', 2, val);\n\t\t},\n\t\thue: function (val) {\n\t\t\tif (val) {\n\t\t\t\tval %= 360;\n\t\t\t\tval = val < 0 ? 360 + val : val;\n\t\t\t}\n\t\t\treturn this.setChannel('hsl', 0, val);\n\t\t},\n\t\tsaturation: function (val) {\n\t\t\treturn this.setChannel('hsl', 1, val);\n\t\t},\n\t\tlightness: function (val) {\n\t\t\treturn this.setChannel('hsl', 2, val);\n\t\t},\n\t\tsaturationv: function (val) {\n\t\t\treturn this.setChannel('hsv', 1, val);\n\t\t},\n\t\twhiteness: function (val) {\n\t\t\treturn this.setChannel('hwb', 1, val);\n\t\t},\n\t\tblackness: function (val) {\n\t\t\treturn this.setChannel('hwb', 2, val);\n\t\t},\n\t\tvalue: function (val) {\n\t\t\treturn this.setChannel('hsv', 2, val);\n\t\t},\n\t\tcyan: function (val) {\n\t\t\treturn this.setChannel('cmyk', 0, val);\n\t\t},\n\t\tmagenta: function (val) {\n\t\t\treturn this.setChannel('cmyk', 1, val);\n\t\t},\n\t\tyellow: function (val) {\n\t\t\treturn this.setChannel('cmyk', 2, val);\n\t\t},\n\t\tblack: function (val) {\n\t\t\treturn this.setChannel('cmyk', 3, val);\n\t\t},\n\t\n\t\thexString: function () {\n\t\t\treturn string.hexString(this.values.rgb);\n\t\t},\n\t\trgbString: function () {\n\t\t\treturn string.rgbString(this.values.rgb, this.values.alpha);\n\t\t},\n\t\trgbaString: function () {\n\t\t\treturn string.rgbaString(this.values.rgb, this.values.alpha);\n\t\t},\n\t\tpercentString: function () {\n\t\t\treturn string.percentString(this.values.rgb, this.values.alpha);\n\t\t},\n\t\thslString: function () {\n\t\t\treturn string.hslString(this.values.hsl, this.values.alpha);\n\t\t},\n\t\thslaString: function () {\n\t\t\treturn string.hslaString(this.values.hsl, this.values.alpha);\n\t\t},\n\t\thwbString: function () {\n\t\t\treturn string.hwbString(this.values.hwb, this.values.alpha);\n\t\t},\n\t\tkeyword: function () {\n\t\t\treturn string.keyword(this.values.rgb, this.values.alpha);\n\t\t},\n\t\n\t\trgbNumber: function () {\n\t\t\tvar rgb = this.values.rgb;\n\t\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\n\t\t},\n\t\n\t\tluminosity: function () {\n\t\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\t\tvar rgb = this.values.rgb;\n\t\t\tvar lum = [];\n\t\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\t\tvar chan = rgb[i] / 255;\n\t\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t\t}\n\t\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t\t},\n\t\n\t\tcontrast: function (color2) {\n\t\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\t\tvar lum1 = this.luminosity();\n\t\t\tvar lum2 = color2.luminosity();\n\t\t\tif (lum1 > lum2) {\n\t\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t\t}\n\t\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t\t},\n\t\n\t\tlevel: function (color2) {\n\t\t\tvar contrastRatio = this.contrast(color2);\n\t\t\tif (contrastRatio >= 7.1) {\n\t\t\t\treturn 'AAA';\n\t\t\t}\n\t\n\t\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t\t},\n\t\n\t\tdark: function () {\n\t\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\t\tvar rgb = this.values.rgb;\n\t\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\t\treturn yiq < 128;\n\t\t},\n\t\n\t\tlight: function () {\n\t\t\treturn !this.dark();\n\t\t},\n\t\n\t\tnegate: function () {\n\t\t\tvar rgb = [];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\trgb[i] = 255 - this.values.rgb[i];\n\t\t\t}\n\t\t\tthis.setValues('rgb', rgb);\n\t\t\treturn this;\n\t\t},\n\t\n\t\tlighten: function (ratio) {\n\t\t\tvar hsl = this.values.hsl;\n\t\t\thsl[2] += hsl[2] * ratio;\n\t\t\tthis.setValues('hsl', hsl);\n\t\t\treturn this;\n\t\t},\n\t\n\t\tdarken: function (ratio) {\n\t\t\tvar hsl = this.values.hsl;\n\t\t\thsl[2] -= hsl[2] * ratio;\n\t\t\tthis.setValues('hsl', hsl);\n\t\t\treturn this;\n\t\t},\n\t\n\t\tsaturate: function (ratio) {\n\t\t\tvar hsl = this.values.hsl;\n\t\t\thsl[1] += hsl[1] * ratio;\n\t\t\tthis.setValues('hsl', hsl);\n\t\t\treturn this;\n\t\t},\n\t\n\t\tdesaturate: function (ratio) {\n\t\t\tvar hsl = this.values.hsl;\n\t\t\thsl[1] -= hsl[1] * ratio;\n\t\t\tthis.setValues('hsl', hsl);\n\t\t\treturn this;\n\t\t},\n\t\n\t\twhiten: function (ratio) {\n\t\t\tvar hwb = this.values.hwb;\n\t\t\thwb[1] += hwb[1] * ratio;\n\t\t\tthis.setValues('hwb', hwb);\n\t\t\treturn this;\n\t\t},\n\t\n\t\tblacken: function (ratio) {\n\t\t\tvar hwb = this.values.hwb;\n\t\t\thwb[2] += hwb[2] * ratio;\n\t\t\tthis.setValues('hwb', hwb);\n\t\t\treturn this;\n\t\t},\n\t\n\t\tgreyscale: function () {\n\t\t\tvar rgb = this.values.rgb;\n\t\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\t\tthis.setValues('rgb', [val, val, val]);\n\t\t\treturn this;\n\t\t},\n\t\n\t\tclearer: function (ratio) {\n\t\t\tvar alpha = this.values.alpha;\n\t\t\tthis.setValues('alpha', alpha - (alpha * ratio));\n\t\t\treturn this;\n\t\t},\n\t\n\t\topaquer: function (ratio) {\n\t\t\tvar alpha = this.values.alpha;\n\t\t\tthis.setValues('alpha', alpha + (alpha * ratio));\n\t\t\treturn this;\n\t\t},\n\t\n\t\trotate: function (degrees) {\n\t\t\tvar hsl = this.values.hsl;\n\t\t\tvar hue = (hsl[0] + degrees) % 360;\n\t\t\thsl[0] = hue < 0 ? 360 + hue : hue;\n\t\t\tthis.setValues('hsl', hsl);\n\t\t\treturn this;\n\t\t},\n\t\n\t\t/**\n\t\t * Ported from sass implementation in C\n\t\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\t */\n\t\tmix: function (mixinColor, weight) {\n\t\t\tvar color1 = this;\n\t\t\tvar color2 = mixinColor;\n\t\t\tvar p = weight === undefined ? 0.5 : weight;\n\t\n\t\t\tvar w = 2 * p - 1;\n\t\t\tvar a = color1.alpha() - color2.alpha();\n\t\n\t\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\t\tvar w2 = 1 - w1;\n\t\n\t\t\treturn this\n\t\t\t\t.rgb(\n\t\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\n\t\t\t\t)\n\t\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n\t\t},\n\t\n\t\ttoJSON: function () {\n\t\t\treturn this.rgb();\n\t\t},\n\t\n\t\tclone: function () {\n\t\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n\t\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\n\t\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\n\t\t\t// except 'alpha' which is a number.\n\t\t\tvar result = new Color();\n\t\t\tvar source = this.values;\n\t\t\tvar target = result.values;\n\t\t\tvar value, type;\n\t\n\t\t\tfor (var prop in source) {\n\t\t\t\tif (source.hasOwnProperty(prop)) {\n\t\t\t\t\tvalue = source[prop];\n\t\t\t\t\ttype = ({}).toString.call(value);\n\t\t\t\t\tif (type === '[object Array]') {\n\t\t\t\t\t\ttarget[prop] = value.slice(0);\n\t\t\t\t\t} else if (type === '[object Number]') {\n\t\t\t\t\t\ttarget[prop] = value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error('unexpected color value:', value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn result;\n\t\t}\n\t};\n\t\n\tColor.prototype.spaces = {\n\t\trgb: ['red', 'green', 'blue'],\n\t\thsl: ['hue', 'saturation', 'lightness'],\n\t\thsv: ['hue', 'saturation', 'value'],\n\t\thwb: ['hue', 'whiteness', 'blackness'],\n\t\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\n\t};\n\t\n\tColor.prototype.maxes = {\n\t\trgb: [255, 255, 255],\n\t\thsl: [360, 100, 100],\n\t\thsv: [360, 100, 100],\n\t\thwb: [360, 100, 100],\n\t\tcmyk: [100, 100, 100, 100]\n\t};\n\t\n\tColor.prototype.getValues = function (space) {\n\t\tvar values = this.values;\n\t\tvar vals = {};\n\t\n\t\tfor (var i = 0; i < space.length; i++) {\n\t\t\tvals[space.charAt(i)] = values[space][i];\n\t\t}\n\t\n\t\tif (values.alpha !== 1) {\n\t\t\tvals.a = values.alpha;\n\t\t}\n\t\n\t\t// {r: 255, g: 255, b: 255, a: 0.4}\n\t\treturn vals;\n\t};\n\t\n\tColor.prototype.setValues = function (space, vals) {\n\t\tvar values = this.values;\n\t\tvar spaces = this.spaces;\n\t\tvar maxes = this.maxes;\n\t\tvar alpha = 1;\n\t\tvar i;\n\t\n\t\tthis.valid = true;\n\t\n\t\tif (space === 'alpha') {\n\t\t\talpha = vals;\n\t\t} else if (vals.length) {\n\t\t\t// [10, 10, 10]\n\t\t\tvalues[space] = vals.slice(0, space.length);\n\t\t\talpha = vals[space.length];\n\t\t} else if (vals[space.charAt(0)] !== undefined) {\n\t\t\t// {r: 10, g: 10, b: 10}\n\t\t\tfor (i = 0; i < space.length; i++) {\n\t\t\t\tvalues[space][i] = vals[space.charAt(i)];\n\t\t\t}\n\t\n\t\t\talpha = vals.a;\n\t\t} else if (vals[spaces[space][0]] !== undefined) {\n\t\t\t// {red: 10, green: 10, blue: 10}\n\t\t\tvar chans = spaces[space];\n\t\n\t\t\tfor (i = 0; i < space.length; i++) {\n\t\t\t\tvalues[space][i] = vals[chans[i]];\n\t\t\t}\n\t\n\t\t\talpha = vals.alpha;\n\t\t}\n\t\n\t\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\n\t\n\t\tif (space === 'alpha') {\n\t\t\treturn false;\n\t\t}\n\t\n\t\tvar capped;\n\t\n\t\t// cap values of the space prior converting all values\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n\t\t\tvalues[space][i] = Math.round(capped);\n\t\t}\n\t\n\t\t// convert to all the other color spaces\n\t\tfor (var sname in spaces) {\n\t\t\tif (sname !== space) {\n\t\t\t\tvalues[sname] = convert[space][sname](values[space]);\n\t\t\t}\n\t\t}\n\t\n\t\treturn true;\n\t};\n\t\n\tColor.prototype.setSpace = function (space, args) {\n\t\tvar vals = args[0];\n\t\n\t\tif (vals === undefined) {\n\t\t\t// color.rgb()\n\t\t\treturn this.getValues(space);\n\t\t}\n\t\n\t\t// color.rgb(10, 10, 10)\n\t\tif (typeof vals === 'number') {\n\t\t\tvals = Array.prototype.slice.call(args);\n\t\t}\n\t\n\t\tthis.setValues(space, vals);\n\t\treturn this;\n\t};\n\t\n\tColor.prototype.setChannel = function (space, index, val) {\n\t\tvar svalues = this.values[space];\n\t\tif (val === undefined) {\n\t\t\t// color.red()\n\t\t\treturn svalues[index];\n\t\t} else if (val === svalues[index]) {\n\t\t\t// color.red(color.red())\n\t\t\treturn this;\n\t\t}\n\t\n\t\t// color.red(100)\n\t\tsvalues[index] = val;\n\t\tthis.setValues(space, svalues);\n\t\n\t\treturn this;\n\t};\n\t\n\tif (typeof window !== 'undefined') {\n\t\twindow.Color = Color;\n\t}\n\t\n\tmodule.exports = Color;\n\n\n/***/ },\n/* 252 */\n/***/ function(module, exports) {\n\n\t/* MIT license */\n\t\n\tmodule.exports = {\n\t  rgb2hsl: rgb2hsl,\n\t  rgb2hsv: rgb2hsv,\n\t  rgb2hwb: rgb2hwb,\n\t  rgb2cmyk: rgb2cmyk,\n\t  rgb2keyword: rgb2keyword,\n\t  rgb2xyz: rgb2xyz,\n\t  rgb2lab: rgb2lab,\n\t  rgb2lch: rgb2lch,\n\t\n\t  hsl2rgb: hsl2rgb,\n\t  hsl2hsv: hsl2hsv,\n\t  hsl2hwb: hsl2hwb,\n\t  hsl2cmyk: hsl2cmyk,\n\t  hsl2keyword: hsl2keyword,\n\t\n\t  hsv2rgb: hsv2rgb,\n\t  hsv2hsl: hsv2hsl,\n\t  hsv2hwb: hsv2hwb,\n\t  hsv2cmyk: hsv2cmyk,\n\t  hsv2keyword: hsv2keyword,\n\t\n\t  hwb2rgb: hwb2rgb,\n\t  hwb2hsl: hwb2hsl,\n\t  hwb2hsv: hwb2hsv,\n\t  hwb2cmyk: hwb2cmyk,\n\t  hwb2keyword: hwb2keyword,\n\t\n\t  cmyk2rgb: cmyk2rgb,\n\t  cmyk2hsl: cmyk2hsl,\n\t  cmyk2hsv: cmyk2hsv,\n\t  cmyk2hwb: cmyk2hwb,\n\t  cmyk2keyword: cmyk2keyword,\n\t\n\t  keyword2rgb: keyword2rgb,\n\t  keyword2hsl: keyword2hsl,\n\t  keyword2hsv: keyword2hsv,\n\t  keyword2hwb: keyword2hwb,\n\t  keyword2cmyk: keyword2cmyk,\n\t  keyword2lab: keyword2lab,\n\t  keyword2xyz: keyword2xyz,\n\t\n\t  xyz2rgb: xyz2rgb,\n\t  xyz2lab: xyz2lab,\n\t  xyz2lch: xyz2lch,\n\t\n\t  lab2xyz: lab2xyz,\n\t  lab2rgb: lab2rgb,\n\t  lab2lch: lab2lch,\n\t\n\t  lch2lab: lch2lab,\n\t  lch2xyz: lch2xyz,\n\t  lch2rgb: lch2rgb\n\t}\n\t\n\t\n\tfunction rgb2hsl(rgb) {\n\t  var r = rgb[0]/255,\n\t      g = rgb[1]/255,\n\t      b = rgb[2]/255,\n\t      min = Math.min(r, g, b),\n\t      max = Math.max(r, g, b),\n\t      delta = max - min,\n\t      h, s, l;\n\t\n\t  if (max == min)\n\t    h = 0;\n\t  else if (r == max)\n\t    h = (g - b) / delta;\n\t  else if (g == max)\n\t    h = 2 + (b - r) / delta;\n\t  else if (b == max)\n\t    h = 4 + (r - g)/ delta;\n\t\n\t  h = Math.min(h * 60, 360);\n\t\n\t  if (h < 0)\n\t    h += 360;\n\t\n\t  l = (min + max) / 2;\n\t\n\t  if (max == min)\n\t    s = 0;\n\t  else if (l <= 0.5)\n\t    s = delta / (max + min);\n\t  else\n\t    s = delta / (2 - max - min);\n\t\n\t  return [h, s * 100, l * 100];\n\t}\n\t\n\tfunction rgb2hsv(rgb) {\n\t  var r = rgb[0],\n\t      g = rgb[1],\n\t      b = rgb[2],\n\t      min = Math.min(r, g, b),\n\t      max = Math.max(r, g, b),\n\t      delta = max - min,\n\t      h, s, v;\n\t\n\t  if (max == 0)\n\t    s = 0;\n\t  else\n\t    s = (delta/max * 1000)/10;\n\t\n\t  if (max == min)\n\t    h = 0;\n\t  else if (r == max)\n\t    h = (g - b) / delta;\n\t  else if (g == max)\n\t    h = 2 + (b - r) / delta;\n\t  else if (b == max)\n\t    h = 4 + (r - g) / delta;\n\t\n\t  h = Math.min(h * 60, 360);\n\t\n\t  if (h < 0)\n\t    h += 360;\n\t\n\t  v = ((max / 255) * 1000) / 10;\n\t\n\t  return [h, s, v];\n\t}\n\t\n\tfunction rgb2hwb(rgb) {\n\t  var r = rgb[0],\n\t      g = rgb[1],\n\t      b = rgb[2],\n\t      h = rgb2hsl(rgb)[0],\n\t      w = 1/255 * Math.min(r, Math.min(g, b)),\n\t      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\t\n\t  return [h, w * 100, b * 100];\n\t}\n\t\n\tfunction rgb2cmyk(rgb) {\n\t  var r = rgb[0] / 255,\n\t      g = rgb[1] / 255,\n\t      b = rgb[2] / 255,\n\t      c, m, y, k;\n\t\n\t  k = Math.min(1 - r, 1 - g, 1 - b);\n\t  c = (1 - r - k) / (1 - k) || 0;\n\t  m = (1 - g - k) / (1 - k) || 0;\n\t  y = (1 - b - k) / (1 - k) || 0;\n\t  return [c * 100, m * 100, y * 100, k * 100];\n\t}\n\t\n\tfunction rgb2keyword(rgb) {\n\t  return reverseKeywords[JSON.stringify(rgb)];\n\t}\n\t\n\tfunction rgb2xyz(rgb) {\n\t  var r = rgb[0] / 255,\n\t      g = rgb[1] / 255,\n\t      b = rgb[2] / 255;\n\t\n\t  // assume sRGB\n\t  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\t  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\t  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\t\n\t  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\t  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\t  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\t\n\t  return [x * 100, y *100, z * 100];\n\t}\n\t\n\tfunction rgb2lab(rgb) {\n\t  var xyz = rgb2xyz(rgb),\n\t        x = xyz[0],\n\t        y = xyz[1],\n\t        z = xyz[2],\n\t        l, a, b;\n\t\n\t  x /= 95.047;\n\t  y /= 100;\n\t  z /= 108.883;\n\t\n\t  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n\t  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n\t  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\t\n\t  l = (116 * y) - 16;\n\t  a = 500 * (x - y);\n\t  b = 200 * (y - z);\n\t\n\t  return [l, a, b];\n\t}\n\t\n\tfunction rgb2lch(args) {\n\t  return lab2lch(rgb2lab(args));\n\t}\n\t\n\tfunction hsl2rgb(hsl) {\n\t  var h = hsl[0] / 360,\n\t      s = hsl[1] / 100,\n\t      l = hsl[2] / 100,\n\t      t1, t2, t3, rgb, val;\n\t\n\t  if (s == 0) {\n\t    val = l * 255;\n\t    return [val, val, val];\n\t  }\n\t\n\t  if (l < 0.5)\n\t    t2 = l * (1 + s);\n\t  else\n\t    t2 = l + s - l * s;\n\t  t1 = 2 * l - t2;\n\t\n\t  rgb = [0, 0, 0];\n\t  for (var i = 0; i < 3; i++) {\n\t    t3 = h + 1 / 3 * - (i - 1);\n\t    t3 < 0 && t3++;\n\t    t3 > 1 && t3--;\n\t\n\t    if (6 * t3 < 1)\n\t      val = t1 + (t2 - t1) * 6 * t3;\n\t    else if (2 * t3 < 1)\n\t      val = t2;\n\t    else if (3 * t3 < 2)\n\t      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t    else\n\t      val = t1;\n\t\n\t    rgb[i] = val * 255;\n\t  }\n\t\n\t  return rgb;\n\t}\n\t\n\tfunction hsl2hsv(hsl) {\n\t  var h = hsl[0],\n\t      s = hsl[1] / 100,\n\t      l = hsl[2] / 100,\n\t      sv, v;\n\t\n\t  if(l === 0) {\n\t      // no need to do calc on black\n\t      // also avoids divide by 0 error\n\t      return [0, 0, 0];\n\t  }\n\t\n\t  l *= 2;\n\t  s *= (l <= 1) ? l : 2 - l;\n\t  v = (l + s) / 2;\n\t  sv = (2 * s) / (l + s);\n\t  return [h, sv * 100, v * 100];\n\t}\n\t\n\tfunction hsl2hwb(args) {\n\t  return rgb2hwb(hsl2rgb(args));\n\t}\n\t\n\tfunction hsl2cmyk(args) {\n\t  return rgb2cmyk(hsl2rgb(args));\n\t}\n\t\n\tfunction hsl2keyword(args) {\n\t  return rgb2keyword(hsl2rgb(args));\n\t}\n\t\n\t\n\tfunction hsv2rgb(hsv) {\n\t  var h = hsv[0] / 60,\n\t      s = hsv[1] / 100,\n\t      v = hsv[2] / 100,\n\t      hi = Math.floor(h) % 6;\n\t\n\t  var f = h - Math.floor(h),\n\t      p = 255 * v * (1 - s),\n\t      q = 255 * v * (1 - (s * f)),\n\t      t = 255 * v * (1 - (s * (1 - f))),\n\t      v = 255 * v;\n\t\n\t  switch(hi) {\n\t    case 0:\n\t      return [v, t, p];\n\t    case 1:\n\t      return [q, v, p];\n\t    case 2:\n\t      return [p, v, t];\n\t    case 3:\n\t      return [p, q, v];\n\t    case 4:\n\t      return [t, p, v];\n\t    case 5:\n\t      return [v, p, q];\n\t  }\n\t}\n\t\n\tfunction hsv2hsl(hsv) {\n\t  var h = hsv[0],\n\t      s = hsv[1] / 100,\n\t      v = hsv[2] / 100,\n\t      sl, l;\n\t\n\t  l = (2 - s) * v;\n\t  sl = s * v;\n\t  sl /= (l <= 1) ? l : 2 - l;\n\t  sl = sl || 0;\n\t  l /= 2;\n\t  return [h, sl * 100, l * 100];\n\t}\n\t\n\tfunction hsv2hwb(args) {\n\t  return rgb2hwb(hsv2rgb(args))\n\t}\n\t\n\tfunction hsv2cmyk(args) {\n\t  return rgb2cmyk(hsv2rgb(args));\n\t}\n\t\n\tfunction hsv2keyword(args) {\n\t  return rgb2keyword(hsv2rgb(args));\n\t}\n\t\n\t// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\tfunction hwb2rgb(hwb) {\n\t  var h = hwb[0] / 360,\n\t      wh = hwb[1] / 100,\n\t      bl = hwb[2] / 100,\n\t      ratio = wh + bl,\n\t      i, v, f, n;\n\t\n\t  // wh + bl cant be > 1\n\t  if (ratio > 1) {\n\t    wh /= ratio;\n\t    bl /= ratio;\n\t  }\n\t\n\t  i = Math.floor(6 * h);\n\t  v = 1 - bl;\n\t  f = 6 * h - i;\n\t  if ((i & 0x01) != 0) {\n\t    f = 1 - f;\n\t  }\n\t  n = wh + f * (v - wh);  // linear interpolation\n\t\n\t  switch (i) {\n\t    default:\n\t    case 6:\n\t    case 0: r = v; g = n; b = wh; break;\n\t    case 1: r = n; g = v; b = wh; break;\n\t    case 2: r = wh; g = v; b = n; break;\n\t    case 3: r = wh; g = n; b = v; break;\n\t    case 4: r = n; g = wh; b = v; break;\n\t    case 5: r = v; g = wh; b = n; break;\n\t  }\n\t\n\t  return [r * 255, g * 255, b * 255];\n\t}\n\t\n\tfunction hwb2hsl(args) {\n\t  return rgb2hsl(hwb2rgb(args));\n\t}\n\t\n\tfunction hwb2hsv(args) {\n\t  return rgb2hsv(hwb2rgb(args));\n\t}\n\t\n\tfunction hwb2cmyk(args) {\n\t  return rgb2cmyk(hwb2rgb(args));\n\t}\n\t\n\tfunction hwb2keyword(args) {\n\t  return rgb2keyword(hwb2rgb(args));\n\t}\n\t\n\tfunction cmyk2rgb(cmyk) {\n\t  var c = cmyk[0] / 100,\n\t      m = cmyk[1] / 100,\n\t      y = cmyk[2] / 100,\n\t      k = cmyk[3] / 100,\n\t      r, g, b;\n\t\n\t  r = 1 - Math.min(1, c * (1 - k) + k);\n\t  g = 1 - Math.min(1, m * (1 - k) + k);\n\t  b = 1 - Math.min(1, y * (1 - k) + k);\n\t  return [r * 255, g * 255, b * 255];\n\t}\n\t\n\tfunction cmyk2hsl(args) {\n\t  return rgb2hsl(cmyk2rgb(args));\n\t}\n\t\n\tfunction cmyk2hsv(args) {\n\t  return rgb2hsv(cmyk2rgb(args));\n\t}\n\t\n\tfunction cmyk2hwb(args) {\n\t  return rgb2hwb(cmyk2rgb(args));\n\t}\n\t\n\tfunction cmyk2keyword(args) {\n\t  return rgb2keyword(cmyk2rgb(args));\n\t}\n\t\n\t\n\tfunction xyz2rgb(xyz) {\n\t  var x = xyz[0] / 100,\n\t      y = xyz[1] / 100,\n\t      z = xyz[2] / 100,\n\t      r, g, b;\n\t\n\t  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\t  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\t  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\t\n\t  // assume sRGB\n\t  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t    : r = (r * 12.92);\n\t\n\t  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t    : g = (g * 12.92);\n\t\n\t  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t    : b = (b * 12.92);\n\t\n\t  r = Math.min(Math.max(0, r), 1);\n\t  g = Math.min(Math.max(0, g), 1);\n\t  b = Math.min(Math.max(0, b), 1);\n\t\n\t  return [r * 255, g * 255, b * 255];\n\t}\n\t\n\tfunction xyz2lab(xyz) {\n\t  var x = xyz[0],\n\t      y = xyz[1],\n\t      z = xyz[2],\n\t      l, a, b;\n\t\n\t  x /= 95.047;\n\t  y /= 100;\n\t  z /= 108.883;\n\t\n\t  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n\t  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n\t  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\t\n\t  l = (116 * y) - 16;\n\t  a = 500 * (x - y);\n\t  b = 200 * (y - z);\n\t\n\t  return [l, a, b];\n\t}\n\t\n\tfunction xyz2lch(args) {\n\t  return lab2lch(xyz2lab(args));\n\t}\n\t\n\tfunction lab2xyz(lab) {\n\t  var l = lab[0],\n\t      a = lab[1],\n\t      b = lab[2],\n\t      x, y, z, y2;\n\t\n\t  if (l <= 8) {\n\t    y = (l * 100) / 903.3;\n\t    y2 = (7.787 * (y / 100)) + (16 / 116);\n\t  } else {\n\t    y = 100 * Math.pow((l + 16) / 116, 3);\n\t    y2 = Math.pow(y / 100, 1/3);\n\t  }\n\t\n\t  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\t\n\t  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\t\n\t  return [x, y, z];\n\t}\n\t\n\tfunction lab2lch(lab) {\n\t  var l = lab[0],\n\t      a = lab[1],\n\t      b = lab[2],\n\t      hr, h, c;\n\t\n\t  hr = Math.atan2(b, a);\n\t  h = hr * 360 / 2 / Math.PI;\n\t  if (h < 0) {\n\t    h += 360;\n\t  }\n\t  c = Math.sqrt(a * a + b * b);\n\t  return [l, c, h];\n\t}\n\t\n\tfunction lab2rgb(args) {\n\t  return xyz2rgb(lab2xyz(args));\n\t}\n\t\n\tfunction lch2lab(lch) {\n\t  var l = lch[0],\n\t      c = lch[1],\n\t      h = lch[2],\n\t      a, b, hr;\n\t\n\t  hr = h / 360 * 2 * Math.PI;\n\t  a = c * Math.cos(hr);\n\t  b = c * Math.sin(hr);\n\t  return [l, a, b];\n\t}\n\t\n\tfunction lch2xyz(args) {\n\t  return lab2xyz(lch2lab(args));\n\t}\n\t\n\tfunction lch2rgb(args) {\n\t  return lab2rgb(lch2lab(args));\n\t}\n\t\n\tfunction keyword2rgb(keyword) {\n\t  return cssKeywords[keyword];\n\t}\n\t\n\tfunction keyword2hsl(args) {\n\t  return rgb2hsl(keyword2rgb(args));\n\t}\n\t\n\tfunction keyword2hsv(args) {\n\t  return rgb2hsv(keyword2rgb(args));\n\t}\n\t\n\tfunction keyword2hwb(args) {\n\t  return rgb2hwb(keyword2rgb(args));\n\t}\n\t\n\tfunction keyword2cmyk(args) {\n\t  return rgb2cmyk(keyword2rgb(args));\n\t}\n\t\n\tfunction keyword2lab(args) {\n\t  return rgb2lab(keyword2rgb(args));\n\t}\n\t\n\tfunction keyword2xyz(args) {\n\t  return rgb2xyz(keyword2rgb(args));\n\t}\n\t\n\tvar cssKeywords = {\n\t  aliceblue:  [240,248,255],\n\t  antiquewhite: [250,235,215],\n\t  aqua: [0,255,255],\n\t  aquamarine: [127,255,212],\n\t  azure:  [240,255,255],\n\t  beige:  [245,245,220],\n\t  bisque: [255,228,196],\n\t  black:  [0,0,0],\n\t  blanchedalmond: [255,235,205],\n\t  blue: [0,0,255],\n\t  blueviolet: [138,43,226],\n\t  brown:  [165,42,42],\n\t  burlywood:  [222,184,135],\n\t  cadetblue:  [95,158,160],\n\t  chartreuse: [127,255,0],\n\t  chocolate:  [210,105,30],\n\t  coral:  [255,127,80],\n\t  cornflowerblue: [100,149,237],\n\t  cornsilk: [255,248,220],\n\t  crimson:  [220,20,60],\n\t  cyan: [0,255,255],\n\t  darkblue: [0,0,139],\n\t  darkcyan: [0,139,139],\n\t  darkgoldenrod:  [184,134,11],\n\t  darkgray: [169,169,169],\n\t  darkgreen:  [0,100,0],\n\t  darkgrey: [169,169,169],\n\t  darkkhaki:  [189,183,107],\n\t  darkmagenta:  [139,0,139],\n\t  darkolivegreen: [85,107,47],\n\t  darkorange: [255,140,0],\n\t  darkorchid: [153,50,204],\n\t  darkred:  [139,0,0],\n\t  darksalmon: [233,150,122],\n\t  darkseagreen: [143,188,143],\n\t  darkslateblue:  [72,61,139],\n\t  darkslategray:  [47,79,79],\n\t  darkslategrey:  [47,79,79],\n\t  darkturquoise:  [0,206,209],\n\t  darkviolet: [148,0,211],\n\t  deeppink: [255,20,147],\n\t  deepskyblue:  [0,191,255],\n\t  dimgray:  [105,105,105],\n\t  dimgrey:  [105,105,105],\n\t  dodgerblue: [30,144,255],\n\t  firebrick:  [178,34,34],\n\t  floralwhite:  [255,250,240],\n\t  forestgreen:  [34,139,34],\n\t  fuchsia:  [255,0,255],\n\t  gainsboro:  [220,220,220],\n\t  ghostwhite: [248,248,255],\n\t  gold: [255,215,0],\n\t  goldenrod:  [218,165,32],\n\t  gray: [128,128,128],\n\t  green:  [0,128,0],\n\t  greenyellow:  [173,255,47],\n\t  grey: [128,128,128],\n\t  honeydew: [240,255,240],\n\t  hotpink:  [255,105,180],\n\t  indianred:  [205,92,92],\n\t  indigo: [75,0,130],\n\t  ivory:  [255,255,240],\n\t  khaki:  [240,230,140],\n\t  lavender: [230,230,250],\n\t  lavenderblush:  [255,240,245],\n\t  lawngreen:  [124,252,0],\n\t  lemonchiffon: [255,250,205],\n\t  lightblue:  [173,216,230],\n\t  lightcoral: [240,128,128],\n\t  lightcyan:  [224,255,255],\n\t  lightgoldenrodyellow: [250,250,210],\n\t  lightgray:  [211,211,211],\n\t  lightgreen: [144,238,144],\n\t  lightgrey:  [211,211,211],\n\t  lightpink:  [255,182,193],\n\t  lightsalmon:  [255,160,122],\n\t  lightseagreen:  [32,178,170],\n\t  lightskyblue: [135,206,250],\n\t  lightslategray: [119,136,153],\n\t  lightslategrey: [119,136,153],\n\t  lightsteelblue: [176,196,222],\n\t  lightyellow:  [255,255,224],\n\t  lime: [0,255,0],\n\t  limegreen:  [50,205,50],\n\t  linen:  [250,240,230],\n\t  magenta:  [255,0,255],\n\t  maroon: [128,0,0],\n\t  mediumaquamarine: [102,205,170],\n\t  mediumblue: [0,0,205],\n\t  mediumorchid: [186,85,211],\n\t  mediumpurple: [147,112,219],\n\t  mediumseagreen: [60,179,113],\n\t  mediumslateblue:  [123,104,238],\n\t  mediumspringgreen:  [0,250,154],\n\t  mediumturquoise:  [72,209,204],\n\t  mediumvioletred:  [199,21,133],\n\t  midnightblue: [25,25,112],\n\t  mintcream:  [245,255,250],\n\t  mistyrose:  [255,228,225],\n\t  moccasin: [255,228,181],\n\t  navajowhite:  [255,222,173],\n\t  navy: [0,0,128],\n\t  oldlace:  [253,245,230],\n\t  olive:  [128,128,0],\n\t  olivedrab:  [107,142,35],\n\t  orange: [255,165,0],\n\t  orangered:  [255,69,0],\n\t  orchid: [218,112,214],\n\t  palegoldenrod:  [238,232,170],\n\t  palegreen:  [152,251,152],\n\t  paleturquoise:  [175,238,238],\n\t  palevioletred:  [219,112,147],\n\t  papayawhip: [255,239,213],\n\t  peachpuff:  [255,218,185],\n\t  peru: [205,133,63],\n\t  pink: [255,192,203],\n\t  plum: [221,160,221],\n\t  powderblue: [176,224,230],\n\t  purple: [128,0,128],\n\t  rebeccapurple: [102, 51, 153],\n\t  red:  [255,0,0],\n\t  rosybrown:  [188,143,143],\n\t  royalblue:  [65,105,225],\n\t  saddlebrown:  [139,69,19],\n\t  salmon: [250,128,114],\n\t  sandybrown: [244,164,96],\n\t  seagreen: [46,139,87],\n\t  seashell: [255,245,238],\n\t  sienna: [160,82,45],\n\t  silver: [192,192,192],\n\t  skyblue:  [135,206,235],\n\t  slateblue:  [106,90,205],\n\t  slategray:  [112,128,144],\n\t  slategrey:  [112,128,144],\n\t  snow: [255,250,250],\n\t  springgreen:  [0,255,127],\n\t  steelblue:  [70,130,180],\n\t  tan:  [210,180,140],\n\t  teal: [0,128,128],\n\t  thistle:  [216,191,216],\n\t  tomato: [255,99,71],\n\t  turquoise:  [64,224,208],\n\t  violet: [238,130,238],\n\t  wheat:  [245,222,179],\n\t  white:  [255,255,255],\n\t  whitesmoke: [245,245,245],\n\t  yellow: [255,255,0],\n\t  yellowgreen:  [154,205,50]\n\t};\n\t\n\tvar reverseKeywords = {};\n\tfor (var key in cssKeywords) {\n\t  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n\t}\n\n\n/***/ },\n/* 253 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar conversions = __webpack_require__(252);\n\t\n\tvar convert = function() {\n\t   return new Converter();\n\t}\n\t\n\tfor (var func in conversions) {\n\t  // export Raw versions\n\t  convert[func + \"Raw\"] =  (function(func) {\n\t    // accept array or plain args\n\t    return function(arg) {\n\t      if (typeof arg == \"number\")\n\t        arg = Array.prototype.slice.call(arguments);\n\t      return conversions[func](arg);\n\t    }\n\t  })(func);\n\t\n\t  var pair = /(\\w+)2(\\w+)/.exec(func),\n\t      from = pair[1],\n\t      to = pair[2];\n\t\n\t  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\t  convert[from] = convert[from] || {};\n\t\n\t  convert[from][to] = convert[func] = (function(func) { \n\t    return function(arg) {\n\t      if (typeof arg == \"number\")\n\t        arg = Array.prototype.slice.call(arguments);\n\t      \n\t      var val = conversions[func](arg);\n\t      if (typeof val == \"string\" || val === undefined)\n\t        return val; // keyword\n\t\n\t      for (var i = 0; i < val.length; i++)\n\t        val[i] = Math.round(val[i]);\n\t      return val;\n\t    }\n\t  })(func);\n\t}\n\t\n\t\n\t/* Converter does lazy conversion and caching */\n\tvar Converter = function() {\n\t   this.convs = {};\n\t};\n\t\n\t/* Either get the values for a space or\n\t  set the values for a space, depending on args */\n\tConverter.prototype.routeSpace = function(space, args) {\n\t   var values = args[0];\n\t   if (values === undefined) {\n\t      // color.rgb()\n\t      return this.getValues(space);\n\t   }\n\t   // color.rgb(10, 10, 10)\n\t   if (typeof values == \"number\") {\n\t      values = Array.prototype.slice.call(args);        \n\t   }\n\t\n\t   return this.setValues(space, values);\n\t};\n\t  \n\t/* Set the values for a space, invalidating cache */\n\tConverter.prototype.setValues = function(space, values) {\n\t   this.space = space;\n\t   this.convs = {};\n\t   this.convs[space] = values;\n\t   return this;\n\t};\n\t\n\t/* Get the values for a space. If there's already\n\t  a conversion for the space, fetch it, otherwise\n\t  compute it */\n\tConverter.prototype.getValues = function(space) {\n\t   var vals = this.convs[space];\n\t   if (!vals) {\n\t      var fspace = this.space,\n\t          from = this.convs[fspace];\n\t      vals = convert[fspace][space](from);\n\t\n\t      this.convs[space] = vals;\n\t   }\n\t  return vals;\n\t};\n\t\n\t[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n\t   Converter.prototype[space] = function(vals) {\n\t      return this.routeSpace(space, arguments);\n\t   }\n\t});\n\t\n\tmodule.exports = convert;\n\n/***/ },\n/* 254 */\n/***/ function(module, exports) {\n\n\tmodule.exports = {\r\n\t\t\"aliceblue\": [240, 248, 255],\r\n\t\t\"antiquewhite\": [250, 235, 215],\r\n\t\t\"aqua\": [0, 255, 255],\r\n\t\t\"aquamarine\": [127, 255, 212],\r\n\t\t\"azure\": [240, 255, 255],\r\n\t\t\"beige\": [245, 245, 220],\r\n\t\t\"bisque\": [255, 228, 196],\r\n\t\t\"black\": [0, 0, 0],\r\n\t\t\"blanchedalmond\": [255, 235, 205],\r\n\t\t\"blue\": [0, 0, 255],\r\n\t\t\"blueviolet\": [138, 43, 226],\r\n\t\t\"brown\": [165, 42, 42],\r\n\t\t\"burlywood\": [222, 184, 135],\r\n\t\t\"cadetblue\": [95, 158, 160],\r\n\t\t\"chartreuse\": [127, 255, 0],\r\n\t\t\"chocolate\": [210, 105, 30],\r\n\t\t\"coral\": [255, 127, 80],\r\n\t\t\"cornflowerblue\": [100, 149, 237],\r\n\t\t\"cornsilk\": [255, 248, 220],\r\n\t\t\"crimson\": [220, 20, 60],\r\n\t\t\"cyan\": [0, 255, 255],\r\n\t\t\"darkblue\": [0, 0, 139],\r\n\t\t\"darkcyan\": [0, 139, 139],\r\n\t\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\t\"darkgray\": [169, 169, 169],\r\n\t\t\"darkgreen\": [0, 100, 0],\r\n\t\t\"darkgrey\": [169, 169, 169],\r\n\t\t\"darkkhaki\": [189, 183, 107],\r\n\t\t\"darkmagenta\": [139, 0, 139],\r\n\t\t\"darkolivegreen\": [85, 107, 47],\r\n\t\t\"darkorange\": [255, 140, 0],\r\n\t\t\"darkorchid\": [153, 50, 204],\r\n\t\t\"darkred\": [139, 0, 0],\r\n\t\t\"darksalmon\": [233, 150, 122],\r\n\t\t\"darkseagreen\": [143, 188, 143],\r\n\t\t\"darkslateblue\": [72, 61, 139],\r\n\t\t\"darkslategray\": [47, 79, 79],\r\n\t\t\"darkslategrey\": [47, 79, 79],\r\n\t\t\"darkturquoise\": [0, 206, 209],\r\n\t\t\"darkviolet\": [148, 0, 211],\r\n\t\t\"deeppink\": [255, 20, 147],\r\n\t\t\"deepskyblue\": [0, 191, 255],\r\n\t\t\"dimgray\": [105, 105, 105],\r\n\t\t\"dimgrey\": [105, 105, 105],\r\n\t\t\"dodgerblue\": [30, 144, 255],\r\n\t\t\"firebrick\": [178, 34, 34],\r\n\t\t\"floralwhite\": [255, 250, 240],\r\n\t\t\"forestgreen\": [34, 139, 34],\r\n\t\t\"fuchsia\": [255, 0, 255],\r\n\t\t\"gainsboro\": [220, 220, 220],\r\n\t\t\"ghostwhite\": [248, 248, 255],\r\n\t\t\"gold\": [255, 215, 0],\r\n\t\t\"goldenrod\": [218, 165, 32],\r\n\t\t\"gray\": [128, 128, 128],\r\n\t\t\"green\": [0, 128, 0],\r\n\t\t\"greenyellow\": [173, 255, 47],\r\n\t\t\"grey\": [128, 128, 128],\r\n\t\t\"honeydew\": [240, 255, 240],\r\n\t\t\"hotpink\": [255, 105, 180],\r\n\t\t\"indianred\": [205, 92, 92],\r\n\t\t\"indigo\": [75, 0, 130],\r\n\t\t\"ivory\": [255, 255, 240],\r\n\t\t\"khaki\": [240, 230, 140],\r\n\t\t\"lavender\": [230, 230, 250],\r\n\t\t\"lavenderblush\": [255, 240, 245],\r\n\t\t\"lawngreen\": [124, 252, 0],\r\n\t\t\"lemonchiffon\": [255, 250, 205],\r\n\t\t\"lightblue\": [173, 216, 230],\r\n\t\t\"lightcoral\": [240, 128, 128],\r\n\t\t\"lightcyan\": [224, 255, 255],\r\n\t\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\t\"lightgray\": [211, 211, 211],\r\n\t\t\"lightgreen\": [144, 238, 144],\r\n\t\t\"lightgrey\": [211, 211, 211],\r\n\t\t\"lightpink\": [255, 182, 193],\r\n\t\t\"lightsalmon\": [255, 160, 122],\r\n\t\t\"lightseagreen\": [32, 178, 170],\r\n\t\t\"lightskyblue\": [135, 206, 250],\r\n\t\t\"lightslategray\": [119, 136, 153],\r\n\t\t\"lightslategrey\": [119, 136, 153],\r\n\t\t\"lightsteelblue\": [176, 196, 222],\r\n\t\t\"lightyellow\": [255, 255, 224],\r\n\t\t\"lime\": [0, 255, 0],\r\n\t\t\"limegreen\": [50, 205, 50],\r\n\t\t\"linen\": [250, 240, 230],\r\n\t\t\"magenta\": [255, 0, 255],\r\n\t\t\"maroon\": [128, 0, 0],\r\n\t\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\t\"mediumblue\": [0, 0, 205],\r\n\t\t\"mediumorchid\": [186, 85, 211],\r\n\t\t\"mediumpurple\": [147, 112, 219],\r\n\t\t\"mediumseagreen\": [60, 179, 113],\r\n\t\t\"mediumslateblue\": [123, 104, 238],\r\n\t\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\t\"mediumturquoise\": [72, 209, 204],\r\n\t\t\"mediumvioletred\": [199, 21, 133],\r\n\t\t\"midnightblue\": [25, 25, 112],\r\n\t\t\"mintcream\": [245, 255, 250],\r\n\t\t\"mistyrose\": [255, 228, 225],\r\n\t\t\"moccasin\": [255, 228, 181],\r\n\t\t\"navajowhite\": [255, 222, 173],\r\n\t\t\"navy\": [0, 0, 128],\r\n\t\t\"oldlace\": [253, 245, 230],\r\n\t\t\"olive\": [128, 128, 0],\r\n\t\t\"olivedrab\": [107, 142, 35],\r\n\t\t\"orange\": [255, 165, 0],\r\n\t\t\"orangered\": [255, 69, 0],\r\n\t\t\"orchid\": [218, 112, 214],\r\n\t\t\"palegoldenrod\": [238, 232, 170],\r\n\t\t\"palegreen\": [152, 251, 152],\r\n\t\t\"paleturquoise\": [175, 238, 238],\r\n\t\t\"palevioletred\": [219, 112, 147],\r\n\t\t\"papayawhip\": [255, 239, 213],\r\n\t\t\"peachpuff\": [255, 218, 185],\r\n\t\t\"peru\": [205, 133, 63],\r\n\t\t\"pink\": [255, 192, 203],\r\n\t\t\"plum\": [221, 160, 221],\r\n\t\t\"powderblue\": [176, 224, 230],\r\n\t\t\"purple\": [128, 0, 128],\r\n\t\t\"rebeccapurple\": [102, 51, 153],\r\n\t\t\"red\": [255, 0, 0],\r\n\t\t\"rosybrown\": [188, 143, 143],\r\n\t\t\"royalblue\": [65, 105, 225],\r\n\t\t\"saddlebrown\": [139, 69, 19],\r\n\t\t\"salmon\": [250, 128, 114],\r\n\t\t\"sandybrown\": [244, 164, 96],\r\n\t\t\"seagreen\": [46, 139, 87],\r\n\t\t\"seashell\": [255, 245, 238],\r\n\t\t\"sienna\": [160, 82, 45],\r\n\t\t\"silver\": [192, 192, 192],\r\n\t\t\"skyblue\": [135, 206, 235],\r\n\t\t\"slateblue\": [106, 90, 205],\r\n\t\t\"slategray\": [112, 128, 144],\r\n\t\t\"slategrey\": [112, 128, 144],\r\n\t\t\"snow\": [255, 250, 250],\r\n\t\t\"springgreen\": [0, 255, 127],\r\n\t\t\"steelblue\": [70, 130, 180],\r\n\t\t\"tan\": [210, 180, 140],\r\n\t\t\"teal\": [0, 128, 128],\r\n\t\t\"thistle\": [216, 191, 216],\r\n\t\t\"tomato\": [255, 99, 71],\r\n\t\t\"turquoise\": [64, 224, 208],\r\n\t\t\"violet\": [238, 130, 238],\r\n\t\t\"wheat\": [245, 222, 179],\r\n\t\t\"white\": [255, 255, 255],\r\n\t\t\"whitesmoke\": [245, 245, 245],\r\n\t\t\"yellow\": [255, 255, 0],\r\n\t\t\"yellowgreen\": [154, 205, 50]\r\n\t};\n\n/***/ },\n/* 255 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(56);\n\t__webpack_require__(55);\n\tmodule.exports = __webpack_require__(288);\n\n/***/ },\n/* 256 */,\n/* 257 */,\n/* 258 */,\n/* 259 */,\n/* 260 */,\n/* 261 */,\n/* 262 */,\n/* 263 */,\n/* 264 */,\n/* 265 */,\n/* 266 */,\n/* 267 */,\n/* 268 */,\n/* 269 */,\n/* 270 */,\n/* 271 */,\n/* 272 */,\n/* 273 */,\n/* 274 */,\n/* 275 */,\n/* 276 */,\n/* 277 */,\n/* 278 */,\n/* 279 */,\n/* 280 */,\n/* 281 */,\n/* 282 */,\n/* 283 */,\n/* 284 */,\n/* 285 */,\n/* 286 */,\n/* 287 */,\n/* 288 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar anObject = __webpack_require__(8)\n\t  , get      = __webpack_require__(54);\n\tmodule.exports = __webpack_require__(3).getIterator = function(it){\n\t  var iterFn = get(it);\n\t  if(typeof iterFn != 'function')throw TypeError(it + ' is not iterable!');\n\t  return anObject(iterFn.call(it));\n\t};\n\n/***/ },\n/* 289 */,\n/* 290 */,\n/* 291 */,\n/* 292 */,\n/* 293 */,\n/* 294 */,\n/* 295 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(6)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \"\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"questiontype.vue\",\"sourceRoot\":\"webpack://\"}]);\n\t\n\t// exports\n\n\n/***/ },\n/* 296 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(6)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \"\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"login.vue\",\"sourceRoot\":\"webpack://\"}]);\n\t\n\t// exports\n\n\n/***/ },\n/* 297 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(6)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \"\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"user.vue\",\"sourceRoot\":\"webpack://\"}]);\n\t\n\t// exports\n\n\n/***/ },\n/* 298 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(6)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \"\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"home.vue\",\"sourceRoot\":\"webpack://\"}]);\n\t\n\t// exports\n\n\n/***/ },\n/* 299 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(6)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \"\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"cardPessoasPorBairro.vue\",\"sourceRoot\":\"webpack://\"}]);\n\t\n\t// exports\n\n\n/***/ },\n/* 300 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(6)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \"\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"cardAniversariosPorMes.vue\",\"sourceRoot\":\"webpack://\"}]);\n\t\n\t// exports\n\n\n/***/ },\n/* 301 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(6)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \"\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"cardCadastrosPorMes.vue\",\"sourceRoot\":\"webpack://\"}]);\n\t\n\t// exports\n\n\n/***/ },\n/* 302 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(6)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \"\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"register.vue\",\"sourceRoot\":\"webpack://\"}]);\n\t\n\t// exports\n\n\n/***/ },\n/* 303 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(6)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \"\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"logout.vue\",\"sourceRoot\":\"webpack://\"}]);\n\t\n\t// exports\n\n\n/***/ },\n/* 304 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(6)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \"i[data-v-a71aab1e]{font-size:54px}\", \"\", {\"version\":3,\"sources\":[\"/./ClientApp/components/views/home/cardTotal.vue\"],\"names\":[],\"mappings\":\"AACA,mBACE,cAAgB,CACjB\",\"file\":\"cardTotal.vue\",\"sourcesContent\":[\"\\ni[data-v-a71aab1e] {\\n  font-size: 54px;\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\t\n\t// exports\n\n\n/***/ },\n/* 305 */,\n/* 306 */,\n/* 307 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(295);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(7)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-079ba69c!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./questiontype.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-079ba69c!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./questiontype.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 308 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(296);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(7)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-0973f94f!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./login.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-0973f94f!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./login.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 309 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(297);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(7)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-163bf6dc!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./user.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-163bf6dc!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./user.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 310 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(298);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(7)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-28735ddc!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./home.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-28735ddc!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./home.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 311 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(299);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(7)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-38de88af!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./cardPessoasPorBairro.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-38de88af!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./cardPessoasPorBairro.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 312 */,\n/* 313 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(300);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(7)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-3de53d0a!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./cardAniversariosPorMes.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-3de53d0a!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./cardAniversariosPorMes.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 314 */,\n/* 315 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(301);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(7)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-5d8b2c6f!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./cardCadastrosPorMes.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-5d8b2c6f!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./cardCadastrosPorMes.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 316 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(302);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(7)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-655b2da6!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./register.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-655b2da6!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./register.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 317 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(303);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(7)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-721c3914!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./logout.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-721c3914!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./logout.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 318 */,\n/* 319 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(304);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(7)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-a71aab1e&scoped=true!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./cardTotal.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-a71aab1e&scoped=true!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./cardTotal.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 320 */,\n/* 321 */,\n/* 322 */,\n/* 323 */,\n/* 324 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t!function(t,e){ true?module.exports=e():\"function\"==typeof define&&define.amd?define(\"icountup\",[],e):\"object\"==typeof exports?exports.icountup=e():t.icountup=e()}(this,function(){return function(t){function e(a){if(n[a])return n[a].exports;var i=n[a]={exports:{},id:a,loaded:!1};return t[a].call(i.exports,i,i.exports,e),i.loaded=!0,i.exports}var n={};return e.m=t,e.c=n,e.p=\"/\",e(0)}([function(t,e,n){\"use strict\";function a(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(e,\"__esModule\",{value:!0});var i=n(4),r=a(i);e.default=r.default},function(t,e,n){\"use strict\";function a(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(e,\"__esModule\",{value:!0});var i=n(2),r=a(i);e.default={name:\"ICountUp\",props:{start:{type:Number,required:!1,default:0},end:{type:Number,required:!0},decimals:{type:Number,required:!1,default:0},duration:{type:Number,required:!1,default:2},options:{type:Object,required:!1},callback:{type:Function,required:!1,default:function(){}}},data:function(){return{instance:null}},computed:{},watch:{end:{handler:function(t){var e=this;e.instance&&e.instance.update&&e.instance.update(t)},deep:!1}},methods:{init:function(){var t=this;if(!t.instance){var e=t.$el;t.instance=new r.default(e,t.start,t.end,t.decimals,t.duration,t.options),t.instance.start(function(){t.callback(t.instance)})}},destroy:function(){var t=this;t.instance=null}},beforeCreate:function(){},created:function(){},beforeMount:function(){},mounted:function(){var t=this;t.init()},beforeUpdate:function(){},updated:function(){},activated:function(){},deactivated:function(){},beforeDestroy:function(){var t=this;t.destroy()},destroyed:function(){},start:function(t){var e=this;e.instance&&e.instance.start&&e.instance.start(function(){t&&t(e.instance)})},pauseResume:function(){var t=this;t.instance&&t.instance.pauseResume&&t.instance.pauseResume()},reset:function(){var t=this;t.instance&&t.instance.reset&&t.instance.reset()},update:function(t){var e=this;e.instance&&e.instance.update&&e.instance.update(t)}}},function(t,e,n){var a,i;!function(r,o){a=o,i=\"function\"==typeof a?a.call(e,n,e,t):a,!(void 0!==i&&(t.exports=i))}(this,function(t,e,n){var a=function(t,e,n,a,i,r){for(var o=0,u=[\"webkit\",\"moz\",\"ms\",\"o\"],s=0;s<u.length&&!window.requestAnimationFrame;++s)window.requestAnimationFrame=window[u[s]+\"RequestAnimationFrame\"],window.cancelAnimationFrame=window[u[s]+\"CancelAnimationFrame\"]||window[u[s]+\"CancelRequestAnimationFrame\"];window.requestAnimationFrame||(window.requestAnimationFrame=function(t,e){var n=(new Date).getTime(),a=Math.max(0,16-(n-o)),i=window.setTimeout(function(){t(n+a)},a);return o=n+a,i}),window.cancelAnimationFrame||(window.cancelAnimationFrame=function(t){clearTimeout(t)});var c=this;c.options={useEasing:!0,useGrouping:!0,separator:\",\",decimal:\".\",easingFn:null,formattingFn:null};for(var d in r)r.hasOwnProperty(d)&&(c.options[d]=r[d]);\"\"===c.options.separator&&(c.options.useGrouping=!1),c.options.prefix||(c.options.prefix=\"\"),c.options.suffix||(c.options.suffix=\"\"),c.d=\"string\"==typeof t?document.getElementById(t):t,c.startVal=Number(e),c.endVal=Number(n),c.countDown=c.startVal>c.endVal,c.frameVal=c.startVal,c.decimals=Math.max(0,a||0),c.dec=Math.pow(10,c.decimals),c.duration=1e3*Number(i)||2e3,c.formatNumber=function(t){t=t.toFixed(c.decimals),t+=\"\";var e,n,a,i;if(e=t.split(\".\"),n=e[0],a=e.length>1?c.options.decimal+e[1]:\"\",i=/(\\d+)(\\d{3})/,c.options.useGrouping)for(;i.test(n);)n=n.replace(i,\"$1\"+c.options.separator+\"$2\");return c.options.prefix+n+a+c.options.suffix},c.easeOutExpo=function(t,e,n,a){return n*(-Math.pow(2,-10*t/a)+1)*1024/1023+e},c.easingFn=c.options.easingFn?c.options.easingFn:c.easeOutExpo,c.formattingFn=c.options.formattingFn?c.options.formattingFn:c.formatNumber,c.version=function(){return\"1.7.1\"},c.printValue=function(t){var e=c.formattingFn(t);\"INPUT\"===c.d.tagName?this.d.value=e:\"text\"===c.d.tagName||\"tspan\"===c.d.tagName?this.d.textContent=e:this.d.innerHTML=e},c.count=function(t){c.startTime||(c.startTime=t),c.timestamp=t;var e=t-c.startTime;c.remaining=c.duration-e,c.options.useEasing?c.countDown?c.frameVal=c.startVal-c.easingFn(e,0,c.startVal-c.endVal,c.duration):c.frameVal=c.easingFn(e,c.startVal,c.endVal-c.startVal,c.duration):c.countDown?c.frameVal=c.startVal-(c.startVal-c.endVal)*(e/c.duration):c.frameVal=c.startVal+(c.endVal-c.startVal)*(e/c.duration),c.countDown?c.frameVal=c.frameVal<c.endVal?c.endVal:c.frameVal:c.frameVal=c.frameVal>c.endVal?c.endVal:c.frameVal,c.frameVal=Math.round(c.frameVal*c.dec)/c.dec,c.printValue(c.frameVal),e<c.duration?c.rAF=requestAnimationFrame(c.count):c.callback&&c.callback()},c.start=function(t){return c.callback=t,c.rAF=requestAnimationFrame(c.count),!1},c.pauseResume=function(){c.paused?(c.paused=!1,delete c.startTime,c.duration=c.remaining,c.startVal=c.frameVal,requestAnimationFrame(c.count)):(c.paused=!0,cancelAnimationFrame(c.rAF))},c.reset=function(){c.paused=!1,delete c.startTime,c.startVal=e,cancelAnimationFrame(c.rAF),c.printValue(c.startVal)},c.update=function(t){cancelAnimationFrame(c.rAF),c.paused=!1,delete c.startTime,c.startVal=c.frameVal,c.endVal=Number(t),c.countDown=c.startVal>c.endVal,c.rAF=requestAnimationFrame(c.count)},c.printValue(c.startVal)};return a})},function(t,e){},function(t,e,n){var a,i;n(3),a=n(1);var r=n(5);i=a=a||{},\"object\"!=typeof a.default&&\"function\"!=typeof a.default||(i=a=a.default),\"function\"==typeof i&&(i=i.options),i.render=r.render,i.staticRenderFns=r.staticRenderFns,i._scopeId=\"data-v-679a8781\",t.exports=a},function(t,e){t.exports={render:function(){var t=this,e=t.$createElement,n=t._self._c||e;return n(\"span\")},staticRenderFns:[]}}])});\n\t//# sourceMappingURL=app.js.map\n\n/***/ },\n/* 325 */,\n/* 326 */\n/***/ function(module, exports) {\n\n\tmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n\t  return _c('div', {\n\t    staticClass: \"container\"\n\t  }, [_c('div', {\n\t    staticClass: \"toolbar\",\n\t    slot: \"header\"\n\t  }, [_c('q-toolbar-title', {\n\t    attrs: {\n\t      \"padding\": 1\n\t    }\n\t  }, [_c('button', {\n\t    directives: [{\n\t      name: \"go-back\",\n\t      rawName: \"v-go-back\",\n\t      value: ('/'),\n\t      expression: \"'/'\"\n\t    }]\n\t  }, [_c('i', [_vm._v(\"arrow_back\")])]), _vm._v(\" Question Type\\r\\n        \")]), _vm._v(\" \"), _vm._m(0)], 1), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"layout-padding \"\n\t  }, [_c('q-data-table', {\n\t    attrs: {\n\t      \"data\": _vm.questiontypes,\n\t      \"config\": _vm.config,\n\t      \"columns\": _vm.columns\n\t    },\n\t    scopedSlots: _vm._u([\n\t      [\"col-source\", function(cell) {\n\t        return [(cell.data === 'Audit') ? _c('span', {\n\t          staticClass: \"label text-white bg-primary\"\n\t        }, [_vm._v(\"\\r\\n                        Audit\\r\\n                        \"), _c('q-tooltip', [_vm._v(\"Some tooltip\")])], 1) : _c('span', {\n\t          staticClass: \"label text-white bg-negative\"\n\t        }, [_vm._v(_vm._s(cell.data))])]\n\t      }],\n\t      [\"selection\", function(props) {\n\t        return [_c('button', {\n\t          staticClass: \"primary clear\",\n\t          on: {\n\t            \"click\": function($event) {\n\t              _vm.changeMessage(props)\n\t            }\n\t          }\n\t        }, [_c('i', [_vm._v(\"edit\")])]), _vm._v(\" \"), _c('button', {\n\t          staticClass: \"primary clear\",\n\t          on: {\n\t            \"click\": function($event) {\n\t              _vm.deleteRow(props)\n\t            }\n\t          }\n\t        }, [_c('i', [_vm._v(\"delete\")])])]\n\t      }]\n\t    ])\n\t  })], 1)])\n\t},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n\t  return _c('button', [_c('i', [_vm._v(\"help\")])])\n\t}]}\n\n/***/ },\n/* 327 */\n/***/ function(module, exports) {\n\n\tmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n\t  return _c('div', {\n\t    staticClass: \"container\"\n\t  }, [_c('div', {\n\t    staticClass: \"toolbar\",\n\t    slot: \"header\"\n\t  }, [_c('q-toolbar-title', {\n\t    attrs: {\n\t      \"padding\": 1\n\t    }\n\t  }, [_c('button', {\n\t    directives: [{\n\t      name: \"go-back\",\n\t      rawName: \"v-go-back\",\n\t      value: ('/'),\n\t      expression: \"'/'\"\n\t    }]\n\t  }, [_c('i', [_vm._v(\"arrow_back\")])]), _vm._v(\" Login\\r\\n        \")]), _vm._v(\" \"), _vm._m(0)], 1), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"layout-view layout-padding\"\n\t  }, [_c('div', {\n\t    staticClass: \"list\"\n\t  }, [_c('div', {\n\t    staticClass: \"item three-lines\"\n\t  }, [_c('i', {\n\t    staticClass: \"item-primary\"\n\t  }, [_vm._v(\"mail\")]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"item-content\"\n\t  }, [_c('div', {\n\t    staticClass: \"stacked-label\"\n\t  }, [_c('input', {\n\t    directives: [{\n\t      name: \"model\",\n\t      rawName: \"v-model\",\n\t      value: (_vm.credentials.email),\n\t      expression: \"credentials.email\"\n\t    }],\n\t    staticClass: \"full-width\",\n\t    attrs: {\n\t      \"required\": \"\",\n\t      \"placeholder\": \"Your email\"\n\t    },\n\t    domProps: {\n\t      \"value\": (_vm.credentials.email)\n\t    },\n\t    on: {\n\t      \"input\": function($event) {\n\t        if ($event.target.composing) { return; }\n\t        _vm.credentials.email = $event.target.value\n\t      }\n\t    }\n\t  }), _vm._v(\" \"), _c('label', [_vm._v(\"Email\")])])])]), _vm._v(\" \"), _c('hr'), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"item three-lines\"\n\t  }, [_c('i', {\n\t    staticClass: \"item-primary\"\n\t  }, [_vm._v(\"vpn_key\")]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"item-content\"\n\t  }, [_c('div', {\n\t    staticClass: \"stacked-label\"\n\t  }, [_c('input', {\n\t    directives: [{\n\t      name: \"model\",\n\t      rawName: \"v-model\",\n\t      value: (_vm.credentials.password),\n\t      expression: \"credentials.password\"\n\t    }],\n\t    staticClass: \"full-width\",\n\t    attrs: {\n\t      \"type\": \"password\",\n\t      \"required\": \"\",\n\t      \"placeholder\": \"Your password\"\n\t    },\n\t    domProps: {\n\t      \"value\": (_vm.credentials.password)\n\t    },\n\t    on: {\n\t      \"input\": function($event) {\n\t        if ($event.target.composing) { return; }\n\t        _vm.credentials.password = $event.target.value\n\t      }\n\t    }\n\t  }), _vm._v(\" \"), _c('label', [_vm._v(\"Password\")])])])])]), _vm._v(\" \"), _c('button', {\n\t    staticClass: \"primary full-width\",\n\t    on: {\n\t      \"click\": function($event) {\n\t        _vm.userLogin()\n\t      }\n\t    }\n\t  }, [_vm._v(\"Login\")])])])\n\t},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n\t  return _c('button', [_c('i', [_vm._v(\"help\")])])\n\t}]}\n\n/***/ },\n/* 328 */\n/***/ function(module, exports) {\n\n\tmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n\t  return _c('div', {\n\t    staticClass: \"error-page window-height window-width bg-light column items-center\"\n\t  }, [_c('div', {\n\t    staticClass: \"error-code bg-primary flex items-center justify-center\"\n\t  }, [_vm._v(\"\\n    404\\n  \")]), _vm._v(\" \"), _c('div', [_c('div', {\n\t    staticClass: \"error-card card bg-white column items-center justify-center\"\n\t  }, [_c('i', {\n\t    staticClass: \"text-grey-5\"\n\t  }, [_vm._v(\"error_outline\")]), _vm._v(\" \"), _c('p', {\n\t    staticClass: \"caption text-center\"\n\t  }, [_vm._v(\"Oops. Nothing here...\")]), _vm._v(\" \"), _c('p', {\n\t    staticClass: \"text-center group\"\n\t  }, [(_vm.canGoBack) ? _c('button', {\n\t    staticClass: \"grey push small\",\n\t    on: {\n\t      \"click\": _vm.goBack\n\t    }\n\t  }, [_c('i', {\n\t    staticClass: \"on-left\"\n\t  }, [_vm._v(\"keyboard_arrow_left\")]), _vm._v(\"\\n          Go back\\n        \")]) : _vm._e(), _vm._v(\" \"), _c('router-link', {\n\t    attrs: {\n\t      \"to\": \"/\"\n\t    }\n\t  }, [_c('button', {\n\t    staticClass: \"grey push small\"\n\t  }, [_vm._v(\"\\n            Go home\\n            \"), _c('i', {\n\t    staticClass: \"on-right\"\n\t  }, [_vm._v(\"home\")])])])], 1)])])])\n\t},staticRenderFns: []}\n\n/***/ },\n/* 329 */\n/***/ function(module, exports) {\n\n\tmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n\t  return _c('div', {\n\t    staticClass: \"container\"\n\t  }, [_c('div', {\n\t    staticClass: \"toolbar\",\n\t    slot: \"header\"\n\t  }, [_c('q-toolbar-title', {\n\t    attrs: {\n\t      \"padding\": 1\n\t    }\n\t  }, [_c('button', {\n\t    directives: [{\n\t      name: \"go-back\",\n\t      rawName: \"v-go-back\",\n\t      value: ('/'),\n\t      expression: \"'/'\"\n\t    }]\n\t  }, [_c('i', [_vm._v(\"arrow_back\")])]), _vm._v(\" User\\r\\n        \")]), _vm._v(\" \"), _vm._m(0)], 1), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"layout-padding \"\n\t  }, [_c('q-data-table', {\n\t    attrs: {\n\t      \"data\": _vm.users,\n\t      \"config\": _vm.config,\n\t      \"columns\": _vm.columns\n\t    },\n\t    scopedSlots: _vm._u([\n\t      [\"col-source\", function(cell) {\n\t        return [(cell.data === 'Audit') ? _c('span', {\n\t          staticClass: \"label text-white bg-primary\"\n\t        }, [_vm._v(\"\\r\\n                        Audit\\r\\n                        \"), _c('q-tooltip', [_vm._v(\"Some tooltip\")])], 1) : _c('span', {\n\t          staticClass: \"label text-white bg-negative\"\n\t        }, [_vm._v(_vm._s(cell.data))])]\n\t      }],\n\t      [\"selection\", function(props) {\n\t        return [_c('button', {\n\t          staticClass: \"primary clear\",\n\t          on: {\n\t            \"click\": function($event) {\n\t              _vm.changeMessage(props)\n\t            }\n\t          }\n\t        }, [_c('i', [_vm._v(\"edit\")])]), _vm._v(\" \"), _c('button', {\n\t          staticClass: \"primary clear\",\n\t          on: {\n\t            \"click\": function($event) {\n\t              _vm.deleteRow(props)\n\t            }\n\t          }\n\t        }, [_c('i', [_vm._v(\"delete\")])])]\n\t      }]\n\t    ])\n\t  })], 1)])\n\t},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n\t  return _c('button', [_c('i', [_vm._v(\"help\")])])\n\t}]}\n\n/***/ },\n/* 330 */\n/***/ function(module, exports) {\n\n\tmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n\t  return _c('div', {\n\t    staticClass: \"container\"\n\t  }, [_c('div', {\n\t    staticClass: \"toolbar\",\n\t    slot: \"header\"\n\t  }, [_c('q-toolbar-title', {\n\t    attrs: {\n\t      \"padding\": 1\n\t    }\n\t  }, [_c('button', {\n\t    directives: [{\n\t      name: \"go-back\",\n\t      rawName: \"v-go-back\",\n\t      value: ('/'),\n\t      expression: \"'/'\"\n\t    }]\n\t  }, [_c('i', [_vm._v(\"arrow_back\")])]), _vm._v(\" Home\\r\\n        \")]), _vm._v(\" \"), _vm._m(0)], 1), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"layout-padding \"\n\t  }, [_c('div', {\n\t    staticClass: \"flex wrap gutter\"\n\t  }, [_c('div', {\n\t    staticClass: \"auto\"\n\t  }, [_c('cardTotal', {\n\t    attrs: {\n\t      \"title\": \"Total Posts\",\n\t      \"background-color\": \"bg-teal-8\",\n\t      \"total\": _vm.totalPosts\n\t    }\n\t  })], 1), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"auto\"\n\t  }, [_c('cardTotal', {\n\t    attrs: {\n\t      \"title\": \"Total comments\",\n\t      \"background-color\": \"bg-teal-8\",\n\t      \"total\": _vm.totalComments\n\t    }\n\t  })], 1), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"auto\"\n\t  }, [_c('cardTotal', {\n\t    attrs: {\n\t      \"title\": \"Static total\",\n\t      \"background-color\": \"bg-teal-8\",\n\t      \"total\": 50004\n\t    }\n\t  })], 1)]), _vm._v(\" \"), _vm._m(1), _vm._v(\" \"), _vm._m(2)])])\n\t},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n\t  return _c('button', [_c('i', [_vm._v(\"help\")])])\n\t},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n\t  return _c('div', {\n\t    staticClass: \"flex wrap gutter\"\n\t  }, [_c('div', {\n\t    staticClass: \"width-1of2\"\n\t  }), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"auto\"\n\t  })])\n\t},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n\t  return _c('div', {\n\t    staticClass: \"flex wrap gutter\"\n\t  }, [_c('div', {\n\t    staticClass: \"width-4of5 sm-auto\"\n\t  })])\n\t}]}\n\n/***/ },\n/* 331 */\n/***/ function(module, exports) {\n\n\tmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n\t  return _c('div', {\n\t    staticClass: \"card bg-white animate-scale \"\n\t  }, [_c('div', {\n\t    staticClass: \"card-title bg-blue text-white\"\n\t  }, [_vm._v(\"\\n    Quantidade de pessoas por bairro\\n    \"), _c('q-fab', {\n\t    staticClass: \"float-right\",\n\t    attrs: {\n\t      \"icon\": \"keyboard_arrow_left\",\n\t      \"direction\": \"left\",\n\t      \"classNames\": \"teal\"\n\t    }\n\t  }, [_c('q-small-fab', {\n\t    staticClass: \"teal\",\n\t    attrs: {\n\t      \"icon\": \"\"\n\t    },\n\t    nativeOn: {\n\t      \"click\": function($event) {\n\t        _vm.tipoGrafico = 'bar'\n\t      }\n\t    }\n\t  }, [_c('i', {\n\t    staticClass: \"mdi mdi-chart-bar\"\n\t  })]), _vm._v(\" \"), _c('q-small-fab', {\n\t    staticClass: \"teal\",\n\t    attrs: {\n\t      \"icon\": \"\"\n\t    },\n\t    nativeOn: {\n\t      \"click\": function($event) {\n\t        _vm.tipoGrafico = 'horizontalBar'\n\t      }\n\t    }\n\t  }, [_c('i', {\n\t    staticClass: \"mdi mdi-chart-timeline\"\n\t  })])], 1)], 1), _vm._v(\" \"), _vm._m(0)])\n\t},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n\t  return _c('div', {\n\t    staticClass: \"card-content\"\n\t  }, [_c('canvas', {\n\t    attrs: {\n\t      \"id\": \"pessoas-bairro\"\n\t    }\n\t  })])\n\t}]}\n\n/***/ },\n/* 332 */,\n/* 333 */\n/***/ function(module, exports) {\n\n\tmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n\t  return _c('div', {\n\t    staticClass: \"card bg-white animate-scale \"\n\t  }, [_c('div', {\n\t    staticClass: \"card-title bg-blue text-white\"\n\t  }, [_vm._v(\"\\n    Quantidade de Aniversariantes por mês\\n    \"), _c('q-fab', {\n\t    staticClass: \"float-right\",\n\t    attrs: {\n\t      \"icon\": \"keyboard_arrow_left\",\n\t      \"direction\": \"left\",\n\t      \"classNames\": \"teal\"\n\t    }\n\t  }, [_c('q-small-fab', {\n\t    staticClass: \"teal\",\n\t    attrs: {\n\t      \"icon\": \"\"\n\t    },\n\t    nativeOn: {\n\t      \"click\": function($event) {\n\t        _vm.tipoGrafico = 'bar'\n\t      }\n\t    }\n\t  }, [_c('i', {\n\t    staticClass: \"mdi mdi-chart-bar\"\n\t  })]), _vm._v(\" \"), _c('q-small-fab', {\n\t    staticClass: \"teal\",\n\t    attrs: {\n\t      \"icon\": \"\"\n\t    },\n\t    nativeOn: {\n\t      \"click\": function($event) {\n\t        _vm.tipoGrafico = 'horizontalBar'\n\t      }\n\t    }\n\t  }, [_c('i', {\n\t    staticClass: \"mdi mdi-chart-timeline\"\n\t  })])], 1)], 1), _vm._v(\" \"), _vm._m(0)])\n\t},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n\t  return _c('div', {\n\t    staticClass: \"card-content\"\n\t  }, [_c('canvas', {\n\t    attrs: {\n\t      \"id\": \"aniversarios-mes\"\n\t    }\n\t  })])\n\t}]}\n\n/***/ },\n/* 334 */,\n/* 335 */\n/***/ function(module, exports) {\n\n\tmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n\t  return _c('div', {\n\t    staticClass: \"card bg-white animate-scale \"\n\t  }, [_c('div', {\n\t    staticClass: \"card-title bg-blue text-white\"\n\t  }, [_vm._v(\"\\n    Cadastros por mês no ano escolhido - \" + _vm._s(_vm.ano) + \"\\n\\n    \"), _c('q-fab', {\n\t    staticClass: \"float-right\",\n\t    attrs: {\n\t      \"icon\": \"keyboard_arrow_left\",\n\t      \"direction\": \"left\",\n\t      \"classNames\": \"teal\"\n\t    }\n\t  }, [_c('q-small-fab', {\n\t    staticClass: \"teal\",\n\t    attrs: {\n\t      \"icon\": \"\"\n\t    },\n\t    nativeOn: {\n\t      \"click\": function($event) {\n\t        _vm.ano = '2016'\n\t      }\n\t    }\n\t  }, [_vm._v(\"2016\")]), _vm._v(\" \"), _c('q-small-fab', {\n\t    staticClass: \"teal\",\n\t    attrs: {\n\t      \"icon\": \"\"\n\t    },\n\t    nativeOn: {\n\t      \"click\": function($event) {\n\t        _vm.ano = '2017'\n\t      }\n\t    }\n\t  }, [_vm._v(\"2017\")])], 1)], 1), _vm._v(\" \"), _vm._m(0)])\n\t},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n\t  return _c('div', {\n\t    staticClass: \"card-content \"\n\t  }, [_c('canvas', {\n\t    attrs: {\n\t      \"id\": \"cadastros-mes\"\n\t    }\n\t  })])\n\t}]}\n\n/***/ },\n/* 336 */\n/***/ function(module, exports) {\n\n\tmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n\t  return _c('div', {\n\t    staticClass: \"container\"\n\t  }, [_c('div', {\n\t    staticClass: \"toolbar\",\n\t    slot: \"header\"\n\t  }, [_c('q-toolbar-title', {\n\t    attrs: {\n\t      \"padding\": 1\n\t    }\n\t  }, [_c('button', {\n\t    directives: [{\n\t      name: \"go-back\",\n\t      rawName: \"v-go-back\",\n\t      value: ('/'),\n\t      expression: \"'/'\"\n\t    }]\n\t  }, [_c('i', [_vm._v(\"arrow_back\")])]), _vm._v(\" Register\\r\\n      \")]), _vm._v(\" \"), _vm._m(0)], 1), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"layout-view layout-padding\"\n\t  }, [_c('div', {\n\t    staticClass: \"list\"\n\t  }, [_c('div', {\n\t    staticClass: \"item three-lines\"\n\t  }, [_c('i', {\n\t    staticClass: \"item-primary\"\n\t  }, [_vm._v(\"face\")]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"item-content\"\n\t  }, [_c('div', {\n\t    staticClass: \"stacked-label\"\n\t  }, [_c('input', {\n\t    directives: [{\n\t      name: \"model\",\n\t      rawName: \"v-model\",\n\t      value: (_vm.credentials.name),\n\t      expression: \"credentials.name\"\n\t    }],\n\t    staticClass: \"full-width\",\n\t    attrs: {\n\t      \"required\": \"\",\n\t      \"placeholder\": \"Your name\"\n\t    },\n\t    domProps: {\n\t      \"value\": (_vm.credentials.name)\n\t    },\n\t    on: {\n\t      \"input\": function($event) {\n\t        if ($event.target.composing) { return; }\n\t        _vm.credentials.name = $event.target.value\n\t      }\n\t    }\n\t  }), _vm._v(\" \"), _c('label', [_vm._v(\"Name\")])])])]), _vm._v(\" \"), _c('hr'), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"item three-lines\"\n\t  }, [_c('i', {\n\t    staticClass: \"item-primary\"\n\t  }, [_vm._v(\"mail\")]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"item-content\"\n\t  }, [_c('div', {\n\t    staticClass: \"stacked-label\"\n\t  }, [_c('input', {\n\t    directives: [{\n\t      name: \"model\",\n\t      rawName: \"v-model\",\n\t      value: (_vm.credentials.email),\n\t      expression: \"credentials.email\"\n\t    }],\n\t    staticClass: \"full-width\",\n\t    attrs: {\n\t      \"required\": \"\",\n\t      \"placeholder\": \"Your email\"\n\t    },\n\t    domProps: {\n\t      \"value\": (_vm.credentials.email)\n\t    },\n\t    on: {\n\t      \"input\": function($event) {\n\t        if ($event.target.composing) { return; }\n\t        _vm.credentials.email = $event.target.value\n\t      }\n\t    }\n\t  }), _vm._v(\" \"), _c('label', [_vm._v(\"Email\")])])])]), _vm._v(\" \"), _c('hr'), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"item three-lines\"\n\t  }, [_c('i', {\n\t    staticClass: \"item-primary\"\n\t  }, [_vm._v(\"vpn_key\")]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"item-content\"\n\t  }, [_c('div', {\n\t    staticClass: \"stacked-label\"\n\t  }, [_c('input', {\n\t    directives: [{\n\t      name: \"model\",\n\t      rawName: \"v-model\",\n\t      value: (_vm.credentials.password),\n\t      expression: \"credentials.password\"\n\t    }],\n\t    staticClass: \"full-width\",\n\t    attrs: {\n\t      \"type\": \"password\",\n\t      \"required\": \"\",\n\t      \"placeholder\": \"Your password\"\n\t    },\n\t    domProps: {\n\t      \"value\": (_vm.credentials.password)\n\t    },\n\t    on: {\n\t      \"input\": function($event) {\n\t        if ($event.target.composing) { return; }\n\t        _vm.credentials.password = $event.target.value\n\t      }\n\t    }\n\t  }), _vm._v(\" \"), _c('label', [_vm._v(\"Password\")])])])])]), _vm._v(\" \"), _c('button', {\n\t    staticClass: \"primary full-width\",\n\t    on: {\n\t      \"click\": function($event) {\n\t        _vm.submit()\n\t      }\n\t    }\n\t  }, [_vm._v(\"Register\")])])])\n\t},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n\t  return _c('button', [_c('i', [_vm._v(\"help\")])])\n\t}]}\n\n/***/ },\n/* 337 */\n/***/ function(module, exports) {\n\n\tmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n\t  return _c('div', {\n\t    attrs: {\n\t      \"id\": \"logout\"\n\t    }\n\t  })\n\t},staticRenderFns: []}\n\n/***/ },\n/* 338 */,\n/* 339 */\n/***/ function(module, exports) {\n\n\tmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n\t  return _c('div', {\n\t    staticClass: \"card text-white animate-scale\",\n\t    class: _vm.backgroundColor\n\t  }, [_c('div', {\n\t    staticClass: \"card-content \"\n\t  }, [_c('div', {\n\t    staticClass: \"row\"\n\t  }, [_vm._m(0), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"width-2of3\"\n\t  }, [_c('p', {\n\t    staticClass: \"text-italic \"\n\t  }, [_vm._v(_vm._s(_vm.title))]), _vm._v(\" \"), _c('h5', [_c('i-count-up', {\n\t    attrs: {\n\t      \"start\": 0,\n\t      \"end\": _vm.total,\n\t      \"decimals\": 0,\n\t      \"duration\": 2.5,\n\t      \"options\": _vm.options\n\t    }\n\t  })], 1)])])])])\n\t},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n\t  return _c('div', {\n\t    staticClass: \"width-1of3\"\n\t  }, [_c('i', [_vm._v(\"people\")])])\n\t}]}\n\n/***/ }\n]));\n\n\n// WEBPACK FOOTER //\n// static/js/0.d1a778751266e9ef2a30.js","/**\n * @namespace Chart\n */\nvar Chart = require('./core/core.js')();\n\nrequire('./core/core.helpers')(Chart);\nrequire('./platforms/platform.js')(Chart);\nrequire('./core/core.canvasHelpers')(Chart);\nrequire('./core/core.plugin.js')(Chart);\nrequire('./core/core.element')(Chart);\nrequire('./core/core.animation')(Chart);\nrequire('./core/core.controller')(Chart);\nrequire('./core/core.datasetController')(Chart);\nrequire('./core/core.layoutService')(Chart);\nrequire('./core/core.scaleService')(Chart);\nrequire('./core/core.ticks.js')(Chart);\nrequire('./core/core.scale')(Chart);\nrequire('./core/core.title')(Chart);\nrequire('./core/core.legend')(Chart);\nrequire('./core/core.interaction')(Chart);\nrequire('./core/core.tooltip')(Chart);\n\nrequire('./elements/element.arc')(Chart);\nrequire('./elements/element.line')(Chart);\nrequire('./elements/element.point')(Chart);\nrequire('./elements/element.rectangle')(Chart);\n\nrequire('./scales/scale.linearbase.js')(Chart);\nrequire('./scales/scale.category')(Chart);\nrequire('./scales/scale.linear')(Chart);\nrequire('./scales/scale.logarithmic')(Chart);\nrequire('./scales/scale.radialLinear')(Chart);\nrequire('./scales/scale.time')(Chart);\n\n// Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\nrequire('./controllers/controller.bar')(Chart);\nrequire('./controllers/controller.bubble')(Chart);\nrequire('./controllers/controller.doughnut')(Chart);\nrequire('./controllers/controller.line')(Chart);\nrequire('./controllers/controller.polarArea')(Chart);\nrequire('./controllers/controller.radar')(Chart);\n\nrequire('./charts/Chart.Bar')(Chart);\nrequire('./charts/Chart.Bubble')(Chart);\nrequire('./charts/Chart.Doughnut')(Chart);\nrequire('./charts/Chart.Line')(Chart);\nrequire('./charts/Chart.PolarArea')(Chart);\nrequire('./charts/Chart.Radar')(Chart);\nrequire('./charts/Chart.Scatter')(Chart);\n\nwindow.Chart = module.exports = Chart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/chart.js\n// module id = 25\n// module chunks = 0","\n/* styles */\nrequire(\"!!../../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter?id=data-v-a71aab1e&scoped=true!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./cardTotal.vue\")\n\nvar Component = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./cardTotal.vue\"),\n  /* template */\n  require(\"!!../../../../node_modules/vue-loader/lib/template-compiler?id=data-v-a71aab1e!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./cardTotal.vue\"),\n  /* scopeId */\n  \"data-v-a71aab1e\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/components/views/home/cardTotal.vue\n// module id = 39\n// module chunks = 0","var Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Error404.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler?id=data-v-0b4cc29c!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Error404.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/components/Error404.vue\n// module id = 172\n// module chunks = 0","\n/* styles */\nrequire(\"!!../../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter?id=data-v-0973f94f!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./login.vue\")\n\nvar Component = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./login.vue\"),\n  /* template */\n  require(\"!!../../../../node_modules/vue-loader/lib/template-compiler?id=data-v-0973f94f!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./login.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/components/views/auth/login.vue\n// module id = 173\n// module chunks = 0","\n/* styles */\nrequire(\"!!../../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter?id=data-v-721c3914!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./logout.vue\")\n\nvar Component = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./logout.vue\"),\n  /* template */\n  require(\"!!../../../../node_modules/vue-loader/lib/template-compiler?id=data-v-721c3914!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./logout.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/components/views/auth/logout.vue\n// module id = 174\n// module chunks = 0","\n/* styles */\nrequire(\"!!../../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter?id=data-v-655b2da6!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./register.vue\")\n\nvar Component = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./register.vue\"),\n  /* template */\n  require(\"!!../../../../node_modules/vue-loader/lib/template-compiler?id=data-v-655b2da6!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./register.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/components/views/auth/register.vue\n// module id = 175\n// module chunks = 0","\n/* styles */\nrequire(\"!!../../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter?id=data-v-3de53d0a!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./cardAniversariosPorMes.vue\")\n\nvar Component = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./cardAniversariosPorMes.vue\"),\n  /* template */\n  require(\"!!../../../../node_modules/vue-loader/lib/template-compiler?id=data-v-3de53d0a!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./cardAniversariosPorMes.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/components/views/home/cardAniversariosPorMes.vue\n// module id = 176\n// module chunks = 0","\n/* styles */\nrequire(\"!!../../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter?id=data-v-5d8b2c6f!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./cardCadastrosPorMes.vue\")\n\nvar Component = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./cardCadastrosPorMes.vue\"),\n  /* template */\n  require(\"!!../../../../node_modules/vue-loader/lib/template-compiler?id=data-v-5d8b2c6f!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./cardCadastrosPorMes.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/components/views/home/cardCadastrosPorMes.vue\n// module id = 177\n// module chunks = 0","\n/* styles */\nrequire(\"!!../../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter?id=data-v-38de88af!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./cardPessoasPorBairro.vue\")\n\nvar Component = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./cardPessoasPorBairro.vue\"),\n  /* template */\n  require(\"!!../../../../node_modules/vue-loader/lib/template-compiler?id=data-v-38de88af!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./cardPessoasPorBairro.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/components/views/home/cardPessoasPorBairro.vue\n// module id = 178\n// module chunks = 0","\n/* styles */\nrequire(\"!!../../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter?id=data-v-28735ddc!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./home.vue\")\n\nvar Component = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./home.vue\"),\n  /* template */\n  require(\"!!../../../../node_modules/vue-loader/lib/template-compiler?id=data-v-28735ddc!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./home.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/components/views/home/home.vue\n// module id = 179\n// module chunks = 0","\n/* styles */\nrequire(\"!!../../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter?id=data-v-079ba69c!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./questiontype.vue\")\n\nvar Component = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./questiontype.vue\"),\n  /* template */\n  require(\"!!../../../../node_modules/vue-loader/lib/template-compiler?id=data-v-079ba69c!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./questiontype.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/components/views/questiontype/questiontype.vue\n// module id = 180\n// module chunks = 0","\n/* styles */\nrequire(\"!!../../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter?id=data-v-163bf6dc!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./user.vue\")\n\nvar Component = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./user.vue\"),\n  /* template */\n  require(\"!!../../../../node_modules/vue-loader/lib/template-compiler?id=data-v-163bf6dc!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./user.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/components/views/user/user.vue\n// module id = 181\n// module chunks = 0","var map = {\n\t\"./Error404\": 172,\n\t\"./Error404.vue\": 172,\n\t\"./layout/leftdrawer\": 36,\n\t\"./layout/leftdrawer.vue\": 36,\n\t\"./layout/rightdrawer\": 37,\n\t\"./layout/rightdrawer.vue\": 37,\n\t\"./layout/toolbar\": 38,\n\t\"./layout/toolbar.vue\": 38,\n\t\"./views/auth/login\": 173,\n\t\"./views/auth/login.vue\": 173,\n\t\"./views/auth/logout\": 174,\n\t\"./views/auth/logout.vue\": 174,\n\t\"./views/auth/register\": 175,\n\t\"./views/auth/register.vue\": 175,\n\t\"./views/home/cardAniversariosPorMes\": 176,\n\t\"./views/home/cardAniversariosPorMes.vue\": 176,\n\t\"./views/home/cardCadastrosPorMes\": 177,\n\t\"./views/home/cardCadastrosPorMes.vue\": 177,\n\t\"./views/home/cardPessoasPorBairro\": 178,\n\t\"./views/home/cardPessoasPorBairro.vue\": 178,\n\t\"./views/home/cardTotal\": 39,\n\t\"./views/home/cardTotal.vue\": 39,\n\t\"./views/home/home\": 179,\n\t\"./views/home/home.vue\": 179,\n\t\"./views/questiontype/questiontype\": 180,\n\t\"./views/questiontype/questiontype.vue\": 180,\n\t\"./views/user/user\": 181,\n\t\"./views/user/user.vue\": 181\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 182;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/components ^\\.\\/.*$\n// module id = 182\n// module chunks = 0","<template>\r\n  <div class=\"error-page window-height window-width bg-light column items-center\">\r\n    <div class=\"error-code bg-primary flex items-center justify-center\">\r\n      404\r\n    </div>\r\n    <div>\r\n      <div class=\"error-card card bg-white column items-center justify-center\">\r\n        <i class=\"text-grey-5\">error_outline</i>\r\n        <p class=\"caption text-center\">Oops. Nothing here...</p>\r\n        <p class=\"text-center group\">\r\n          <button v-if=\"canGoBack\" class=\"grey push small\" @click=\"goBack\">\r\n            <i class=\"on-left\">keyboard_arrow_left</i>\r\n            Go back\r\n          </button>\r\n          <router-link to=\"/\">\r\n            <button class=\"grey push small\">\r\n              Go home\r\n              <i class=\"on-right\">home</i>\r\n            </button>\r\n          </router-link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data () {\r\n    return {\r\n      canGoBack: window.history.length > 1\r\n    }\r\n  },\r\n  methods: {\r\n    goBack () {\r\n      window.history.go(-1)\r\n    }\r\n  }\r\n}\r\n</script>\n\n\n// WEBPACK FOOTER //\n// Error404.vue?1b57e8b3","<template>\r\n<div class=\"container\">\r\n    <div slot=\"header\" class=\"toolbar\">\r\n        <q-toolbar-title :padding=\"1\">\r\n            <button v-go-back=\"'/'\">\r\n          <i>arrow_back</i>\r\n        </button> Login\r\n        </q-toolbar-title>\r\n        <button><i>help</i></button>\r\n    </div>\r\n    <div class=\"layout-view layout-padding\">\r\n        <div class=\"list\">\r\n            <div class=\"item three-lines\">\r\n                <i class=\"item-primary\">mail</i>\r\n                <div class=\"item-content\">\r\n                    <div class=\"stacked-label\">\r\n                        <input v-model=\"credentials.email\" required placeholder=\"Your email\" class=\"full-width\">\r\n                        <label>Email</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <hr>\r\n            <div class=\"item three-lines\">\r\n                <i class=\"item-primary\">vpn_key</i>\r\n                <div class=\"item-content\">\r\n                    <div class=\"stacked-label\">\r\n                        <input v-model=\"credentials.password\" type=\"password\" required placeholder=\"Your password\" class=\"full-width\">\r\n                        <label>Password</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <button class=\"primary full-width\" @click=\"userLogin()\">Login</button>\r\n    </div>\r\n</div>\r\n</template>\r\n<script>\r\nimport {\r\n    mapActions\r\n} from 'vuex'\r\nexport default {\r\n    name: \"login\",\r\n    data: function data() {\r\n        return {\r\n            credentials: {\r\n                email: 'rto@rto.com',\r\n                password: '12345678'\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        userLogin() {\r\n            // AUTH WILL BE CALLED with data\r\n            this.$store.dispatch('authenticateUser', this.credentials)\r\n                .then(res => {\r\n                    this.loading = false;\r\n                    this.$router.push({\r\n                        name: 'home',\r\n                        params: {\r\n                        }\r\n                    });\r\n                })\r\n                .catch(res => {\r\n                    this.loading = false;\r\n                    this.errors = res.errors;\r\n                });\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style>\r\n\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// login.vue?071cae6b","<template>\r\n<div id=\"logout\">\r\n\r\n</div>\r\n</template>\r\n<script>\r\nimport {\r\n    mapGetters,\r\n    mapActions\r\n} from 'vuex'\r\nexport default {\r\n    name: 'logout',\r\n    data: function data() {\r\n        return {\r\n\r\n        }\r\n    },\r\n    methods: {\r\n        ...mapActions([\r\n            'deauthenticateUser'\r\n        ])\r\n    },\r\n    mounted() {\r\n        this.deauthenticateUser();\r\n        this.$router.push({\r\n            name: 'login'\r\n        });\r\n    }\r\n}\r\n</script>\r\n<style>\r\n\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// logout.vue?c614c8a4","<template>\r\n<div class=\"container\">\r\n    <div slot=\"header\" class=\"toolbar\">\r\n        <q-toolbar-title :padding=\"1\">\r\n            <button v-go-back=\"'/'\">\r\n          <i>arrow_back</i>\r\n        </button> Register\r\n      </q-toolbar-title>\r\n      <button><i>help</i></button>\r\n    </div>\r\n    <div class=\"layout-view layout-padding\">\r\n        <div class=\"list\">\r\n            <div class=\"item three-lines\">\r\n                <i class=\"item-primary\">face</i>\r\n                <div class=\"item-content\">\r\n                    <div class=\"stacked-label\">\r\n                        <input v-model=\"credentials.name\" required placeholder=\"Your name\" class=\"full-width\">\r\n                        <label>Name</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <hr>\r\n            <div class=\"item three-lines\">\r\n                <i class=\"item-primary\">mail</i>\r\n                <div class=\"item-content\">\r\n                    <div class=\"stacked-label\">\r\n                        <input v-model=\"credentials.email\" required placeholder=\"Your email\" class=\"full-width\">\r\n                        <label>Email</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <hr>\r\n            <div class=\"item three-lines\">\r\n                <i class=\"item-primary\">vpn_key</i>\r\n                <div class=\"item-content\">\r\n                    <div class=\"stacked-label\">\r\n                        <input v-model=\"credentials.password\" type=\"password\" required placeholder=\"Your password\" class=\"full-width\">\r\n                        <label>Password</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <button class=\"primary full-width\" @click=\"submit()\">Register</button>\r\n    </div>\r\n</div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: \"register\",\r\n    data: function data() {\r\n        return {\r\n            credentials: {\r\n                name: '',\r\n                email: '',\r\n                password: ''\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        submit() {\r\n            var credentials = {\r\n                name: this.credentials.name,\r\n                email: this.credentials.email,\r\n                password: this.credentials.password\r\n            }\r\n            auth.signup(this, credentials, 'jokes')\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style>\r\n\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// register.vue?209055a1","<template>\r\n  <div class=\"card bg-white animate-scale \">\r\n    <div class=\"card-title bg-blue text-white\">\r\n      Quantidade de Aniversariantes por mês\r\n      <q-fab icon=\"keyboard_arrow_left\" direction=\"left\" class=\"float-right\" classNames=\"teal\">\r\n        <q-small-fab class=\"teal\" @click.native=\"tipoGrafico = 'bar'\" icon=\"\"><i class=\"mdi mdi-chart-bar\"></i></q-small-fab>\r\n        <q-small-fab class=\"teal\" @click.native=\"tipoGrafico = 'horizontalBar'\" icon=\"\"><i class=\"mdi mdi-chart-timeline\"></i></q-small-fab>\r\n      </q-fab>\r\n    </div>\r\n    <div class=\"card-content\">\r\n      <canvas id=\"aniversarios-mes\"></canvas>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n  /* eslint-disable */\r\n  import Chart from 'chart.js'\r\n  export default {\r\n    mounted () {\r\n      this.getBairrosAgrupados()\r\n    },\r\n    computed: {\r\n      nomeBairros (){\r\n        let bairros = []\r\n        for (let item of Object.keys(this.bairrosAgrupados)) {\r\n          bairros.push(format(new Date(item), 'MMM', {locale: ptLocale}))\r\n        }\r\n        return bairros\r\n      },\r\n      valoresPorBairro (){\r\n        return Object.keys(this.bairrosAgrupados).map(key => this.bairrosAgrupados[key])\r\n      },\r\n      dados () {\r\n        return {\r\n          labels: this.nomeBairros,\r\n          datasets: [{\r\n            data: this.valoresPorBairro,\r\n            backgroundColor: [\r\n              'rgba(255, 99, 132, 1)',\r\n              'rgba(54, 162, 235, 1)',\r\n              'rgba(255, 206, 86, 1)',\r\n              'rgba(75, 192, 192, 1)',\r\n              'rgba(153, 102, 255, 1)',\r\n              'rgba(255, 159, 64, 1)',\r\n              'rgba(255, 99, 132, 1)',\r\n              'rgba(54, 162, 235, 1)',\r\n              'rgba(255, 206, 86, 1)',\r\n              'rgba(75, 192, 192, 1)',\r\n              'rgba(153, 102, 255, 1)',\r\n              'rgba(255, 159, 64, 1)'\r\n            ],\r\n            borderColor: [\r\n              'rgba(255,99,132,1)',\r\n              'rgba(54, 162, 235, 1)',\r\n              'rgba(255, 206, 86, 1)',\r\n              'rgba(75, 192, 192, 1)',\r\n              'rgba(153, 102, 255, 1)',\r\n              'rgba(255, 159, 64, 1)'\r\n            ]\r\n          }]\r\n        }\r\n      }\r\n    },\r\n    watch: {\r\n      bairrosAgrupados () {\r\n        this.criarChart()\r\n      },\r\n      tipoGrafico () {\r\n        this.chart.destroy()\r\n        this.criarChart()\r\n      }\r\n    },\r\n    data () {\r\n      return {\r\n        bairrosAgrupados: {},\r\n        tipoGrafico: 'bar',\r\n        chart: ''\r\n      }\r\n    },\r\n    methods: {\r\n      getBairrosAgrupados () {\r\n        let vm = this\r\n        vm.$http.get('/relatorio/aniversariantes-mes')\r\n          .then(function (response) {\r\n            vm.bairrosAgrupados = response.data\r\n          })\r\n      },\r\n      criarChart () {\r\n        let ctx = document.getElementById(\"aniversarios-mes\")\r\n        this.chart = new Chart(ctx, {\r\n          type: this.tipoGrafico,\r\n          data: this.dados\r\n        })\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// cardAniversariosPorMes.vue?01562c9a","<template>\r\n  <div class=\"card bg-white animate-scale \">\r\n    <div class=\"card-title bg-blue text-white\">\r\n      Cadastros por mês no ano escolhido - {{ano}}\r\n\r\n      <q-fab icon=\"keyboard_arrow_left\" direction=\"left\" class=\"float-right\" classNames=\"teal\">\r\n        <q-small-fab class=\"teal\" @click.native=\"ano = '2016'\" icon=\"\">2016</q-small-fab>\r\n        <q-small-fab class=\"teal\" @click.native=\"ano = '2017'\" icon=\"\">2017</q-small-fab>\r\n      </q-fab>\r\n    </div>\r\n    <div class=\"card-content \">\r\n      <canvas id=\"cadastros-mes\" ></canvas>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  //\r\n  /* eslint-disable */\r\n  import Chart from 'chart.js'\r\n  export default {\r\n    mounted () {\r\n      this.getTotalAgrupadoPorMesNoAnoEscolhido()\r\n    },\r\n    computed: {\r\n      nomeMeses (){\r\n        return Object.keys(this.totalAgrupadoPorMes)\r\n      },\r\n      valoresAgrupados (){\r\n        return Object.keys(this.totalAgrupadoPorMes).map(key => this.totalAgrupadoPorMes[key])\r\n      },\r\n      dados () {\r\n        return {\r\n          chart: '',\r\n          labels: this.nomeMeses,\r\n          datasets: [{\r\n            data: this.valoresAgrupados,\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: \"rgba(75,192,192, 1)\",\r\n            borderColor: \"rgba(75,192,192,1)\",\r\n            pointHitRadius: 10\r\n          }]\r\n        }\r\n      }\r\n    },\r\n    watch: {\r\n      totalAgrupadoPorMes () {\r\n        this.criarChart()\r\n      },\r\n      ano () {\r\n        this.getTotalAgrupadoPorMesNoAnoEscolhido()\r\n        this.chart.destroy()\r\n\r\n        this.criarChart()\r\n      }\r\n    },\r\n    data () {\r\n      return {\r\n        ano: '2016',\r\n        totalAgrupadoPorMes: {}\r\n      }\r\n    },\r\n    methods: {\r\n      getTotalAgrupadoPorMesNoAnoEscolhido () {\r\n        let vm = this\r\n        vm.$http.get(`pessoas/total-cadastro-agrupado-mes-por-ano/${this.ano}`)\r\n          .then(function (response) {\r\n            vm.totalAgrupadoPorMes = response.data\r\n          })\r\n      },\r\n      criarChart () {\r\n        var ctx = document.getElementById(\"cadastros-mes\")\r\n        this.chart = new Chart(ctx, {\r\n          type: 'line',\r\n          data: this.dados\r\n        })\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// cardCadastrosPorMes.vue?4001fe53","<template>\r\n  <div class=\"card bg-white animate-scale \">\r\n    <div class=\"card-title bg-blue text-white\">\r\n      Quantidade de pessoas por bairro\r\n      <q-fab icon=\"keyboard_arrow_left\" direction=\"left\" class=\"float-right\" classNames=\"teal\">\r\n        <q-small-fab class=\"teal\" @click.native=\"tipoGrafico = 'bar'\" icon=\"\"><i class=\"mdi mdi-chart-bar\"></i></q-small-fab>\r\n        <q-small-fab class=\"teal\" @click.native=\"tipoGrafico = 'horizontalBar'\" icon=\"\"><i class=\"mdi mdi-chart-timeline\"></i></q-small-fab>\r\n      </q-fab>\r\n    </div>\r\n    <div class=\"card-content\">\r\n      <canvas id=\"pessoas-bairro\"></canvas>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n  /* eslint-disable */\r\n  import Chart from 'chart.js'\r\n  export default {\r\n    mounted () {\r\n      this.getBairrosAgrupados()\r\n    },\r\n    computed: {\r\n      nomeBairros (){\r\n        return Object.keys(this.bairrosAgrupados)\r\n      },\r\n      valoresPorBairro (){\r\n        return Object.keys(this.bairrosAgrupados).map(key => this.bairrosAgrupados[key])\r\n      },\r\n      dados () {\r\n        return {\r\n          labels: this.nomeBairros,\r\n          datasets: [{\r\n            data: this.valoresPorBairro,\r\n            backgroundColor: [\r\n              'rgba(255, 99, 132, 1)',\r\n              'rgba(54, 162, 235, 1)',\r\n              'rgba(255, 206, 86, 1)',\r\n              'rgba(75, 192, 192, 1)',\r\n              'rgba(153, 102, 255, 1)',\r\n              'rgba(255, 159, 64, 1)'\r\n            ],\r\n            borderColor: [\r\n              'rgba(255,99,132,1)',\r\n              'rgba(54, 162, 235, 1)',\r\n              'rgba(255, 206, 86, 1)',\r\n              'rgba(75, 192, 192, 1)',\r\n              'rgba(153, 102, 255, 1)',\r\n              'rgba(255, 159, 64, 1)'\r\n            ]\r\n          }]\r\n        }\r\n      }\r\n    },\r\n    watch: {\r\n      bairrosAgrupados () {\r\n        let ctx = document.getElementById(\"pessoas-bairro\")\r\n        this.chart = new Chart(ctx, {\r\n          type: this.tipoGrafico,\r\n          data: this.dados\r\n        })\r\n      },\r\n      tipoGrafico () {\r\n        let ctx = document.getElementById(\"pessoas-bairro\")\r\n        this.chart.destroy()\r\n        this.chart = new Chart(ctx, {\r\n          type: this.tipoGrafico,\r\n          data: this.dados\r\n        })\r\n      }\r\n    },\r\n    data () {\r\n      return {\r\n        bairrosAgrupados: {},\r\n        tipoGrafico: 'horizontalBar',\r\n        chart: ''\r\n      }\r\n    },\r\n    methods: {\r\n      getBairrosAgrupados () {\r\n        let vm = this\r\n        vm.$http.get('/endereco/bairros-agrupados')\r\n          .then(function (response) {\r\n            vm.bairrosAgrupados = response.data\r\n          })\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// cardPessoasPorBairro.vue?1d64d38a","<template>\r\n  <div class=\"card text-white animate-scale\" :class=\"backgroundColor\">\r\n    <div class=\"card-content \">\r\n      <div class=\"row\">\r\n        <div class=\"width-1of3\">\r\n          <i>people</i>\r\n        </div>\r\n        <div class=\"width-2of3\">\r\n          <p class=\"text-italic \">{{title}}</p>\r\n          <h5>\r\n            <i-count-up\r\n              :start=\"0\"\r\n              :end=\"total\"\r\n              :decimals=\"0\"\r\n              :duration=\"2.5\"\r\n              :options=\"options\"\r\n            ></i-count-up>\r\n          </h5>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import ICountUp from 'vue-countup-v2'\r\n  export default {\r\n    props: ['title', 'total', 'backgroundColor'],\r\n    data () {\r\n      return {\r\n        options: {\r\n          separator: '.'\r\n        }\r\n      }\r\n    },\r\n    components: {\r\n      ICountUp\r\n    }\r\n  }\r\n</script>\r\n<style scoped>\r\n  i {\r\n    font-size: 54px;\r\n  }\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// cardTotal.vue?63b0e460","<template>\r\n<div class=\"container\">\r\n    <div slot=\"header\" class=\"toolbar\">\r\n        <q-toolbar-title :padding=\"1\">\r\n            <button v-go-back=\"'/'\">\r\n          <i>arrow_back</i>\r\n        </button> Home\r\n        </q-toolbar-title>\r\n        <button><i>help</i></button>\r\n    </div>\r\n    <div class=\"layout-padding \">\r\n        <div class=\"flex wrap gutter\">\r\n            <div class=\"auto\">\r\n                <cardTotal title=\"Total Posts\" background-color=\"bg-teal-8\" :total=\"totalPosts\">\r\n                </cardTotal>\r\n            </div>\r\n            <div class=\"auto\">\r\n                <cardTotal title=\"Total comments\" background-color=\"bg-teal-8\" :total=\"totalComments\">\r\n                </cardTotal>\r\n            </div>\r\n            <div class=\"auto\">\r\n                <cardTotal title=\"Static total\" background-color=\"bg-teal-8\" :total=\"50004\">\r\n                </cardTotal>\r\n            </div>\r\n        </div>\r\n        <div class=\"flex wrap gutter\">\r\n            <div class=\"width-1of2\">\r\n\r\n            </div>\r\n            <div class=\"auto\">\r\n            </div>\r\n        </div>\r\n        <div class=\"flex wrap gutter\">\r\n            <div class=\"width-4of5 sm-auto\">\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n</template>\r\n<script type=\"text/javascript\">\r\nimport cardTotal from './cardTotal.vue'\r\nexport default {\r\n    name: 'Home',\r\n    mounted() {\r\n\r\n    },\r\n    data() {\r\n        return {\r\n            totalPosts: 0,\r\n            totalComments: 0,\r\n            totalTodos: 0\r\n        }\r\n    },\r\n    computed: {\r\n        dataForGraph() {\r\n            return {\r\n                posts: this.totalPosts,\r\n                todos: this.totalTodos,\r\n                comments: this.totalComments\r\n            }\r\n        }\r\n    },\r\n    components: {\r\n        cardTotal\r\n    },\r\n    methods: {\r\n\r\n    }\r\n}\r\n</script>\r\n<style>\r\n\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// home.vue?33fd44b3","<template>\r\n<div class=\"container\">\r\n    <div slot=\"header\" class=\"toolbar\">\r\n        <q-toolbar-title :padding=\"1\">\r\n            <button v-go-back=\"'/'\">\r\n          <i>arrow_back</i>\r\n        </button> Question Type\r\n        </q-toolbar-title>\r\n        <button><i>help</i></button>\r\n    </div>\r\n    <div class=\"layout-padding \">\r\n        <q-data-table :data=\"questiontypes\" :config=\"config\" :columns=\"columns\">\r\n            <template slot=\"col-source\" scope=\"cell\">\r\n                      <span v-if=\"cell.data === 'Audit'\" class=\"label text-white bg-primary\">\r\n                        Audit\r\n                        <q-tooltip>Some tooltip</q-tooltip>\r\n                      </span>\r\n                      <span v-else class=\"label text-white bg-negative\">{{cell.data}}</span>\r\n            </template>\r\n\r\n        <template slot=\"selection\" scope=\"props\">\r\n              <button class=\"primary clear\" @click=\"changeMessage(props)\">\r\n                          <i>edit</i>\r\n                        </button>\r\n              <button class=\"primary clear\" @click=\"deleteRow(props)\">\r\n                          <i>delete</i>\r\n                        </button>\r\n        </template>\r\n      </q-data-table>\r\n    </div>\r\n</div>\r\n</template>\r\n<script>\r\nimport {\r\n    mapGetters,\r\n    mapActions\r\n} from 'vuex'\r\nimport {\r\n    Platform,\r\n    Utils,\r\n    Toast\r\n} from 'quasar-framework'\r\nexport default {\r\n    name: \"questiontype\",\r\n    data() {\r\n        return {\r\n            config: {\r\n                title: 'Question Types',\r\n                refresh: true,\r\n                columnPicker: true,\r\n                leftStickyColumns: 1,\r\n                rightStickyColumns: 2,\r\n                bodyStyle: {\r\n                    maxHeight: Platform.is.mobile ? '50vh' : '500px'\r\n                },\r\n                rowHeight: '50px',\r\n                responsive: true,\r\n                pagination: {\r\n                    rowsPerPage: 15,\r\n                    options: [5, 10, 15, 30, 50, 500]\r\n                },\r\n                selection: 'single',\r\n                messages: {\r\n                    noData: '<i>warning</i> No data available to show.',\r\n                    noDataAfterFiltering: '<i>warning</i> No results. Please refine your search terms.'\r\n                }\r\n            },\r\n            columns: [{\r\n                    label: 'Id',\r\n                    field: 'QuestionTypeId',\r\n                    width: '20%',\r\n                    filter: true,\r\n                    sort: true\r\n                },\r\n                {\r\n                    label: 'Name',\r\n                    field: 'QuestionTypeName',\r\n                    width: '40%',\r\n                    filter: true,\r\n                    sort: true\r\n                },\r\n                {\r\n                    label: 'Created Date',\r\n                    field: 'CreatedDate',\r\n                    width: '40%',\r\n                    filter: true,\r\n                    sort: 'date',\r\n                    format(value) {\r\n                        return new Date(value).toLocaleString()\r\n                    }\r\n                }\r\n            ],\r\n\r\n            pagination: true,\r\n            rowHeight: 50,\r\n            bodyHeightProp: 'maxHeight',\r\n            bodyHeight: 500\r\n        }\r\n    },\r\n    watch: {\r\n        pagination(value) {\r\n            if (!value) {\r\n                this.oldPagination = Utils.clone(this.config.pagination)\r\n                this.config.pagination = false\r\n                return\r\n            }\r\n\r\n            this.config.pagination = this.oldPagination\r\n        },\r\n        rowHeight(value) {\r\n            this.config.rowHeight = value + 'px'\r\n        },\r\n        bodyHeight(value) {\r\n            let style = {}\r\n            if (this.bodyHeightProp !== 'auto') {\r\n                style[this.bodyHeightProp] = value + 'px'\r\n            }\r\n            this.config.bodyStyle = style\r\n        },\r\n        bodyHeightProp(value) {\r\n            let style = {}\r\n            if (value !== 'auto') {\r\n                style[value] = this.bodyHeight + 'px'\r\n            }\r\n            this.config.bodyStyle = style\r\n        }\r\n    },\r\n    mounted: function mounted() {\r\n        this.getAllQuestionTypes();\r\n    },\r\n    computed: mapGetters([\r\n        'questiontypes'\r\n    ]),\r\n    methods: mapActions([\r\n        'getAllQuestionTypes'\r\n    ])\r\n}\r\n</script>\r\n<style>\r\n\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// questiontype.vue?d49a3e90","<template>\r\n<div class=\"container\">\r\n    <div slot=\"header\" class=\"toolbar\">\r\n        <q-toolbar-title :padding=\"1\">\r\n            <button v-go-back=\"'/'\">\r\n          <i>arrow_back</i>\r\n        </button> User\r\n        </q-toolbar-title>\r\n        <button><i>help</i></button>\r\n    </div>\r\n    <div class=\"layout-padding \">\r\n        <q-data-table :data=\"users\" :config=\"config\" :columns=\"columns\">\r\n            <template slot=\"col-source\" scope=\"cell\">\r\n                      <span v-if=\"cell.data === 'Audit'\" class=\"label text-white bg-primary\">\r\n                        Audit\r\n                        <q-tooltip>Some tooltip</q-tooltip>\r\n                      </span>\r\n                      <span v-else class=\"label text-white bg-negative\">{{cell.data}}</span>\r\n            </template>\r\n\r\n        <template slot=\"selection\" scope=\"props\">\r\n              <button class=\"primary clear\" @click=\"changeMessage(props)\">\r\n                          <i>edit</i>\r\n                        </button>\r\n              <button class=\"primary clear\" @click=\"deleteRow(props)\">\r\n                          <i>delete</i>\r\n                        </button>\r\n        </template>\r\n      </q-data-table>\r\n    </div>\r\n</div>\r\n</template>\r\n<script>\r\nimport {\r\n    mapGetters,\r\n    mapActions\r\n} from 'vuex'\r\nimport {\r\n    Platform,\r\n    Utils,\r\n    Toast\r\n} from 'quasar-framework'\r\nexport default {\r\n    name: \"user\",\r\n    data() {\r\n        return {\r\n            config: {\r\n                title: 'Users',\r\n                refresh: true,\r\n                columnPicker: true,\r\n                leftStickyColumns: 1,\r\n                rightStickyColumns: 2,\r\n                bodyStyle: {\r\n                    maxHeight: Platform.is.mobile ? '50vh' : '500px'\r\n                },\r\n                rowHeight: '50px',\r\n                responsive: true,\r\n                pagination: {\r\n                    rowsPerPage: 15,\r\n                    options: [5, 10, 15, 30, 50, 500]\r\n                },\r\n                selection: 'single',\r\n                messages: {\r\n                    noData: '<i>warning</i> No data available to show.',\r\n                    noDataAfterFiltering: '<i>warning</i> No results. Please refine your search terms.'\r\n                }\r\n            },\r\n            columns: [{\r\n                    label: 'Id',\r\n                    field: 'Id',\r\n                    width: '120px',\r\n                    filter: true,\r\n                    sort: true\r\n                },\r\n                {\r\n                    label: 'Firstname',\r\n                    field: 'FirstName',\r\n                    filter: true,\r\n                    sort: true\r\n                },\r\n                {\r\n                    label: 'Lastname',\r\n                    field: 'LastName',\r\n                    filter: true,\r\n                    sort: true\r\n                },\r\n                {\r\n                    label: 'Email',\r\n                    field: 'Email',\r\n                    filter: true,\r\n                    sort: true\r\n                },\r\n                {\r\n                    label: 'Login',\r\n                    field: 'Login',\r\n                    filter: true,\r\n                    sort: true\r\n                },\r\n                {\r\n                    label: 'UserType',\r\n                    field: 'UserTypeId',\r\n                    filter: true,\r\n                    sort: true\r\n                },\r\n                {\r\n                    label: 'Created Date',\r\n                    field: 'CreatedDate',\r\n                    filter: true,\r\n                    sort: 'date',\r\n                    format(value) {\r\n                        return new Date(value).toLocaleString()\r\n                    }\r\n                }\r\n            ],\r\n\r\n            pagination: true,\r\n            rowHeight: 50,\r\n            bodyHeightProp: 'maxHeight',\r\n            bodyHeight: 500\r\n        }\r\n    },\r\n    watch: {\r\n        pagination(value) {\r\n            if (!value) {\r\n                this.oldPagination = Utils.clone(this.config.pagination)\r\n                this.config.pagination = false\r\n                return\r\n            }\r\n\r\n            this.config.pagination = this.oldPagination\r\n        },\r\n        rowHeight(value) {\r\n            this.config.rowHeight = value + 'px'\r\n        },\r\n        bodyHeight(value) {\r\n            let style = {}\r\n            if (this.bodyHeightProp !== 'auto') {\r\n                style[this.bodyHeightProp] = value + 'px'\r\n            }\r\n            this.config.bodyStyle = style\r\n        },\r\n        bodyHeightProp(value) {\r\n            let style = {}\r\n            if (value !== 'auto') {\r\n                style[value] = this.bodyHeight + 'px'\r\n            }\r\n            this.config.bodyStyle = style\r\n        }\r\n    },\r\n    mounted: function mounted() {\r\n        this.getAllUsers();\r\n    },\r\n    computed: mapGetters([\r\n        'users'\r\n    ]),\r\n    methods: mapActions([\r\n        'getAllUsers'\r\n    ])\r\n}\r\n</script>\r\n<style>\r\n\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// user.vue?47fa60fd","module.exports = { \"default\": require(\"core-js/library/fn/get-iterator\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/get-iterator.js\n// module id = 204\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bar = function(context, config) {\n\t\tconfig.type = 'bar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/charts/Chart.Bar.js\n// module id = 209\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bubble = function(context, config) {\n\t\tconfig.type = 'bubble';\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/charts/Chart.Bubble.js\n// module id = 210\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Doughnut = function(context, config) {\n\t\tconfig.type = 'doughnut';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/charts/Chart.Doughnut.js\n// module id = 211\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Line = function(context, config) {\n\t\tconfig.type = 'line';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/charts/Chart.Line.js\n// module id = 212\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.PolarArea = function(context, config) {\n\t\tconfig.type = 'polarArea';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/charts/Chart.PolarArea.js\n// module id = 213\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Radar = function(context, config) {\n\t\tconfig.type = 'radar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/charts/Chart.Radar.js\n// module id = 214\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\thover: {\n\t\t\tmode: 'single'\n\t\t},\n\n\t\tscales: {\n\t\t\txAxes: [{\n\t\t\t\ttype: 'linear', // scatter should not use a category axis\n\t\t\t\tposition: 'bottom',\n\t\t\t\tid: 'x-axis-1' // need an ID so datasets can reference the scale\n\t\t\t}],\n\t\t\tyAxes: [{\n\t\t\t\ttype: 'linear',\n\t\t\t\tposition: 'left',\n\t\t\t\tid: 'y-axis-1'\n\t\t\t}]\n\t\t},\n\n\t\ttooltips: {\n\t\t\tcallbacks: {\n\t\t\t\ttitle: function() {\n\t\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\t\treturn '';\n\t\t\t\t},\n\t\t\t\tlabel: function(tooltipItem) {\n\t\t\t\t\treturn '(' + tooltipItem.xLabel + ', ' + tooltipItem.yLabel + ')';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t// Register the default config for this type\n\tChart.defaults.scatter = defaultConfig;\n\n\t// Scatter charts use line controllers\n\tChart.controllers.scatter = Chart.controllers.line;\n\n\tChart.Scatter = function(context, config) {\n\t\tconfig.type = 'scatter';\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/charts/Chart.Scatter.js\n// module id = 215\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.bar = {\n\t\thover: {\n\t\t\tmode: 'label'\n\t\t},\n\n\t\tscales: {\n\t\t\txAxes: [{\n\t\t\t\ttype: 'category',\n\n\t\t\t\t// Specific to Bar Controller\n\t\t\t\tcategoryPercentage: 0.8,\n\t\t\t\tbarPercentage: 0.9,\n\n\t\t\t\t// grid line settings\n\t\t\t\tgridLines: {\n\t\t\t\t\toffsetGridLines: true\n\t\t\t\t}\n\t\t\t}],\n\t\t\tyAxes: [{\n\t\t\t\ttype: 'linear'\n\t\t\t}]\n\t\t}\n\t};\n\n\tChart.controllers.bar = Chart.DatasetController.extend({\n\n\t\tdataElementType: Chart.elements.Rectangle,\n\n\t\tinitialize: function(chart, datasetIndex) {\n\t\t\tChart.DatasetController.prototype.initialize.call(this, chart, datasetIndex);\n\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\n\t\t\tmeta.stack = dataset.stack;\n\t\t\t// Use this to indicate that this is a bar dataset.\n\t\t\tmeta.bar = true;\n\t\t},\n\n\t\t// Correctly calculate the bar width accounting for stacks and the fact that not all bars are visible\n\t\tgetStackCount: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\n\t\t\tvar stacks = [];\n\t\t\thelpers.each(me.chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar dsMeta = me.chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (dsMeta.bar && me.chart.isDatasetVisible(datasetIndex) &&\n\t\t\t\t\t(yScale.options.stacked === false ||\n\t\t\t\t\t(yScale.options.stacked === true && stacks.indexOf(dsMeta.stack) === -1) ||\n\t\t\t\t\t(yScale.options.stacked === undefined && (dsMeta.stack === undefined || stacks.indexOf(dsMeta.stack) === -1)))) {\n\t\t\t\t\tstacks.push(dsMeta.stack);\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\treturn stacks.length;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\thelpers.each(me.getMeta().data, function(rectangle, index) {\n\t\t\t\tme.updateElement(rectangle, index, reset);\n\t\t\t}, me);\n\t\t},\n\n\t\tupdateElement: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar scaleBase = yScale.getBasePixel();\n\t\t\tvar rectangleElementOptions = me.chart.options.elements.rectangle;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\n\t\t\trectangle._xScale = xScale;\n\t\t\trectangle._yScale = yScale;\n\t\t\trectangle._datasetIndex = me.index;\n\t\t\trectangle._index = index;\n\n\t\t\tvar ruler = me.getRuler(index); // The index argument for compatible\n\t\t\trectangle._model = {\n\t\t\t\tx: me.calculateBarX(index, me.index, ruler),\n\t\t\t\ty: reset ? scaleBase : me.calculateBarY(index, me.index),\n\n\t\t\t\t// Tooltip\n\t\t\t\tlabel: me.chart.data.labels[index],\n\t\t\t\tdatasetLabel: dataset.label,\n\n\t\t\t\t// Appearance\n\t\t\t\thorizontal: false,\n\t\t\t\tbase: reset ? scaleBase : me.calculateBarBase(me.index, index),\n\t\t\t\twidth: me.calculateBarWidth(ruler),\n\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor),\n\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleElementOptions.borderSkipped,\n\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor),\n\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth)\n\t\t\t};\n\n\t\t\trectangle.pivot();\n\t\t},\n\n\t\tcalculateBarBase: function(datasetIndex, index) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar base = yScale.getBaseValue();\n\t\t\tvar original = base;\n\n\t\t\tif ((yScale.options.stacked === true) ||\n\t\t\t\t(yScale.options.stacked === undefined && meta.stack !== undefined)) {\n\t\t\t\tvar chart = me.chart;\n\t\t\t\tvar datasets = chart.data.datasets;\n\t\t\t\tvar value = Number(datasets[datasetIndex].data[index]);\n\n\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tvar currentDs = datasets[i];\n\t\t\t\t\tvar currentDsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (currentDsMeta.bar && currentDsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i) &&\n\t\t\t\t\t\tmeta.stack === currentDsMeta.stack) {\n\t\t\t\t\t\tvar currentVal = Number(currentDs.data[index]);\n\t\t\t\t\t\tbase += value < 0 ? Math.min(currentVal, original) : Math.max(currentVal, original);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn yScale.getPixelForValue(base);\n\t\t\t}\n\n\t\t\treturn yScale.getBasePixel();\n\t\t},\n\n\t\tgetRuler: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar stackCount = me.getStackCount();\n\n\t\t\tvar tickWidth = xScale.width / xScale.ticks.length;\r\n\t\t\tvar categoryWidth = tickWidth * xScale.options.categoryPercentage;\n\t\t\tvar categorySpacing = (tickWidth - (tickWidth * xScale.options.categoryPercentage)) / 2;\n\t\t\tvar fullBarWidth = categoryWidth / stackCount;\n\n\t\t\tvar barWidth = fullBarWidth * xScale.options.barPercentage;\n\t\t\tvar barSpacing = fullBarWidth - (fullBarWidth * xScale.options.barPercentage);\n\n\t\t\treturn {\n\t\t\t\tstackCount: stackCount,\n\t\t\t\ttickWidth: tickWidth,\n\t\t\t\tcategoryWidth: categoryWidth,\n\t\t\t\tcategorySpacing: categorySpacing,\n\t\t\t\tfullBarWidth: fullBarWidth,\n\t\t\t\tbarWidth: barWidth,\n\t\t\t\tbarSpacing: barSpacing\n\t\t\t};\n\t\t},\n\n\t\tcalculateBarWidth: function(ruler) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tif (xScale.options.barThickness) {\n\t\t\t\treturn xScale.options.barThickness;\n\t\t\t}\n\t\t\treturn ruler.barWidth;\r\n\t\t},\n\n\t\t// Get stack index from the given dataset index accounting for stacks and the fact that not all bars are visible\n\t\tgetStackIndex: function(datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.chart.getDatasetMeta(datasetIndex);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar dsMeta, j;\n\t\t\tvar stacks = [meta.stack];\n\n\t\t\tfor (j = 0; j < datasetIndex; ++j) {\n\t\t\t\tdsMeta = this.chart.getDatasetMeta(j);\n\t\t\t\tif (dsMeta.bar && this.chart.isDatasetVisible(j) &&\n\t\t\t\t\t(yScale.options.stacked === false ||\n\t\t\t\t\t(yScale.options.stacked === true && stacks.indexOf(dsMeta.stack) === -1) ||\n\t\t\t\t\t(yScale.options.stacked === undefined && (dsMeta.stack === undefined || stacks.indexOf(dsMeta.stack) === -1)))) {\n\t\t\t\t\tstacks.push(dsMeta.stack);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn stacks.length - 1;\n\t\t},\n\n\t\tcalculateBarX: function(index, datasetIndex, ruler) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar stackIndex = me.getStackIndex(datasetIndex);\n\t\t\tvar leftTick = xScale.getPixelForValue(null, index, datasetIndex, me.chart.isCombo);\n\t\t\tleftTick -= me.chart.isCombo ? (ruler.tickWidth / 2) : 0;\n\n\t\t\treturn leftTick +\n\t\t\t\t(ruler.barWidth / 2) +\n\t\t\t\truler.categorySpacing +\n\t\t\t\t(ruler.barWidth * stackIndex) +\n\t\t\t\t(ruler.barSpacing / 2) +\n\t\t\t\t(ruler.barSpacing * stackIndex);\n\t\t},\n\n\t\tcalculateBarY: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar value = Number(me.getDataset().data[index]);\n\n\t\t\tif (yScale.options.stacked ||\n\t\t\t\t(yScale.options.stacked === undefined && meta.stack !== undefined)) {\n\t\t\t\tvar base = yScale.getBaseValue();\n\t\t\t\tvar sumPos = base,\n\t\t\t\t\tsumNeg = base;\r\n\n\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tvar ds = me.chart.data.datasets[i];\n\t\t\t\t\tvar dsMeta = me.chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.bar && dsMeta.yAxisID === yScale.id && me.chart.isDatasetVisible(i) &&\n\t\t\t\t\t\tmeta.stack === dsMeta.stack) {\n\t\t\t\t\t\tvar stackedVal = Number(ds.data[index]);\n\t\t\t\t\t\tif (stackedVal < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedVal || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedVal || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (value < 0) {\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + value);\n\t\t\t\t}\n\t\t\t\treturn yScale.getPixelForValue(sumPos + value);\n\t\t\t}\n\n\t\t\treturn yScale.getPixelForValue(value);\n\t\t},\n\n\t\tdraw: function(ease) {\n\t\t\tvar me = this;\n\t\t\tvar easingDecimal = ease || 1;\n\t\t\tvar metaData = me.getMeta().data;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar i, len;\n\n\t\t\tChart.canvasHelpers.clipArea(me.chart.chart.ctx, me.chart.chartArea);\n\t\t\tfor (i = 0, len = metaData.length; i < len; ++i) {\n\t\t\t\tvar d = dataset.data[i];\n\t\t\t\tif (d !== null && d !== undefined && !isNaN(d)) {\n\t\t\t\t\tmetaData[i].transition(easingDecimal).draw();\n\t\t\t\t}\n\t\t\t}\n\t\t\tChart.canvasHelpers.unclipArea(me.chart.chart.ctx);\n\t\t},\n\n\t\tsetHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.getValueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.getValueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.getValueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\t\t\tvar rectangleElementOptions = this.chart.options.elements.rectangle;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\n\t\t}\n\n\t});\n\n\n\t// including horizontalBar in the bar file, instead of a file of its own\n\t// it extends bar (like pie extends doughnut)\n\tChart.defaults.horizontalBar = {\n\t\thover: {\n\t\t\tmode: 'label'\n\t\t},\n\n\t\tscales: {\n\t\t\txAxes: [{\n\t\t\t\ttype: 'linear',\n\t\t\t\tposition: 'bottom'\n\t\t\t}],\n\t\t\tyAxes: [{\n\t\t\t\tposition: 'left',\n\t\t\t\ttype: 'category',\n\n\t\t\t\t// Specific to Horizontal Bar Controller\n\t\t\t\tcategoryPercentage: 0.8,\n\t\t\t\tbarPercentage: 0.9,\n\n\t\t\t\t// grid line settings\n\t\t\t\tgridLines: {\n\t\t\t\t\toffsetGridLines: true\n\t\t\t\t}\n\t\t\t}]\n\t\t},\n\t\telements: {\n\t\t\trectangle: {\n\t\t\t\tborderSkipped: 'left'\n\t\t\t}\n\t\t},\n\t\ttooltips: {\n\t\t\tcallbacks: {\n\t\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\t\t// Pick first xLabel for now\n\t\t\t\t\tvar title = '';\n\n\t\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\t\tif (tooltipItems[0].yLabel) {\n\t\t\t\t\t\t\ttitle = tooltipItems[0].yLabel;\n\t\t\t\t\t\t} else if (data.labels.length > 0 && tooltipItems[0].index < data.labels.length) {\n\t\t\t\t\t\t\ttitle = data.labels[tooltipItems[0].index];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn title;\n\t\t\t\t},\n\t\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\t\tvar datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\n\t\t\t\t\treturn datasetLabel + ': ' + tooltipItem.xLabel;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tChart.controllers.horizontalBar = Chart.controllers.bar.extend({\n\n\t\t// Correctly calculate the bar width accounting for stacks and the fact that not all bars are visible\n\t\tgetStackCount: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\n\t\t\tvar stacks = [];\n\t\t\thelpers.each(me.chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar dsMeta = me.chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (dsMeta.bar && me.chart.isDatasetVisible(datasetIndex) &&\n\t\t\t\t\t(xScale.options.stacked === false ||\n\t\t\t\t\t(xScale.options.stacked === true && stacks.indexOf(dsMeta.stack) === -1) ||\n\t\t\t\t\t(xScale.options.stacked === undefined && (dsMeta.stack === undefined || stacks.indexOf(dsMeta.stack) === -1)))) {\n\t\t\t\t\tstacks.push(dsMeta.stack);\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\treturn stacks.length;\n\t\t},\n\n\t\tupdateElement: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar scaleBase = xScale.getBasePixel();\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar rectangleElementOptions = me.chart.options.elements.rectangle;\n\n\t\t\trectangle._xScale = xScale;\n\t\t\trectangle._yScale = yScale;\n\t\t\trectangle._datasetIndex = me.index;\n\t\t\trectangle._index = index;\n\n\t\t\tvar ruler = me.getRuler(index); // The index argument for compatible\n\t\t\trectangle._model = {\n\t\t\t\tx: reset ? scaleBase : me.calculateBarX(index, me.index),\n\t\t\t\ty: me.calculateBarY(index, me.index, ruler),\n\n\t\t\t\t// Tooltip\n\t\t\t\tlabel: me.chart.data.labels[index],\n\t\t\t\tdatasetLabel: dataset.label,\n\n\t\t\t\t// Appearance\n\t\t\t\thorizontal: true,\n\t\t\t\tbase: reset ? scaleBase : me.calculateBarBase(me.index, index),\n\t\t\t\theight: me.calculateBarHeight(ruler),\n\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor),\n\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleElementOptions.borderSkipped,\n\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor),\n\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth)\n\t\t\t};\n\n\t\t\trectangle.pivot();\n\t\t},\n\n\t\tcalculateBarBase: function(datasetIndex, index) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar base = xScale.getBaseValue();\n\t\t\tvar originalBase = base;\n\n\t\t\tif (xScale.options.stacked ||\n\t\t\t\t(xScale.options.stacked === undefined && meta.stack !== undefined)) {\n\t\t\t\tvar chart = me.chart;\n\t\t\t\tvar datasets = chart.data.datasets;\n\t\t\t\tvar value = Number(datasets[datasetIndex].data[index]);\n\n\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tvar currentDs = datasets[i];\n\t\t\t\t\tvar currentDsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (currentDsMeta.bar && currentDsMeta.xAxisID === xScale.id && chart.isDatasetVisible(i) &&\n\t\t\t\t\t\tmeta.stack === currentDsMeta.stack) {\n\t\t\t\t\t\tvar currentVal = Number(currentDs.data[index]);\n\t\t\t\t\t\tbase += value < 0 ? Math.min(currentVal, originalBase) : Math.max(currentVal, originalBase);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn xScale.getPixelForValue(base);\n\t\t\t}\n\n\t\t\treturn xScale.getBasePixel();\n\t\t},\n\n\t\tgetRuler: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar stackCount = me.getStackCount();\n\n\t\t\tvar tickHeight = yScale.height / yScale.ticks.length;\n\t\t\tvar categoryHeight = tickHeight * yScale.options.categoryPercentage;\n\t\t\tvar categorySpacing = (tickHeight - (tickHeight * yScale.options.categoryPercentage)) / 2;\n\t\t\tvar fullBarHeight = categoryHeight / stackCount;\n\n\t\t\tvar barHeight = fullBarHeight * yScale.options.barPercentage;\n\t\t\tvar barSpacing = fullBarHeight - (fullBarHeight * yScale.options.barPercentage);\n\n\t\t\treturn {\n\t\t\t\tstackCount: stackCount,\n\t\t\t\ttickHeight: tickHeight,\n\t\t\t\tcategoryHeight: categoryHeight,\n\t\t\t\tcategorySpacing: categorySpacing,\n\t\t\t\tfullBarHeight: fullBarHeight,\n\t\t\t\tbarHeight: barHeight,\n\t\t\t\tbarSpacing: barSpacing\n\t\t\t};\n\t\t},\n\n\t\tcalculateBarHeight: function(ruler) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tif (yScale.options.barThickness) {\n\t\t\t\treturn yScale.options.barThickness;\n\t\t\t}\n\t\t\treturn ruler.barHeight;\n\t\t},\n\n\t\t// Get stack index from the given dataset index accounting for stacks and the fact that not all bars are visible\n\t\tgetStackIndex: function(datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.chart.getDatasetMeta(datasetIndex);\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar dsMeta, j;\n\t\t\tvar stacks = [meta.stack];\n\n\t\t\tfor (j = 0; j < datasetIndex; ++j) {\n\t\t\t\tdsMeta = this.chart.getDatasetMeta(j);\n\t\t\t\tif (dsMeta.bar && this.chart.isDatasetVisible(j) &&\n\t\t\t\t\t(xScale.options.stacked === false ||\n\t\t\t\t\t(xScale.options.stacked === true && stacks.indexOf(dsMeta.stack) === -1) ||\n\t\t\t\t\t(xScale.options.stacked === undefined && (dsMeta.stack === undefined || stacks.indexOf(dsMeta.stack) === -1)))) {\n\t\t\t\t\tstacks.push(dsMeta.stack);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn stacks.length - 1;\r\n\t\t},\n\n\t\tcalculateBarX: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar value = Number(me.getDataset().data[index]);\n\n\t\t\tif (xScale.options.stacked ||\n\t\t\t\t(xScale.options.stacked === undefined && meta.stack !== undefined)) {\n\t\t\t\tvar base = xScale.getBaseValue();\n\t\t\t\tvar sumPos = base,\n\t\t\t\t\tsumNeg = base;\r\n\n\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tvar ds = me.chart.data.datasets[i];\n\t\t\t\t\tvar dsMeta = me.chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.bar && dsMeta.xAxisID === xScale.id && me.chart.isDatasetVisible(i) &&\n\t\t\t\t\t\tmeta.stack === dsMeta.stack) {\n\t\t\t\t\t\tvar stackedVal = Number(ds.data[index]);\n\t\t\t\t\t\tif (stackedVal < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedVal || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedVal || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (value < 0) {\n\t\t\t\t\treturn xScale.getPixelForValue(sumNeg + value);\n\t\t\t\t}\n\t\t\t\treturn xScale.getPixelForValue(sumPos + value);\n\t\t\t}\n\n\t\t\treturn xScale.getPixelForValue(value);\n\t\t},\n\n\t\tcalculateBarY: function(index, datasetIndex, ruler) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar stackIndex = me.getStackIndex(datasetIndex);\n\t\t\tvar topTick = yScale.getPixelForValue(null, index, datasetIndex, me.chart.isCombo);\n\t\t\ttopTick -= me.chart.isCombo ? (ruler.tickHeight / 2) : 0;\n\n\t\t\treturn topTick +\n\t\t\t\t(ruler.barHeight / 2) +\n\t\t\t\truler.categorySpacing +\n\t\t\t\t(ruler.barHeight * stackIndex) +\n\t\t\t\t(ruler.barSpacing / 2) +\n\t\t\t\t(ruler.barSpacing * stackIndex);\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/controllers/controller.bar.js\n// module id = 216\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.bubble = {\n\t\thover: {\n\t\t\tmode: 'single'\n\t\t},\n\n\t\tscales: {\n\t\t\txAxes: [{\n\t\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\t\tposition: 'bottom',\n\t\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t\t}],\n\t\t\tyAxes: [{\n\t\t\t\ttype: 'linear',\n\t\t\t\tposition: 'left',\n\t\t\t\tid: 'y-axis-0'\n\t\t\t}]\n\t\t},\n\n\t\ttooltips: {\n\t\t\tcallbacks: {\n\t\t\t\ttitle: function() {\n\t\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\t\treturn '';\n\t\t\t\t},\n\t\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\t\tvar datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\n\t\t\t\t\tvar dataPoint = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\t\t\t\t\treturn datasetLabel + ': (' + tooltipItem.xLabel + ', ' + tooltipItem.yLabel + ', ' + dataPoint.r + ')';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tChart.controllers.bubble = Chart.DatasetController.extend({\n\n\t\tdataElementType: Chart.elements.Point,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data;\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar data = dataset.data[index];\n\t\t\tvar pointElementOptions = me.chart.options.elements.point;\n\t\t\tvar dsIndex = me.index;\n\n\t\t\thelpers.extend(point, {\n\t\t\t\t// Utility\n\t\t\t\t_xScale: xScale,\n\t\t\t\t_yScale: yScale,\n\t\t\t\t_datasetIndex: dsIndex,\n\t\t\t\t_index: index,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex, me.chart.isCombo),\n\t\t\t\t\ty: reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex),\n\t\t\t\t\t// Appearance\n\t\t\t\t\tradius: reset ? 0 : custom.radius ? custom.radius : me.getRadius(data),\n\n\t\t\t\t\t// Tooltip\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.getValueAtIndexOrDefault(dataset.hitRadius, index, pointElementOptions.hitRadius)\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Trick to reset the styles of the point\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(me, point, pointElementOptions);\n\n\t\t\tvar model = point._model;\n\t\t\tmodel.skip = custom.skip ? custom.skip : (isNaN(model.x) || isNaN(model.y));\n\n\t\t\tpoint.pivot();\n\t\t},\n\n\t\tgetRadius: function(value) {\n\t\t\treturn value.r || this.chart.options.elements.point.radius;\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\tvar me = this;\n\t\t\tChart.DatasetController.prototype.setHoverStyle.call(me, point);\n\n\t\t\t// Radius\n\t\t\tvar dataset = me.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : (helpers.getValueAtIndexOrDefault(dataset.hoverRadius, index, me.chart.options.elements.point.hoverRadius)) + me.getRadius(dataset.data[index]);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar me = this;\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(me, point, me.chart.options.elements.point);\n\n\t\t\tvar dataVal = me.chart.data.datasets[point._datasetIndex].data[point._index];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.radius ? custom.radius : me.getRadius(dataVal);\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/controllers/controller.bubble.js\n// module id = 217\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers,\n\t\tdefaults = Chart.defaults;\n\n\tdefaults.doughnut = {\n\t\tanimation: {\n\t\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\t\tanimateRotate: true,\n\t\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\t\tanimateScale: false\n\t\t},\n\t\taspectRatio: 1,\n\t\thover: {\n\t\t\tmode: 'single'\n\t\t},\n\t\tlegendCallback: function(chart) {\n\t\t\tvar text = [];\n\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar labels = data.labels;\n\n\t\t\tif (datasets.length) {\n\t\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\t\tif (labels[i]) {\n\t\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t\t}\n\t\t\t\t\ttext.push('</li>');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttext.push('</ul>');\n\t\t\treturn text.join('');\n\t\t},\n\t\tlegend: {\n\t\t\tlabels: {\n\t\t\t\tgenerateLabels: function(chart) {\n\t\t\t\t\tvar data = chart.data;\n\t\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\t\tvar getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\n\t\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : getValueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : getValueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : getValueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonClick: function(e, legendItem) {\n\t\t\t\tvar index = legendItem.index;\n\t\t\t\tvar chart = this.chart;\n\t\t\t\tvar i, ilen, meta;\n\n\t\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t\t// toggle visibility of index if exists\n\t\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tchart.update();\n\t\t\t}\n\t\t},\n\n\t\t// The percentage of the chart that we cut out of the middle.\n\t\tcutoutPercentage: 50,\n\n\t\t// The rotation of the chart, where the first data arc begins.\n\t\trotation: Math.PI * -0.5,\n\n\t\t// The total circumference of the chart.\n\t\tcircumference: Math.PI * 2.0,\n\n\t\t// Need to override these to give a nice default\n\t\ttooltips: {\n\t\t\tcallbacks: {\n\t\t\t\ttitle: function() {\n\t\t\t\t\treturn '';\n\t\t\t\t},\n\t\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n\t\t\t\t\tif (helpers.isArray(dataLabel)) {\n\t\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdataLabel += value;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn dataLabel;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tdefaults.pie = helpers.clone(defaults.doughnut);\n\thelpers.extend(defaults.pie, {\n\t\tcutoutPercentage: 0\n\t});\n\n\n\tChart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n\n\t\tdataElementType: Chart.elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\t\tgetRingIndex: function(datasetIndex) {\n\t\t\tvar ringIndex = 0;\n\n\t\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t\t++ringIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ringIndex;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart,\n\t\t\t\tchartArea = chart.chartArea,\n\t\t\t\topts = chart.options,\n\t\t\t\tarcOpts = opts.elements.arc,\n\t\t\t\tavailableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth,\n\t\t\t\tavailableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth,\n\t\t\t\tminSize = Math.min(availableWidth, availableHeight),\n\t\t\t\toffset = {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 0\n\t\t\t\t},\n\t\t\t\tmeta = me.getMeta(),\n\t\t\t\tcutoutPercentage = opts.cutoutPercentage,\n\t\t\t\tcircumference = opts.circumference;\n\n\t\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\t\tif (circumference < Math.PI * 2.0) {\n\t\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\t\tvar endAngle = startAngle + circumference;\n\t\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\t\tvar contains0 = (startAngle <= 0 && 0 <= endAngle) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t\t}\n\n\t\t\tchart.borderWidth = me.getMaxBorderWidth(meta.data);\n\t\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\t\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\t\tmeta.total = me.calculateTotal();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\n\t\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart,\n\t\t\t\tchartArea = chart.chartArea,\n\t\t\t\topts = chart.options,\n\t\t\t\tanimationOpts = opts.animation,\n\t\t\t\tcenterX = (chartArea.left + chartArea.right) / 2,\n\t\t\t\tcenterY = (chartArea.top + chartArea.bottom) / 2,\n\t\t\t\tstartAngle = opts.rotation, // non reset case handled later\n\t\t\t\tendAngle = opts.rotation, // non reset case handled later\n\t\t\t\tdataset = me.getDataset(),\n\t\t\t\tcircumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI)),\n\t\t\t\tinnerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius,\n\t\t\t\touterRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius,\n\t\t\t\tvalueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\t\tstartAngle: startAngle,\n\t\t\t\t\tendAngle: endAngle,\n\t\t\t\t\tcircumference: circumference,\n\t\t\t\t\touterRadius: outerRadius,\n\t\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\t\tlabel: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar model = arc._model;\n\t\t\t// Resets the visual styles\n\t\t\tthis.removeHoverStyle(arc);\n\n\t\t\t// Set correct angles if not resetting\n\t\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t\t} else {\n\t\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t\t}\n\n\t\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t\t}\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcalculateTotal: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar total = 0;\n\t\t\tvar value;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tvalue = dataset.data[index];\n\t\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/* if (total === 0) {\n\t\t\t\ttotal = NaN;\n\t\t\t}*/\n\n\t\t\treturn total;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar total = this.getMeta().total;\n\t\t\tif (total > 0 && !isNaN(value)) {\n\t\t\t\treturn (Math.PI * 2.0) * (value / total);\n\t\t\t}\n\t\t\treturn 0;\n\t\t},\n\n\t\t// gets the max border or hover width to properly scale pie charts\n\t\tgetMaxBorderWidth: function(elements) {\n\t\t\tvar max = 0,\n\t\t\t\tindex = this.index,\n\t\t\t\tlength = elements.length,\n\t\t\t\tborderWidth,\n\t\t\t\thoverWidth;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tborderWidth = elements[i]._model ? elements[i]._model.borderWidth : 0;\n\t\t\t\thoverWidth = elements[i]._chart ? elements[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t\treturn max;\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/controllers/controller.doughnut.js\n// module id = 218\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.line = {\n\t\tshowLines: true,\n\t\tspanGaps: false,\n\n\t\thover: {\n\t\t\tmode: 'label'\n\t\t},\n\n\t\tscales: {\n\t\t\txAxes: [{\n\t\t\t\ttype: 'category',\n\t\t\t\tid: 'x-axis-0'\n\t\t\t}],\n\t\t\tyAxes: [{\n\t\t\t\ttype: 'linear',\n\t\t\t\tid: 'y-axis-0'\n\t\t\t}]\n\t\t}\n\t};\n\n\tfunction lineEnabled(dataset, options) {\n\t\treturn helpers.getValueOrDefault(dataset.showLine, options.showLines);\n\t}\n\n\tChart.controllers.line = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: Chart.elements.Line,\n\n\t\tdataElementType: Chart.elements.Point,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data || [];\n\t\t\tvar options = me.chart.options;\n\t\t\tvar lineElementOptions = options.elements.line;\n\t\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar i, ilen, custom;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar showLine = lineEnabled(dataset, options);\n\n\t\t\t// Update Line\n\t\t\tif (showLine) {\n\t\t\t\tcustom = line.custom || {};\n\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t\t}\n\n\t\t\t\t// Utility\n\t\t\t\tline._scale = scale;\n\t\t\t\tline._datasetIndex = me.index;\n\t\t\t\t// Data\n\t\t\t\tline._children = points;\n\t\t\t\t// Model\n\t\t\t\tline._model = {\n\t\t\t\t\t// Appearance\n\t\t\t\t\t// The default behavior of lines is to break at null values, according\n\t\t\t\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t\t\t\t// This option gives lines the ability to span gaps\n\t\t\t\t\tspanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tsteppedLine: custom.steppedLine ? custom.steppedLine : helpers.getValueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n\t\t\t\t\tcubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.getValueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\n\t\t\t\t\t// Scale\n\t\t\t\t\tscaleTop: scale.top,\n\t\t\t\t\tscaleBottom: scale.bottom,\n\t\t\t\t\tscaleZero: scale.getBasePixel()\n\t\t\t\t};\n\n\t\t\t\tline.pivot();\n\t\t\t}\n\n\t\t\t// Update Points\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\n\t\t\t\tme.updateElement(points[i], i, reset);\n\t\t\t}\n\n\t\t\tif (showLine && line._model.tension !== 0) {\n\t\t\t\tme.updateBezierControlPoints();\n\t\t\t}\n\n\t\t\t// Now pivot the point for animation\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\n\t\t\t\tpoints[i].pivot();\n\t\t\t}\n\t\t},\n\n\t\tgetPointBackgroundColor: function(point, index) {\n\t\t\tvar backgroundColor = this.chart.options.elements.point.backgroundColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.backgroundColor) {\n\t\t\t\tbackgroundColor = custom.backgroundColor;\n\t\t\t} else if (dataset.pointBackgroundColor) {\n\t\t\t\tbackgroundColor = helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n\t\t\t} else if (dataset.backgroundColor) {\n\t\t\t\tbackgroundColor = dataset.backgroundColor;\n\t\t\t}\n\n\t\t\treturn backgroundColor;\n\t\t},\n\n\t\tgetPointBorderColor: function(point, index) {\n\t\t\tvar borderColor = this.chart.options.elements.point.borderColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.borderColor) {\n\t\t\t\tborderColor = custom.borderColor;\n\t\t\t} else if (dataset.pointBorderColor) {\n\t\t\t\tborderColor = helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n\t\t\t} else if (dataset.borderColor) {\n\t\t\t\tborderColor = dataset.borderColor;\n\t\t\t}\n\n\t\t\treturn borderColor;\n\t\t},\n\n\t\tgetPointBorderWidth: function(point, index) {\n\t\t\tvar borderWidth = this.chart.options.elements.point.borderWidth;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (!isNaN(custom.borderWidth)) {\n\t\t\t\tborderWidth = custom.borderWidth;\n\t\t\t} else if (!isNaN(dataset.pointBorderWidth)) {\n\t\t\t\tborderWidth = helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n\t\t\t} else if (!isNaN(dataset.borderWidth)) {\n\t\t\t\tborderWidth = dataset.borderWidth;\n\t\t\t}\n\n\t\t\treturn borderWidth;\n\t\t},\n\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar value = dataset.data[index];\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar pointOptions = me.chart.options.elements.point;\n\t\t\tvar x, y;\n\t\t\tvar labels = me.chart.data.labels || [];\n\t\t\tvar includeOffset = (labels.length === 1 || dataset.data.length === 1) || me.chart.isCombo;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex, includeOffset);\n\t\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t\t// Utility\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._datasetIndex = datasetIndex;\n\t\t\tpoint._index = index;\n\n\t\t\t// Desired view properties\n\t\t\tpoint._model = {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\t// Appearance\n\t\t\t\tradius: custom.radius || helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n\t\t\t\tpointStyle: custom.pointStyle || helpers.getValueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n\t\t\t\tbackgroundColor: me.getPointBackgroundColor(point, index),\n\t\t\t\tborderColor: me.getPointBorderColor(point, index),\n\t\t\t\tborderWidth: me.getPointBorderWidth(point, index),\n\t\t\t\ttension: meta.dataset._model ? meta.dataset._model.tension : 0,\n\t\t\t\tsteppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n\t\t\t\t// Tooltip\n\t\t\t\thitRadius: custom.hitRadius || helpers.getValueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n\t\t\t};\n\t\t},\n\n\t\tcalculatePointY: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar sumPos = 0;\n\t\t\tvar sumNeg = 0;\n\t\t\tvar i, ds, dsMeta;\n\n\t\t\tif (yScale.options.stacked) {\n\t\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\t\tif (rightValue < 0) {\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t\t}\n\t\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t\t}\n\n\t\t\treturn yScale.getPixelForValue(value);\n\t\t},\n\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar area = me.chart.chartArea;\n\t\t\tvar points = (meta.data || []);\n\t\t\tvar i, ilen, point, model, controlPoints;\n\n\t\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\t\tif (meta.dataset._model.spanGaps) {\n\t\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\t\treturn !pt._model.skip;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction capControlPoint(pt, min, max) {\n\t\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t\t}\n\n\t\t\tif (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n\t\t\t\thelpers.splineCurveMonotone(points);\n\t\t\t} else {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tpoint = points[i];\n\t\t\t\t\tmodel = point._model;\n\t\t\t\t\tcontrolPoints = helpers.splineCurve(\n\t\t\t\t\t\thelpers.previousItem(points, i)._model,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\thelpers.nextItem(points, i)._model,\n\t\t\t\t\t\tmeta.dataset._model.tension\n\t\t\t\t\t);\n\t\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.chart.options.elements.line.capBezierPoints) {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tmodel = points[i]._model;\n\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tdraw: function(ease) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data || [];\n\t\t\tvar easingDecimal = ease || 1;\n\t\t\tvar i, ilen;\n\n\t\t\t// Transition Point Locations\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\n\t\t\t\tpoints[i].transition(easingDecimal);\n\t\t\t}\n\n\t\t\tChart.canvasHelpers.clipArea(me.chart.chart.ctx, me.chart.chartArea);\n\t\t\t// Transition and Draw the line\n\t\t\tif (lineEnabled(me.getDataset(), me.chart.options)) {\n\t\t\t\tmeta.dataset.transition(easingDecimal).draw();\n\t\t\t}\n\t\t\tChart.canvasHelpers.unclipArea(me.chart.chart.ctx);\n\n\t\t\t// Draw the points\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\n\t\t\t\tpoints[i].draw(me.chart.chartArea);\n\t\t\t}\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius || helpers.getValueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor || helpers.getValueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor || helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth || helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\n\t\t\tmodel.radius = custom.radius || helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\n\t\t\tmodel.backgroundColor = me.getPointBackgroundColor(point, index);\n\t\t\tmodel.borderColor = me.getPointBorderColor(point, index);\n\t\t\tmodel.borderWidth = me.getPointBorderWidth(point, index);\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/controllers/controller.line.js\n// module id = 219\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.polarArea = {\n\n\t\tscale: {\n\t\t\ttype: 'radialLinear',\n\t\t\tlineArc: true, // so that lines are circular\n\t\t\tticks: {\n\t\t\t\tbeginAtZero: true\n\t\t\t}\n\t\t},\n\n\t\t// Boolean - Whether to animate the rotation of the chart\n\t\tanimation: {\n\t\t\tanimateRotate: true,\n\t\t\tanimateScale: true\n\t\t},\n\n\t\tstartAngle: -0.5 * Math.PI,\n\t\taspectRatio: 1,\n\t\tlegendCallback: function(chart) {\n\t\t\tvar text = [];\n\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar labels = data.labels;\n\n\t\t\tif (datasets.length) {\n\t\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\t\tif (labels[i]) {\n\t\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t\t}\n\t\t\t\t\ttext.push('</li>');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttext.push('</ul>');\n\t\t\treturn text.join('');\n\t\t},\n\t\tlegend: {\n\t\t\tlabels: {\n\t\t\t\tgenerateLabels: function(chart) {\n\t\t\t\t\tvar data = chart.data;\n\t\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\t\tvar getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\n\t\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : getValueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : getValueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : getValueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonClick: function(e, legendItem) {\n\t\t\t\tvar index = legendItem.index;\n\t\t\t\tvar chart = this.chart;\n\t\t\t\tvar i, ilen, meta;\n\n\t\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\n\t\t\t\tchart.update();\n\t\t\t}\n\t\t},\n\n\t\t// Need to override these to give a nice default\n\t\ttooltips: {\n\t\t\tcallbacks: {\n\t\t\t\ttitle: function() {\n\t\t\t\t\treturn '';\n\t\t\t\t},\n\t\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\t\treturn data.labels[tooltipItem.index] + ': ' + tooltipItem.yLabel;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tChart.controllers.polarArea = Chart.DatasetController.extend({\n\n\t\tdataElementType: Chart.elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\t\t\tchart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\n\t\t\tmeta.count = me.countVisibleElements();\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar scale = chart.scale;\n\t\t\tvar getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\n\t\t\tvar labels = chart.data.labels;\n\n\t\t\tvar circumference = me.calculateCircumference(dataset.data[index]);\n\t\t\tvar centerX = scale.xCenter;\n\t\t\tvar centerY = scale.yCenter;\n\n\t\t\t// If there is NaN data before us, we need to calculate the starting angle correctly.\n\t\t\t// We could be way more efficient here, but its unlikely that the polar area chart will have a lot of data\n\t\t\tvar visibleCount = 0;\n\t\t\tvar meta = me.getMeta();\n\t\t\tfor (var i = 0; i < index; ++i) {\n\t\t\t\tif (!isNaN(dataset.data[i]) && !meta.data[i].hidden) {\n\t\t\t\t\t++visibleCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\t\tvar datasetStartAngle = opts.startAngle;\n\t\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\t\tvar startAngle = datasetStartAngle + (circumference * visibleCount);\n\t\t\tvar endAngle = startAngle + (arc.hidden ? 0 : circumference);\n\n\t\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX,\n\t\t\t\t\ty: centerY,\n\t\t\t\t\tinnerRadius: 0,\n\t\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\t\tlabel: getValueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Apply border and fill style\n\t\t\tme.removeHoverStyle(arc);\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcountVisibleElements: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar count = 0;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn count;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar count = this.getMeta().count;\n\t\t\tif (count > 0 && !isNaN(value)) {\n\t\t\t\treturn (2 * Math.PI) / count;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/controllers/controller.polarArea.js\n// module id = 220\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.radar = {\n\t\taspectRatio: 1,\n\t\tscale: {\n\t\t\ttype: 'radialLinear'\n\t\t},\n\t\telements: {\n\t\t\tline: {\n\t\t\t\ttension: 0 // no bezier in radar\n\t\t\t}\n\t\t}\n\t};\n\n\tChart.controllers.radar = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: Chart.elements.Line,\n\n\t\tdataElementType: Chart.elements.Point,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data;\n\t\t\tvar custom = line.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar lineElementOptions = me.chart.options.elements.line;\n\t\t\tvar scale = me.chart.scale;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t}\n\n\t\t\thelpers.extend(meta.dataset, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t// Data\n\t\t\t\t_children: points,\n\t\t\t\t_loop: true,\n\t\t\t\t// Model\n\t\t\t\t_model: {\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\n\t\t\t\t\t// Scale\n\t\t\t\t\tscaleTop: scale.top,\n\t\t\t\t\tscaleBottom: scale.bottom,\n\t\t\t\t\tscaleZero: scale.getBasePosition()\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmeta.dataset.pivot();\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t}, me);\n\n\t\t\t// Update bezier control points\n\t\t\tme.updateBezierControlPoints();\n\t\t},\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar scale = me.chart.scale;\n\t\t\tvar pointElementOptions = me.chart.options.elements.point;\n\t\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n\t\t\thelpers.extend(point, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\t\t\ty: reset ? scale.yCenter : pointPosition.y,\n\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n\t\t\t\t\tradius: custom.radius ? custom.radius : helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n\t\t\t\t\tpointStyle: custom.pointStyle ? custom.pointStyle : helpers.getValueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n\n\t\t\t\t\t// Tooltip\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.getValueAtIndexOrDefault(dataset.hitRadius, index, pointElementOptions.hitRadius)\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tpoint._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\n\t\t},\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar chartArea = this.chart.chartArea;\n\t\t\tvar meta = this.getMeta();\n\n\t\t\thelpers.each(meta.data, function(point, index) {\n\t\t\t\tvar model = point._model;\n\t\t\t\tvar controlPoints = helpers.splineCurve(\n\t\t\t\t\thelpers.previousItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel,\n\t\t\t\t\thelpers.nextItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel.tension\n\t\t\t\t);\n\n\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\t\tmodel.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\tmodel.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\t// Now pivot the point for animation\n\t\t\t\tpoint.pivot();\n\t\t\t});\n\t\t},\n\n\t\tdraw: function(ease) {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar easingDecimal = ease || 1;\n\n\t\t\t// Transition Point Locations\n\t\t\thelpers.each(meta.data, function(point) {\n\t\t\t\tpoint.transition(easingDecimal);\n\t\t\t});\n\n\t\t\t// Transition and Draw the line\n\t\t\tmeta.dataset.transition(easingDecimal).draw();\n\n\t\t\t// Draw the points\n\t\t\thelpers.each(meta.data, function(point) {\n\t\t\t\tpoint.draw();\n\t\t\t});\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : helpers.getValueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\t\t\tvar pointElementOptions = this.chart.options.elements.point;\n\n\t\t\tmodel.radius = custom.radius ? custom.radius : helpers.getValueAtIndexOrDefault(dataset.radius, index, pointElementOptions.radius);\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth);\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/controllers/controller.radar.js\n// module id = 221\n// module chunks = 0","/* global window: false */\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.global.animation = {\n\t\tduration: 1000,\n\t\teasing: 'easeOutQuart',\n\t\tonProgress: helpers.noop,\n\t\tonComplete: helpers.noop\n\t};\n\n\tChart.Animation = Chart.Element.extend({\n\t\tcurrentStep: null, // the current animation step\n\t\tnumSteps: 60, // default number of steps\n\t\teasing: '', // the easing to use for this animation\n\t\trender: null, // render function used by the animation service\n\n\t\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\t\tonAnimationComplete: null // user specified callback to fire when the animation finishes\n\t});\n\n\tChart.animationService = {\n\t\tframeDuration: 17,\n\t\tanimations: [],\n\t\tdropFrames: 0,\n\t\trequest: null,\n\n\t\t/**\n\t\t * @function Chart.animationService.addAnimation\n\t\t * @param chartInstance {ChartController} the chart to animate\n\t\t * @param animationObject {IAnimation} the animation that we will animate\n\t\t * @param duration {Number} length of animation in ms\n\t\t * @param lazy {Boolean} if true, the chart is not marked as animating to enable more responsive interactions\n\t\t */\n\t\taddAnimation: function(chartInstance, animationObject, duration, lazy) {\n\t\t\tvar me = this;\n\n\t\t\tif (!lazy) {\n\t\t\t\tchartInstance.animating = true;\n\t\t\t}\n\n\t\t\tfor (var index = 0; index < me.animations.length; ++index) {\n\t\t\t\tif (me.animations[index].chartInstance === chartInstance) {\n\t\t\t\t\t// replacing an in progress animation\n\t\t\t\t\tme.animations[index].animationObject = animationObject;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.animations.push({\n\t\t\t\tchartInstance: chartInstance,\n\t\t\t\tanimationObject: animationObject\n\t\t\t});\n\n\t\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\t\tif (me.animations.length === 1) {\n\t\t\t\tme.requestAnimationFrame();\n\t\t\t}\n\t\t},\n\t\t// Cancel the animation for a given chart instance\n\t\tcancelAnimation: function(chartInstance) {\n\t\t\tvar index = helpers.findIndex(this.animations, function(animationWrapper) {\n\t\t\t\treturn animationWrapper.chartInstance === chartInstance;\n\t\t\t});\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.animations.splice(index, 1);\n\t\t\t\tchartInstance.animating = false;\n\t\t\t}\n\t\t},\n\t\trequestAnimationFrame: function() {\n\t\t\tvar me = this;\n\t\t\tif (me.request === null) {\n\t\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\t\tme.request = helpers.requestAnimFrame.call(window, function() {\n\t\t\t\t\tme.request = null;\n\t\t\t\t\tme.startDigest();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tstartDigest: function() {\n\t\t\tvar me = this;\n\n\t\t\tvar startTime = Date.now();\n\t\t\tvar framesToDrop = 0;\n\n\t\t\tif (me.dropFrames > 1) {\n\t\t\t\tframesToDrop = Math.floor(me.dropFrames);\n\t\t\t\tme.dropFrames = me.dropFrames % 1;\n\t\t\t}\n\n\t\t\tvar i = 0;\n\t\t\twhile (i < me.animations.length) {\n\t\t\t\tif (me.animations[i].animationObject.currentStep === null) {\n\t\t\t\t\tme.animations[i].animationObject.currentStep = 0;\n\t\t\t\t}\n\n\t\t\t\tme.animations[i].animationObject.currentStep += 1 + framesToDrop;\n\n\t\t\t\tif (me.animations[i].animationObject.currentStep > me.animations[i].animationObject.numSteps) {\n\t\t\t\t\tme.animations[i].animationObject.currentStep = me.animations[i].animationObject.numSteps;\n\t\t\t\t}\n\n\t\t\t\tme.animations[i].animationObject.render(me.animations[i].chartInstance, me.animations[i].animationObject);\n\t\t\t\tif (me.animations[i].animationObject.onAnimationProgress && me.animations[i].animationObject.onAnimationProgress.call) {\n\t\t\t\t\tme.animations[i].animationObject.onAnimationProgress.call(me.animations[i].chartInstance, me.animations[i]);\n\t\t\t\t}\n\n\t\t\t\tif (me.animations[i].animationObject.currentStep === me.animations[i].animationObject.numSteps) {\n\t\t\t\t\tif (me.animations[i].animationObject.onAnimationComplete && me.animations[i].animationObject.onAnimationComplete.call) {\n\t\t\t\t\t\tme.animations[i].animationObject.onAnimationComplete.call(me.animations[i].chartInstance, me.animations[i]);\n\t\t\t\t\t}\n\n\t\t\t\t\t// executed the last frame. Remove the animation.\n\t\t\t\t\tme.animations[i].chartInstance.animating = false;\n\n\t\t\t\t\tme.animations.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\t++i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar endTime = Date.now();\n\t\t\tvar dropFrames = (endTime - startTime) / me.frameDuration;\n\n\t\t\tme.dropFrames += dropFrames;\n\n\t\t\t// Do we have more stuff to animate?\n\t\t\tif (me.animations.length > 0) {\n\t\t\t\tme.requestAnimationFrame();\n\t\t\t}\n\t\t}\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.animation.js\n// module id = 222\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\t// Global Chart canvas helpers object for drawing items to canvas\n\tvar helpers = Chart.canvasHelpers = {};\n\n\thelpers.drawPoint = function(ctx, pointStyle, radius, x, y) {\n\t\tvar type, edgeLength, xOffset, yOffset, height, size;\n\n\t\tif (typeof pointStyle === 'object') {\n\t\t\ttype = pointStyle.toString();\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\tctx.drawImage(pointStyle, x - pointStyle.width / 2, y - pointStyle.height / 2);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (pointStyle) {\n\t\t// Default includes circle\n\t\tdefault:\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(x, y, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'triangle':\n\t\t\tctx.beginPath();\n\t\t\tedgeLength = 3 * radius / Math.sqrt(3);\n\t\t\theight = edgeLength * Math.sqrt(3) / 2;\n\t\t\tctx.moveTo(x - edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x + edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x, y - 2 * height / 3);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'rect':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.fillRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tbreak;\n\t\tcase 'rectRounded':\n\t\t\tvar offset = radius / Math.SQRT2;\n\t\t\tvar leftX = x - offset;\n\t\t\tvar topY = y - offset;\n\t\t\tvar sideSize = Math.SQRT2 * radius;\n\t\t\tChart.helpers.drawRoundedRectangle(ctx, leftX, topY, sideSize, sideSize, radius / 2);\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'rectRot':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - size, y);\n\t\t\tctx.lineTo(x, y + size);\n\t\t\tctx.lineTo(x + size, y);\n\t\t\tctx.lineTo(x, y - size);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'cross':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'crossRot':\n\t\t\tctx.beginPath();\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'star':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'dash':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\t}\n\n\t\tctx.stroke();\n\t};\n\n\thelpers.clipArea = function(ctx, clipArea) {\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(clipArea.left, clipArea.top, clipArea.right - clipArea.left, clipArea.bottom - clipArea.top);\n\t\tctx.clip();\n\t};\n\n\thelpers.unclipArea = function(ctx) {\n\t\tctx.restore();\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.canvasHelpers.js\n// module id = 223\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\tvar plugins = Chart.plugins;\n\tvar platform = Chart.platform;\n\n\t// Create a dictionary of chart types, to allow for extension of existing types\n\tChart.types = {};\n\n\t// Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n\t// Destroy method on the chart will remove the instance of the chart from this reference.\n\tChart.instances = {};\n\n\t// Controllers available for dataset visualization eg. bar, line, slice, etc.\n\tChart.controllers = {};\n\n\t/**\n\t * Initializes the given config with global and chart default values.\n\t */\n\tfunction initConfig(config) {\n\t\tconfig = config || {};\n\n\t\t// Do NOT use configMerge() for the data object because this method merges arrays\n\t\t// and so would change references to labels and datasets, preventing data updates.\n\t\tvar data = config.data = config.data || {};\n\t\tdata.datasets = data.datasets || [];\n\t\tdata.labels = data.labels || [];\n\n\t\tconfig.options = helpers.configMerge(\n\t\t\tChart.defaults.global,\n\t\t\tChart.defaults[config.type],\n\t\t\tconfig.options || {});\n\n\t\treturn config;\n\t}\n\n\t/**\n\t * Updates the config of the chart\n\t * @param chart {Chart.Controller} chart to update the options for\n\t */\n\tfunction updateConfig(chart) {\n\t\tvar newOptions = chart.options;\n\n\t\t// Update Scale(s) with options\n\t\tif (newOptions.scale) {\n\t\t\tchart.scale.options = newOptions.scale;\n\t\t} else if (newOptions.scales) {\n\t\t\tnewOptions.scales.xAxes.concat(newOptions.scales.yAxes).forEach(function(scaleOptions) {\n\t\t\t\tchart.scales[scaleOptions.id].options = scaleOptions;\n\t\t\t});\n\t\t}\n\n\t\t// Tooltip\n\t\tchart.tooltip._options = newOptions.tooltips;\n\t}\n\n\t/**\n\t * @class Chart.Controller\n\t * The main controller of a chart.\n\t */\n\tChart.Controller = function(item, config, instance) {\n\t\tvar me = this;\n\n\t\tconfig = initConfig(config);\n\n\t\tvar context = platform.acquireContext(item, config);\n\t\tvar canvas = context && context.canvas;\n\t\tvar height = canvas && canvas.height;\n\t\tvar width = canvas && canvas.width;\n\n\t\tinstance.ctx = context;\n\t\tinstance.canvas = canvas;\n\t\tinstance.config = config;\n\t\tinstance.width = width;\n\t\tinstance.height = height;\n\t\tinstance.aspectRatio = height? width / height : null;\n\n\t\tme.id = helpers.uid();\n\t\tme.chart = instance;\n\t\tme.config = config;\n\t\tme.options = config.options;\n\t\tme._bufferedRender = false;\n\n\t\t// Add the chart instance to the global namespace\n\t\tChart.instances[me.id] = me;\n\n\t\tObject.defineProperty(me, 'data', {\n\t\t\tget: function() {\n\t\t\t\treturn me.config.data;\n\t\t\t}\n\t\t});\n\n\t\tif (!context || !canvas) {\n\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\treturn me;\n\t\t}\n\n\t\tme.initialize();\n\t\tme.update();\n\n\t\treturn me;\n\t};\n\n\thelpers.extend(Chart.Controller.prototype, /** @lends Chart.Controller.prototype */ {\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\n\t\t\t// Before init plugin notification\n\t\t\tplugins.notify(me, 'beforeInit');\n\n\t\t\thelpers.retinaScale(me.chart);\n\n\t\t\tme.bindEvents();\n\n\t\t\tif (me.options.responsive) {\n\t\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\t\tme.resize(true);\n\t\t\t}\n\n\t\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\t\tme.ensureScalesHaveIDs();\n\t\t\tme.buildScales();\n\t\t\tme.initToolTip();\n\n\t\t\t// After init plugin notification\n\t\t\tplugins.notify(me, 'afterInit');\n\n\t\t\treturn me;\n\t\t},\n\n\t\tclear: function() {\n\t\t\thelpers.clear(this.chart);\n\t\t\treturn this;\n\t\t},\n\n\t\tstop: function() {\n\t\t\t// Stops any current animation loop occurring\n\t\t\tChart.animationService.cancelAnimation(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tresize: function(silent) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar options = me.options;\n\t\t\tvar canvas = chart.canvas;\n\t\t\tvar aspectRatio = (options.maintainAspectRatio && chart.aspectRatio) || null;\n\n\t\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\t\t\tvar newWidth = Math.floor(helpers.getMaximumWidth(canvas));\n\t\t\tvar newHeight = Math.floor(aspectRatio? newWidth / aspectRatio : helpers.getMaximumHeight(canvas));\n\n\t\t\tif (chart.width === newWidth && chart.height === newHeight) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcanvas.width = chart.width = newWidth;\n\t\t\tcanvas.height = chart.height = newHeight;\n\t\t\tcanvas.style.width = newWidth + 'px';\n\t\t\tcanvas.style.height = newHeight + 'px';\n\n\t\t\thelpers.retinaScale(chart);\n\n\t\t\tif (!silent) {\n\t\t\t\t// Notify any plugins about the resize\n\t\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\t\tplugins.notify(me, 'resize', [newSize]);\n\n\t\t\t\t// Notify of resize\n\t\t\t\tif (me.options.onResize) {\n\t\t\t\t\tme.options.onResize(me, newSize);\n\t\t\t\t}\n\n\t\t\t\tme.stop();\n\t\t\t\tme.update(me.options.responsiveAnimationDuration);\n\t\t\t}\n\t\t},\n\n\t\tensureScalesHaveIDs: function() {\n\t\t\tvar options = this.options;\n\t\t\tvar scalesOptions = options.scales || {};\n\t\t\tvar scaleOptions = options.scale;\n\n\t\t\thelpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t\t});\n\n\t\t\thelpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t\t});\n\n\t\t\tif (scaleOptions) {\n\t\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Builds a map of scale ID to scale object for future lookup.\n\t\t */\n\t\tbuildScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar scales = me.scales = {};\n\t\t\tvar items = [];\n\n\t\t\tif (options.scales) {\n\t\t\t\titems = items.concat(\n\t\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category'};\n\t\t\t\t\t}),\n\t\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear'};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (options.scale) {\n\t\t\t\titems.push({options: options.scale, dtype: 'radialLinear', isDefault: true});\n\t\t\t}\n\n\t\t\thelpers.each(items, function(item) {\n\t\t\t\tvar scaleOptions = item.options;\n\t\t\t\tvar scaleType = helpers.getValueOrDefault(scaleOptions.type, item.dtype);\n\t\t\t\tvar scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\n\t\t\t\tif (!scaleClass) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar scale = new scaleClass({\n\t\t\t\t\tid: scaleOptions.id,\n\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\tctx: me.chart.ctx,\n\t\t\t\t\tchart: me\n\t\t\t\t});\n\n\t\t\t\tscales[scale.id] = scale;\n\n\t\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\t\tif (item.isDefault) {\n\t\t\t\t\tme.scale = scale;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tChart.scaleService.addScalesToLayout(this);\n\t\t},\n\n\t\tbuildOrUpdateControllers: function() {\n\t\t\tvar me = this;\n\t\t\tvar types = [];\n\t\t\tvar newControllers = [];\n\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\t\tif (!meta.type) {\n\t\t\t\t\tmeta.type = dataset.type || me.config.type;\n\t\t\t\t}\n\n\t\t\t\ttypes.push(meta.type);\n\n\t\t\t\tif (meta.controller) {\n\t\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\t} else {\n\t\t\t\t\tmeta.controller = new Chart.controllers[meta.type](me, datasetIndex);\n\t\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\tif (types.length > 1) {\n\t\t\t\tfor (var i = 1; i < types.length; i++) {\n\t\t\t\t\tif (types[i] !== types[i - 1]) {\n\t\t\t\t\t\tme.isCombo = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn newControllers;\n\t\t},\n\n\t\t/**\n\t\t * Reset the elements of all datasets\n\t\t * @private\n\t\t */\n\t\tresetElements: function() {\n\t\t\tvar me = this;\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t* Resets the chart back to it's state before the initial animation\n\t\t*/\n\t\treset: function() {\n\t\t\tthis.resetElements();\n\t\t\tthis.tooltip.initialize();\n\t\t},\n\n\t\tupdate: function(animationDuration, lazy) {\n\t\t\tvar me = this;\n\n\t\t\tupdateConfig(me);\n\n\t\t\tif (plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// In case the entire data object changed\n\t\t\tme.tooltip._data = me.data;\n\n\t\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t\t// Make sure all dataset controllers have correct meta data counts\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t\t}, me);\n\n\t\t\tme.updateLayout();\n\n\t\t\t// Can only reset the new controllers after the scales have been updated\n\t\t\thelpers.each(newControllers, function(controller) {\n\t\t\t\tcontroller.reset();\n\t\t\t});\n\n\t\t\tme.updateDatasets();\n\n\t\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\t\tplugins.notify(me, 'afterUpdate');\n\n\t\t\tif (me._bufferedRender) {\n\t\t\t\tme._bufferedRequest = {\n\t\t\t\t\tlazy: lazy,\n\t\t\t\t\tduration: animationDuration\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tme.render(animationDuration, lazy);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t\t * @private\n\t\t */\n\t\tupdateLayout: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeLayout') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tChart.layoutService.update(this, this.chart.width, this.chart.height);\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t\t * @method IPlugin#afterScaleUpdate\n\t\t\t * @deprecated since version 2.5.0\n\t\t\t * @todo remove at version 3\n\t\t\t */\n\t\t\tplugins.notify(me, 'afterScaleUpdate');\n\t\t\tplugins.notify(me, 'afterLayout');\n\t\t},\n\n\t\t/**\n\t\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDatasets: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.getDatasetMeta(i).controller.update();\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsUpdate');\n\t\t},\n\n\t\trender: function(duration, lazy) {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeRender') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar animationOptions = me.options.animation;\n\t\t\tvar onComplete = function() {\n\t\t\t\tplugins.notify(me, 'afterRender');\n\t\t\t\tvar callback = animationOptions && animationOptions.onComplete;\n\t\t\t\tif (callback && callback.call) {\n\t\t\t\t\tcallback.call(me);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\n\t\t\t\tvar animation = new Chart.Animation();\n\t\t\t\tanimation.numSteps = (duration || animationOptions.duration) / 16.66; // 60 fps\n\t\t\t\tanimation.easing = animationOptions.easing;\n\n\t\t\t\t// render function\n\t\t\t\tanimation.render = function(chartInstance, animationObject) {\n\t\t\t\t\tvar easingFunction = helpers.easingEffects[animationObject.easing];\n\t\t\t\t\tvar stepDecimal = animationObject.currentStep / animationObject.numSteps;\n\t\t\t\t\tvar easeDecimal = easingFunction(stepDecimal);\n\n\t\t\t\t\tchartInstance.draw(easeDecimal, stepDecimal, animationObject.currentStep);\n\t\t\t\t};\n\n\t\t\t\t// user events\n\t\t\t\tanimation.onAnimationProgress = animationOptions.onProgress;\n\t\t\t\tanimation.onAnimationComplete = onComplete;\n\n\t\t\t\tChart.animationService.addAnimation(me, animation, duration, lazy);\n\t\t\t} else {\n\t\t\t\tme.draw();\n\t\t\t\tonComplete();\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\n\t\tdraw: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tme.clear();\n\n\t\t\tif (easingValue === undefined || easingValue === null) {\n\t\t\t\teasingValue = 1;\n\t\t\t}\n\n\t\t\tif (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw all the scales\n\t\t\thelpers.each(me.boxes, function(box) {\n\t\t\t\tbox.draw(me.chartArea);\n\t\t\t}, me);\n\n\t\t\tif (me.scale) {\n\t\t\t\tme.scale.draw();\n\t\t\t}\n\n\t\t\tme.drawDatasets(easingValue);\n\n\t\t\t// Finally draw the tooltip\n\t\t\tme.tooltip.transition(easingValue).draw();\n\n\t\t\tplugins.notify(me, 'afterDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDatasets: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw each dataset via its respective controller (reversed to support proper line stacking)\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (me.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\tme.getDatasetMeta(datasetIndex).controller.draw(easingValue);\n\t\t\t\t}\n\t\t\t}, me, true);\n\n\t\t\tplugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t\t},\n\n\t\t// Get the single element that was clicked on\n\t\t// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t\tgetElementAtEvent: function(e) {\n\t\t\treturn Chart.Interaction.modes.single(this, e);\n\t\t},\n\n\t\tgetElementsAtEvent: function(e) {\n\t\t\treturn Chart.Interaction.modes.label(this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtXAxis: function(e) {\n\t\t\treturn Chart.Interaction.modes['x-axis'](this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\t\tvar method = Chart.Interaction.modes[mode];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\treturn method(this, e, options);\n\t\t\t}\n\n\t\t\treturn [];\n\t\t},\n\n\t\tgetDatasetAtEvent: function(e) {\n\t\t\treturn Chart.Interaction.modes.dataset(this, e, {intersect: true});\n\t\t},\n\n\t\tgetDatasetMeta: function(datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\t\tif (!dataset._meta) {\n\t\t\t\tdataset._meta = {};\n\t\t\t}\n\n\t\t\tvar meta = dataset._meta[me.id];\n\t\t\tif (!meta) {\n\t\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\t\ttype: null,\n\t\t\t\t\tdata: [],\n\t\t\t\t\tdataset: null,\n\t\t\t\t\tcontroller: null,\n\t\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\t\txAxisID: null,\n\t\t\t\t\tyAxisID: null\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn meta;\n\t\t},\n\n\t\tgetVisibleDatasetCount: function() {\n\t\t\tvar count = 0;\n\t\t\tfor (var i = 0, ilen = this.data.datasets.length; i<ilen; ++i) {\n\t\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t},\n\n\t\tisDatasetVisible: function(datasetIndex) {\n\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\t\treturn typeof meta.hidden === 'boolean'? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t\t},\n\n\t\tgenerateLegend: function() {\n\t\t\treturn this.options.legendCallback(this);\n\t\t},\n\n\t\tdestroy: function() {\n\t\t\tvar me = this;\n\t\t\tvar canvas = me.chart.canvas;\n\t\t\tvar meta, i, ilen;\n\n\t\t\tme.stop();\n\n\t\t\t// dataset controllers need to cleanup associated data\n\t\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tmeta = me.getDatasetMeta(i);\n\t\t\t\tif (meta.controller) {\n\t\t\t\t\tmeta.controller.destroy();\n\t\t\t\t\tmeta.controller = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (canvas) {\n\t\t\t\tme.unbindEvents();\n\t\t\t\thelpers.clear(me.chart);\n\t\t\t\tplatform.releaseContext(me.chart.ctx);\n\t\t\t\tme.chart.canvas = null;\n\t\t\t\tme.chart.ctx = null;\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'destroy');\n\n\t\t\tdelete Chart.instances[me.id];\n\t\t},\n\n\t\ttoBase64Image: function() {\n\t\t\treturn this.chart.canvas.toDataURL.apply(this.chart.canvas, arguments);\n\t\t},\n\n\t\tinitToolTip: function() {\n\t\t\tvar me = this;\n\t\t\tme.tooltip = new Chart.Tooltip({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_chartInstance: me,\n\t\t\t\t_data: me.data,\n\t\t\t\t_options: me.options.tooltips\n\t\t\t}, me);\n\t\t\tme.tooltip.initialize();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners = {};\n\t\t\tvar listener = function() {\n\t\t\t\tme.eventHandler.apply(me, arguments);\n\t\t\t};\n\n\t\t\thelpers.each(me.options.events, function(type) {\n\t\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\t\tlisteners[type] = listener;\n\t\t\t});\n\n\t\t\t// Responsiveness is currently based on the use of an iframe, however this method causes\n\t\t\t// performance issues and could be troublesome when used with ad blockers. So make sure\n\t\t\t// that the user is still able to create a chart without iframe when responsive is false.\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\t\tif (me.options.responsive) {\n\t\t\t\tlistener = function() {\n\t\t\t\t\tme.resize();\n\t\t\t\t};\n\n\t\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\t\tlisteners.resize = listener;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tunbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners;\n\t\t\tif (!listeners) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdelete me._listeners;\n\t\t\thelpers.each(listeners, function(listener, type) {\n\t\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t\t});\n\t\t},\n\n\t\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\t\tvar method = enabled? 'setHoverStyle' : 'removeHoverStyle';\n\t\t\tvar element, i, ilen;\n\n\t\t\tfor (i=0, ilen=elements.length; i<ilen; ++i) {\n\t\t\t\telement = elements[i];\n\t\t\t\tif (element) {\n\t\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\teventHandler: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\n\t\t\tif (plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Buffer any update calls so that renders do not occur\n\t\t\tme._bufferedRender = true;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\tvar changed = me.handleEvent(e);\n\t\t\tchanged |= tooltip && tooltip.handleEvent(e);\n\n\t\t\tplugins.notify(me, 'afterEvent', [e]);\n\n\t\t\tvar bufferedRequest = me._bufferedRequest;\n\t\t\tif (bufferedRequest) {\n\t\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\t\tme.render(bufferedRequest.duration, bufferedRequest.lazy);\n\t\t\t} else if (changed && !me.animating) {\n\t\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\t\tme.stop();\n\n\t\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\t\tme.render(me.options.hover.animationDuration, true);\n\t\t\t}\n\n\t\t\tme._bufferedRender = false;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\treturn me;\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event the event to handle\n\t\t * @return {Boolean} true if the chart needs to re-render\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options || {};\n\t\t\tvar hoverOptions = options.hover;\n\t\t\tvar changed = false;\n\n\t\t\tme.lastActive = me.lastActive || [];\n\n\t\t\t// Find Active Elements for hover and tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme.active = [];\n\t\t\t} else {\n\t\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t\t}\n\n\t\t\t// On Hover hook\n\t\t\tif (hoverOptions.onHover) {\n\t\t\t\t// Need to call with native event here to not break backwards compatibility\n\t\t\t\thoverOptions.onHover.call(me, e.native, me.active);\n\t\t\t}\n\n\t\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\t\tif (options.onClick) {\n\t\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove styling for last active (even if it may still be active)\n\t\t\tif (me.lastActive.length) {\n\t\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t\t}\n\n\t\t\t// Built in hover styling\n\t\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t\t}\n\n\t\t\tchanged = !helpers.arrayEquals(me.active, me.lastActive);\n\n\t\t\t// Remember Last Actives\n\t\t\tme.lastActive = me.active;\n\n\t\t\treturn changed;\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.controller.js\n// module id = 224\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n\t/**\n\t * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n\t * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n\t * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n\t */\n\tfunction listenArrayEvents(array, listener) {\n\t\tif (array._chartjs) {\n\t\t\tarray._chartjs.listeners.push(listener);\n\t\t\treturn;\n\t\t}\n\n\t\tObject.defineProperty(array, '_chartjs', {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: {\n\t\t\t\tlisteners: [listener]\n\t\t\t}\n\t\t});\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\t\tvar base = array[key];\n\n\t\t\tObject.defineProperty(array, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: function() {\n\t\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\t\tvar res = base.apply(this, args);\n\n\t\t\t\t\thelpers.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Removes the given array event listener and cleanup extra attached properties (such as\n\t * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n\t */\n\tfunction unlistenArrayEvents(array, listener) {\n\t\tvar stub = array._chartjs;\n\t\tif (!stub) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar listeners = stub.listeners;\n\t\tvar index = listeners.indexOf(listener);\n\t\tif (index !== -1) {\n\t\t\tlisteners.splice(index, 1);\n\t\t}\n\n\t\tif (listeners.length > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tdelete array[key];\n\t\t});\n\n\t\tdelete array._chartjs;\n\t}\n\n\t// Base class for all dataset controllers (line, bar, etc)\n\tChart.DatasetController = function(chart, datasetIndex) {\n\t\tthis.initialize(chart, datasetIndex);\n\t};\n\n\thelpers.extend(Chart.DatasetController.prototype, {\n\n\t\t/**\n\t\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdatasetElementType: null,\n\n\t\t/**\n\t\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdataElementType: null,\n\n\t\tinitialize: function(chart, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tme.chart = chart;\n\t\t\tme.index = datasetIndex;\n\t\t\tme.linkScales();\n\t\t\tme.addElements();\n\t\t},\n\n\t\tupdateIndex: function(datasetIndex) {\n\t\t\tthis.index = datasetIndex;\n\t\t},\n\n\t\tlinkScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\n\t\t\tif (meta.xAxisID === null) {\n\t\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t\t}\n\t\t\tif (meta.yAxisID === null) {\n\t\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t\t}\n\t\t},\n\n\t\tgetDataset: function() {\n\t\t\treturn this.chart.data.datasets[this.index];\n\t\t},\n\n\t\tgetMeta: function() {\n\t\t\treturn this.chart.getDatasetMeta(this.index);\n\t\t},\n\n\t\tgetScaleForId: function(scaleID) {\n\t\t\treturn this.chart.scales[scaleID];\n\t\t},\n\n\t\treset: function() {\n\t\t\tthis.update(true);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroy: function() {\n\t\t\tif (this._data) {\n\t\t\t\tunlistenArrayEvents(this._data, this);\n\t\t\t}\n\t\t},\n\n\t\tcreateMetaDataset: function() {\n\t\t\tvar me = this;\n\t\t\tvar type = me.datasetElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart.chart,\n\t\t\t\t_datasetIndex: me.index\n\t\t\t});\n\t\t},\n\n\t\tcreateMetaData: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar type = me.dataElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart.chart,\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index\n\t\t\t});\n\t\t},\n\n\t\taddElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data || [];\n\t\t\tvar metaData = meta.data;\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i=0, ilen=data.length; i<ilen; ++i) {\n\t\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t\t}\n\n\t\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t\t},\n\n\t\taddElementAndReset: function(index) {\n\t\t\tvar element = this.createMetaData(index);\n\t\t\tthis.getMeta().data.splice(index, 0, element);\n\t\t\tthis.updateElement(element, index, true);\n\t\t},\n\n\t\tbuildOrUpdateElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar data = dataset.data || (dataset.data = []);\n\n\t\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t\t// the internal meta data accordingly.\n\t\t\tif (me._data !== data) {\n\t\t\t\tif (me._data) {\n\t\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t\t}\n\n\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t\tme._data = data;\n\t\t\t}\n\n\t\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\t\tme.resyncElements();\n\t\t},\n\n\t\tupdate: helpers.noop,\n\n\t\tdraw: function(ease) {\n\t\t\tvar easingDecimal = ease || 1;\n\t\t\tvar i, len;\n\t\t\tvar metaData = this.getMeta().data;\n\t\t\tfor (i = 0, len = metaData.length; i < len; ++i) {\n\t\t\t\tmetaData[i].transition(easingDecimal).draw();\n\t\t\t}\n\t\t},\n\n\t\tremoveHoverStyle: function(element, elementOpts) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex],\n\t\t\t\tindex = element._index,\n\t\t\t\tcustom = element.custom || {},\n\t\t\t\tvalueOrDefault = helpers.getValueAtIndexOrDefault,\n\t\t\t\tmodel = element._model;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n\t\t},\n\n\t\tsetHoverStyle: function(element) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex],\n\t\t\t\tindex = element._index,\n\t\t\t\tcustom = element.custom || {},\n\t\t\t\tvalueOrDefault = helpers.getValueAtIndexOrDefault,\n\t\t\t\tgetHoverColor = helpers.getHoverColor,\n\t\t\t\tmodel = element._model;\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tresyncElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data;\n\t\t\tvar numMeta = meta.data.length;\n\t\t\tvar numData = data.length;\n\n\t\t\tif (numData < numMeta) {\n\t\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t\t} else if (numData > numMeta) {\n\t\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinsertElements: function(start, count) {\n\t\t\tfor (var i=0; i<count; ++i) {\n\t\t\t\tthis.addElementAndReset(start + i);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPush: function() {\n\t\t\tthis.insertElements(this.getDataset().data.length-1, arguments.length);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPop: function() {\n\t\t\tthis.getMeta().data.pop();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataShift: function() {\n\t\t\tthis.getMeta().data.shift();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataSplice: function(start, count) {\n\t\t\tthis.getMeta().data.splice(start, count);\n\t\t\tthis.insertElements(start, arguments.length - 2);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataUnshift: function() {\n\t\t\tthis.insertElements(0, arguments.length);\n\t\t}\n\t});\n\n\tChart.DatasetController.extend = helpers.inherits;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.datasetController.js\n// module id = 225\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.elements = {};\n\n\tChart.Element = function(configuration) {\n\t\thelpers.extend(this, configuration);\n\t\tthis.initialize.apply(this, arguments);\n\t};\n\n\thelpers.extend(Chart.Element.prototype, {\n\n\t\tinitialize: function() {\n\t\t\tthis.hidden = false;\n\t\t},\n\n\t\tpivot: function() {\n\t\t\tvar me = this;\n\t\t\tif (!me._view) {\n\t\t\t\tme._view = helpers.clone(me._model);\n\t\t\t}\n\t\t\tme._start = helpers.clone(me._view);\n\t\t\treturn me;\n\t\t},\n\n\t\ttransition: function(ease) {\n\t\t\tvar me = this;\n\n\t\t\tif (!me._view) {\n\t\t\t\tme._view = helpers.clone(me._model);\n\t\t\t}\n\n\t\t\t// No animation -> No Transition\n\t\t\tif (ease === 1) {\n\t\t\t\tme._view = me._model;\n\t\t\t\tme._start = null;\n\t\t\t\treturn me;\n\t\t\t}\n\n\t\t\tif (!me._start) {\n\t\t\t\tme.pivot();\n\t\t\t}\n\n\t\t\thelpers.each(me._model, function(value, key) {\n\n\t\t\t\tif (key[0] === '_') {\n\t\t\t\t\t// Only non-underscored properties\n\t\t\t\t// Init if doesn't exist\n\t\t\t\t} else if (!me._view.hasOwnProperty(key)) {\n\t\t\t\t\tif (typeof value === 'number' && !isNaN(me._view[key])) {\n\t\t\t\t\t\tme._view[key] = value * ease;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme._view[key] = value;\n\t\t\t\t\t}\n\t\t\t\t// No unnecessary computations\n\t\t\t\t} else if (value === me._view[key]) {\n\t\t\t\t\t// It's the same! Woohoo!\n\t\t\t\t// Color transitions if possible\n\t\t\t\t} else if (typeof value === 'string') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvar color = helpers.color(me._model[key]).mix(helpers.color(me._start[key]), ease);\n\t\t\t\t\t\tme._view[key] = color.rgbString();\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tme._view[key] = value;\n\t\t\t\t\t}\n\t\t\t\t// Number transitions\n\t\t\t\t} else if (typeof value === 'number') {\n\t\t\t\t\tvar startVal = me._start[key] !== undefined && isNaN(me._start[key]) === false ? me._start[key] : 0;\n\t\t\t\t\tme._view[key] = ((me._model[key] - startVal) * ease) + startVal;\n\t\t\t\t// Everything else\n\t\t\t\t} else {\n\t\t\t\t\tme._view[key] = value;\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\treturn me;\n\t\t},\n\n\t\ttooltipPosition: function() {\n\t\t\treturn {\n\t\t\t\tx: this._model.x,\n\t\t\t\ty: this._model.y\n\t\t\t};\n\t\t},\n\n\t\thasValue: function() {\n\t\t\treturn helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n\t\t}\n\t});\n\n\tChart.Element.extend = helpers.inherits;\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.element.js\n// module id = 226\n// module chunks = 0","/* global window: false */\n/* global document: false */\n'use strict';\n\nvar color = require('chartjs-color');\n\nmodule.exports = function(Chart) {\n\t// Global Chart helpers object for utility methods and classes\n\tvar helpers = Chart.helpers = {};\n\n\t// -- Basic js utility methods\n\thelpers.each = function(loopable, callback, self, reverse) {\n\t\t// Check to see if null or undefined firstly.\n\t\tvar i, len;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tcallback.call(self, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tcallback.call(self, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (typeof loopable === 'object') {\n\t\t\tvar keys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tcallback.call(self, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t};\n\thelpers.clone = function(obj) {\n\t\tvar objClone = {};\n\t\thelpers.each(obj, function(value, key) {\n\t\t\tif (helpers.isArray(value)) {\n\t\t\t\tobjClone[key] = value.slice(0);\n\t\t\t} else if (typeof value === 'object' && value !== null) {\n\t\t\t\tobjClone[key] = helpers.clone(value);\n\t\t\t} else {\n\t\t\t\tobjClone[key] = value;\n\t\t\t}\n\t\t});\n\t\treturn objClone;\n\t};\n\thelpers.extend = function(base) {\n\t\tvar setFn = function(value, key) {\n\t\t\tbase[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; i++) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn base;\n\t};\n\t// Need a special merge function to chart configs since they are now grouped\n\thelpers.configMerge = function(_base) {\n\t\tvar base = helpers.clone(_base);\n\t\thelpers.each(Array.prototype.slice.call(arguments, 1), function(extension) {\n\t\t\thelpers.each(extension, function(value, key) {\n\t\t\t\tvar baseHasProperty = base.hasOwnProperty(key);\n\t\t\t\tvar baseVal = baseHasProperty ? base[key] : {};\n\n\t\t\t\tif (key === 'scales') {\n\t\t\t\t\t// Scale config merging is complex. Add our own function here for that\n\t\t\t\t\tbase[key] = helpers.scaleMerge(baseVal, value);\n\t\t\t\t} else if (key === 'scale') {\n\t\t\t\t\t// Used in polar area & radar charts since there is only one scale\n\t\t\t\t\tbase[key] = helpers.configMerge(baseVal, Chart.scaleService.getScaleDefaults(value.type), value);\n\t\t\t\t} else if (baseHasProperty\n\t\t\t\t\t\t&& typeof baseVal === 'object'\n\t\t\t\t\t\t&& !helpers.isArray(baseVal)\n\t\t\t\t\t\t&& baseVal !== null\n\t\t\t\t\t\t&& typeof value === 'object'\n\t\t\t\t\t\t&& !helpers.isArray(value)) {\n\t\t\t\t\t// If we are overwriting an object with an object, do a merge of the properties.\n\t\t\t\t\tbase[key] = helpers.configMerge(baseVal, value);\n\t\t\t\t} else {\n\t\t\t\t\t// can just overwrite the value in this case\n\t\t\t\t\tbase[key] = value;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn base;\n\t};\n\thelpers.scaleMerge = function(_base, extension) {\n\t\tvar base = helpers.clone(_base);\n\n\t\thelpers.each(extension, function(value, key) {\n\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\t// These properties are arrays of items\n\t\t\t\tif (base.hasOwnProperty(key)) {\n\t\t\t\t\thelpers.each(value, function(valueObj, index) {\n\t\t\t\t\t\tvar axisType = helpers.getValueOrDefault(valueObj.type, key === 'xAxes' ? 'category' : 'linear');\n\t\t\t\t\t\tvar axisDefaults = Chart.scaleService.getScaleDefaults(axisType);\n\t\t\t\t\t\tif (index >= base[key].length || !base[key][index].type) {\n\t\t\t\t\t\t\tbase[key].push(helpers.configMerge(axisDefaults, valueObj));\n\t\t\t\t\t\t} else if (valueObj.type && valueObj.type !== base[key][index].type) {\n\t\t\t\t\t\t\t// Type changed. Bring in the new defaults before we bring in valueObj so that valueObj can override the correct scale defaults\n\t\t\t\t\t\t\tbase[key][index] = helpers.configMerge(base[key][index], axisDefaults, valueObj);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Type is the same\n\t\t\t\t\t\t\tbase[key][index] = helpers.configMerge(base[key][index], valueObj);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tbase[key] = [];\n\t\t\t\t\thelpers.each(value, function(valueObj) {\n\t\t\t\t\t\tvar axisType = helpers.getValueOrDefault(valueObj.type, key === 'xAxes' ? 'category' : 'linear');\n\t\t\t\t\t\tbase[key].push(helpers.configMerge(Chart.scaleService.getScaleDefaults(axisType), valueObj));\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if (base.hasOwnProperty(key) && typeof base[key] === 'object' && base[key] !== null && typeof value === 'object') {\n\t\t\t\t// If we are overwriting an object with an object, do a merge of the properties.\n\t\t\t\tbase[key] = helpers.configMerge(base[key], value);\n\n\t\t\t} else {\n\t\t\t\t// can just overwrite the value in this case\n\t\t\t\tbase[key] = value;\n\t\t\t}\n\t\t});\n\n\t\treturn base;\n\t};\n\thelpers.getValueAtIndexOrDefault = function(value, index, defaultValue) {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn defaultValue;\n\t\t}\n\n\t\tif (helpers.isArray(value)) {\n\t\t\treturn index < value.length ? value[index] : defaultValue;\n\t\t}\n\n\t\treturn value;\n\t};\n\thelpers.getValueOrDefault = function(value, defaultValue) {\n\t\treturn value === undefined ? defaultValue : value;\n\t};\n\thelpers.indexOf = Array.prototype.indexOf?\n\t\tfunction(array, item) {\n\t\t\treturn array.indexOf(item);\n\t\t}:\n\t\tfunction(array, item) {\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (array[i] === item) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers.where = function(collection, filterCallback) {\n\t\tif (helpers.isArray(collection) && Array.prototype.filter) {\n\t\t\treturn collection.filter(filterCallback);\n\t\t}\n\t\tvar filtered = [];\n\n\t\thelpers.each(collection, function(item) {\n\t\t\tif (filterCallback(item)) {\n\t\t\t\tfiltered.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn filtered;\n\t};\n\thelpers.findIndex = Array.prototype.findIndex?\n\t\tfunction(array, callback, scope) {\n\t\t\treturn array.findIndex(callback, scope);\n\t\t} :\n\t\tfunction(array, callback, scope) {\n\t\t\tscope = scope === undefined? array : scope;\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to start of the array\n\t\tif (startIndex === undefined || startIndex === null) {\n\t\t\tstartIndex = -1;\n\t\t}\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to end of the array\n\t\tif (startIndex === undefined || startIndex === null) {\n\t\t\tstartIndex = arrayToSearch.length;\n\t\t}\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.inherits = function(extensions) {\n\t\t// Basic javascript inheritance based on the model created in Backbone.js\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\n\t\treturn ChartElement;\n\t};\n\thelpers.noop = function() {};\n\thelpers.uid = (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}());\n\t// -- Math methods\n\thelpers.isNumber = function(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t};\n\thelpers.almostEquals = function(x, y, epsilon) {\n\t\treturn Math.abs(x - y) < epsilon;\n\t};\n\thelpers.almostWhole = function(x, epsilon) {\n\t\tvar rounded = Math.round(x);\n\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\n\t};\n\thelpers.max = function(array) {\n\t\treturn array.reduce(function(max, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.max(max, value);\n\t\t\t}\n\t\t\treturn max;\n\t\t}, Number.NEGATIVE_INFINITY);\n\t};\n\thelpers.min = function(array) {\n\t\treturn array.reduce(function(min, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.min(min, value);\n\t\t\t}\n\t\t\treturn min;\n\t\t}, Number.POSITIVE_INFINITY);\n\t};\n\thelpers.sign = Math.sign?\n\t\tfunction(x) {\n\t\t\treturn Math.sign(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tx = +x; // convert to a number\n\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn x > 0 ? 1 : -1;\n\t\t};\n\thelpers.log10 = Math.log10?\n\t\tfunction(x) {\n\t\t\treturn Math.log10(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\treturn Math.log(x) / Math.LN10;\n\t\t};\n\thelpers.toRadians = function(degrees) {\n\t\treturn degrees * (Math.PI / 180);\n\t};\n\thelpers.toDegrees = function(radians) {\n\t\treturn radians * (180 / Math.PI);\n\t};\n\t// Gets the angle from vertical upright to the point about a centre.\n\thelpers.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x,\n\t\t\tdistanceFromYCenter = anglePoint.y - centrePoint.y,\n\t\t\tradialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t}\n\n\t\treturn {\n\t\t\tangle: angle,\n\t\t\tdistance: radialDistanceFromCenter\n\t\t};\n\t};\n\thelpers.distanceBetweenPoints = function(pt1, pt2) {\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n\t};\n\thelpers.aliasPixel = function(pixelWidth) {\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t};\n\thelpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n\t\t// This function must also respect \"skipped\" points\n\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint,\n\t\t\tcurrent = middlePoint,\n\t\t\tnext = afterPoint.skip ? middlePoint : afterPoint;\n\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n\t\tvar s01 = d01 / (d01 + d12);\n\t\tvar s12 = d12 / (d01 + d12);\n\n\t\t// If all points are the same, s01 & s02 will be inf\n\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\ts12 = isNaN(s12) ? 0 : s12;\n\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\tvar fb = t * s12;\n\n\t\treturn {\n\t\t\tprevious: {\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t},\n\t\t\tnext: {\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t}\n\t\t};\n\t};\n\thelpers.EPSILON = Number.EPSILON || 1e-14;\n\thelpers.splineCurveMonotone = function(points) {\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t// between the dataset discrete points due to the interpolation.\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\treturn {\n\t\t\t\tmodel: point._model,\n\t\t\t\tdeltaK: 0,\n\t\t\t\tmK: 0\n\t\t\t};\n\t\t});\n\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\tvar pointsLen = pointsWithTangents.length;\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\n\n\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n\t\t\t}\n\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\tpointCurrent.mK = 0;\n\t\t\t} else {\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Adjust tangents to ensure monotonic properties\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t}\n\n\t\t// Compute control points\n\t\tvar deltaX;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.nextItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t}\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t};\n\thelpers.previousItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t}\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t};\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\thelpers.niceNum = function(range, round) {\n\t\tvar exponent = Math.floor(helpers.log10(range));\n\t\tvar fraction = range / Math.pow(10, exponent);\n\t\tvar niceFraction;\n\n\t\tif (round) {\n\t\t\tif (fraction < 1.5) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction < 3) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction < 7) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\t} else if (fraction <= 1.0) {\n\t\t\tniceFraction = 1;\n\t\t} else if (fraction <= 2) {\n\t\t\tniceFraction = 2;\n\t\t} else if (fraction <= 5) {\n\t\t\tniceFraction = 5;\n\t\t} else {\n\t\t\tniceFraction = 10;\n\t\t}\n\n\t\treturn niceFraction * Math.pow(10, exponent);\n\t};\n\t// Easing functions adapted from Robert Penner's easing equations\n\t// http://www.robertpenner.com/easing/\n\tvar easingEffects = helpers.easingEffects = {\n\t\tlinear: function(t) {\n\t\t\treturn t;\n\t\t},\n\t\teaseInQuad: function(t) {\n\t\t\treturn t * t;\n\t\t},\n\t\teaseOutQuad: function(t) {\n\t\t\treturn -1 * t * (t - 2);\n\t\t},\n\t\teaseInOutQuad: function(t) {\n\t\t\tif ((t /= 1 / 2) < 1) {\n\t\t\t\treturn 1 / 2 * t * t;\n\t\t\t}\n\t\t\treturn -1 / 2 * ((--t) * (t - 2) - 1);\n\t\t},\n\t\teaseInCubic: function(t) {\n\t\t\treturn t * t * t;\n\t\t},\n\t\teaseOutCubic: function(t) {\n\t\t\treturn 1 * ((t = t / 1 - 1) * t * t + 1);\n\t\t},\n\t\teaseInOutCubic: function(t) {\n\t\t\tif ((t /= 1 / 2) < 1) {\n\t\t\t\treturn 1 / 2 * t * t * t;\n\t\t\t}\n\t\t\treturn 1 / 2 * ((t -= 2) * t * t + 2);\n\t\t},\n\t\teaseInQuart: function(t) {\n\t\t\treturn t * t * t * t;\n\t\t},\n\t\teaseOutQuart: function(t) {\n\t\t\treturn -1 * ((t = t / 1 - 1) * t * t * t - 1);\n\t\t},\n\t\teaseInOutQuart: function(t) {\n\t\t\tif ((t /= 1 / 2) < 1) {\n\t\t\t\treturn 1 / 2 * t * t * t * t;\n\t\t\t}\n\t\t\treturn -1 / 2 * ((t -= 2) * t * t * t - 2);\n\t\t},\n\t\teaseInQuint: function(t) {\n\t\t\treturn 1 * (t /= 1) * t * t * t * t;\n\t\t},\n\t\teaseOutQuint: function(t) {\n\t\t\treturn 1 * ((t = t / 1 - 1) * t * t * t * t + 1);\n\t\t},\n\t\teaseInOutQuint: function(t) {\n\t\t\tif ((t /= 1 / 2) < 1) {\n\t\t\t\treturn 1 / 2 * t * t * t * t * t;\n\t\t\t}\n\t\t\treturn 1 / 2 * ((t -= 2) * t * t * t * t + 2);\n\t\t},\n\t\teaseInSine: function(t) {\n\t\t\treturn -1 * Math.cos(t / 1 * (Math.PI / 2)) + 1;\n\t\t},\n\t\teaseOutSine: function(t) {\n\t\t\treturn 1 * Math.sin(t / 1 * (Math.PI / 2));\n\t\t},\n\t\teaseInOutSine: function(t) {\n\t\t\treturn -1 / 2 * (Math.cos(Math.PI * t / 1) - 1);\n\t\t},\n\t\teaseInExpo: function(t) {\n\t\t\treturn (t === 0) ? 1 : 1 * Math.pow(2, 10 * (t / 1 - 1));\n\t\t},\n\t\teaseOutExpo: function(t) {\n\t\t\treturn (t === 1) ? 1 : 1 * (-Math.pow(2, -10 * t / 1) + 1);\n\t\t},\n\t\teaseInOutExpo: function(t) {\n\t\t\tif (t === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (t === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif ((t /= 1 / 2) < 1) {\n\t\t\t\treturn 1 / 2 * Math.pow(2, 10 * (t - 1));\n\t\t\t}\n\t\t\treturn 1 / 2 * (-Math.pow(2, -10 * --t) + 2);\n\t\t},\n\t\teaseInCirc: function(t) {\n\t\t\tif (t >= 1) {\n\t\t\t\treturn t;\n\t\t\t}\n\t\t\treturn -1 * (Math.sqrt(1 - (t /= 1) * t) - 1);\n\t\t},\n\t\teaseOutCirc: function(t) {\n\t\t\treturn 1 * Math.sqrt(1 - (t = t / 1 - 1) * t);\n\t\t},\n\t\teaseInOutCirc: function(t) {\n\t\t\tif ((t /= 1 / 2) < 1) {\n\t\t\t\treturn -1 / 2 * (Math.sqrt(1 - t * t) - 1);\n\t\t\t}\n\t\t\treturn 1 / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t\t},\n\t\teaseInElastic: function(t) {\n\t\t\tvar s = 1.70158;\n\t\t\tvar p = 0;\n\t\t\tvar a = 1;\n\t\t\tif (t === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif ((t /= 1) === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif (!p) {\n\t\t\t\tp = 1 * 0.3;\n\t\t\t}\n\t\t\tif (a < Math.abs(1)) {\n\t\t\t\ta = 1;\n\t\t\t\ts = p / 4;\n\t\t\t} else {\n\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t}\n\t\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\n\t\t},\n\t\teaseOutElastic: function(t) {\n\t\t\tvar s = 1.70158;\n\t\t\tvar p = 0;\n\t\t\tvar a = 1;\n\t\t\tif (t === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif ((t /= 1) === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif (!p) {\n\t\t\t\tp = 1 * 0.3;\n\t\t\t}\n\t\t\tif (a < Math.abs(1)) {\n\t\t\t\ta = 1;\n\t\t\t\ts = p / 4;\n\t\t\t} else {\n\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t}\n\t\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) + 1;\n\t\t},\n\t\teaseInOutElastic: function(t) {\n\t\t\tvar s = 1.70158;\n\t\t\tvar p = 0;\n\t\t\tvar a = 1;\n\t\t\tif (t === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif ((t /= 1 / 2) === 2) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif (!p) {\n\t\t\t\tp = 1 * (0.3 * 1.5);\n\t\t\t}\n\t\t\tif (a < Math.abs(1)) {\n\t\t\t\ta = 1;\n\t\t\t\ts = p / 4;\n\t\t\t} else {\n\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t}\n\t\t\tif (t < 1) {\n\t\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\n\t\t\t}\n\t\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t\t},\n\t\teaseInBack: function(t) {\n\t\t\tvar s = 1.70158;\n\t\t\treturn 1 * (t /= 1) * t * ((s + 1) * t - s);\n\t\t},\n\t\teaseOutBack: function(t) {\n\t\t\tvar s = 1.70158;\n\t\t\treturn 1 * ((t = t / 1 - 1) * t * ((s + 1) * t + s) + 1);\n\t\t},\n\t\teaseInOutBack: function(t) {\n\t\t\tvar s = 1.70158;\n\t\t\tif ((t /= 1 / 2) < 1) {\n\t\t\t\treturn 1 / 2 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t\t}\n\t\t\treturn 1 / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t\t},\n\t\teaseInBounce: function(t) {\n\t\t\treturn 1 - easingEffects.easeOutBounce(1 - t);\n\t\t},\n\t\teaseOutBounce: function(t) {\n\t\t\tif ((t /= 1) < (1 / 2.75)) {\n\t\t\t\treturn 1 * (7.5625 * t * t);\n\t\t\t} else if (t < (2 / 2.75)) {\n\t\t\t\treturn 1 * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75);\n\t\t\t} else if (t < (2.5 / 2.75)) {\n\t\t\t\treturn 1 * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375);\n\t\t\t}\n\t\t\treturn 1 * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375);\n\t\t},\n\t\teaseInOutBounce: function(t) {\n\t\t\tif (t < 1 / 2) {\n\t\t\t\treturn easingEffects.easeInBounce(t * 2) * 0.5;\n\t\t\t}\n\t\t\treturn easingEffects.easeOutBounce(t * 2 - 1) * 0.5 + 1 * 0.5;\n\t\t}\n\t};\n\t// Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\thelpers.requestAnimFrame = (function() {\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\t// -- DOM methods\n\thelpers.getRelativePosition = function(evt, chart) {\n\t\tvar mouseX, mouseY;\n\t\tvar e = evt.originalEvent || evt,\n\t\t\tcanvas = evt.currentTarget || evt.srcElement,\n\t\t\tboundingRect = canvas.getBoundingClientRect();\n\n\t\tvar touches = e.touches;\n\t\tif (touches && touches.length > 0) {\n\t\t\tmouseX = touches[0].clientX;\n\t\t\tmouseY = touches[0].clientY;\n\n\t\t} else {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t}\n\n\t\t// Scale mouse coordinates into canvas coordinates\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\tvar paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n\t\tvar paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n\t\tvar paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n\t\tvar paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n\t\treturn {\n\t\t\tx: mouseX,\n\t\t\ty: mouseY\n\t\t};\n\n\t};\n\thelpers.addEvent = function(node, eventType, method) {\n\t\tif (node.addEventListener) {\n\t\t\tnode.addEventListener(eventType, method);\n\t\t} else if (node.attachEvent) {\n\t\t\tnode.attachEvent('on' + eventType, method);\n\t\t} else {\n\t\t\tnode['on' + eventType] = method;\n\t\t}\n\t};\n\thelpers.removeEvent = function(node, eventType, handler) {\n\t\tif (node.removeEventListener) {\n\t\t\tnode.removeEventListener(eventType, handler, false);\n\t\t} else if (node.detachEvent) {\n\t\t\tnode.detachEvent('on' + eventType, handler);\n\t\t} else {\n\t\t\tnode['on' + eventType] = helpers.noop;\n\t\t}\n\t};\n\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\tvar valueInPixels;\n\t\tif (typeof(styleValue) === 'string') {\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\n\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t// percentage * size in dimension\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t}\n\t\t} else {\n\t\t\tvalueInPixels = styleValue;\n\t\t}\n\n\t\treturn valueInPixels;\n\t}\n\n\t/**\n\t * Returns if the given value contains an effective constraint.\n\t * @private\n\t */\n\tfunction isConstrainedValue(value) {\n\t\treturn value !== undefined && value !== null && value !== 'none';\n\t}\n\n\t// Private helper to get a constraint dimension\n\t// @param domNode : the node to check the constraint on\n\t// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n\t// @param percentageProperty : property of parent to use when calculating width as a percentage\n\t// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\tvar view = document.defaultView;\n\t\tvar parentNode = domNode.parentNode;\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\tvar infinity = Number.POSITIVE_INFINITY;\n\n\t\tif (hasCNode || hasCContainer) {\n\t\t\treturn Math.min(\n\t\t\t\thasCNode? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\thasCContainer? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t}\n\n\t\treturn 'none';\n\t}\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintWidth = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t};\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintHeight = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t};\n\thelpers.getMaximumWidth = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tvar paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);\n\t\tvar paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);\n\t\tvar w = container.clientWidth - paddingLeft - paddingRight;\n\t\tvar cw = helpers.getConstraintWidth(domNode);\n\t\treturn isNaN(cw)? w : Math.min(w, cw);\n\t};\n\thelpers.getMaximumHeight = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tvar paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);\n\t\tvar paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);\n\t\tvar h = container.clientHeight - paddingTop - paddingBottom;\n\t\tvar ch = helpers.getConstraintHeight(domNode);\n\t\treturn isNaN(ch)? h : Math.min(h, ch);\n\t};\n\thelpers.getStyle = function(el, property) {\n\t\treturn el.currentStyle ?\n\t\t\tel.currentStyle[property] :\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t};\n\thelpers.retinaScale = function(chart) {\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = window.devicePixelRatio || 1;\n\t\tif (pixelRatio === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar canvas = chart.canvas;\n\t\tvar height = chart.height;\n\t\tvar width = chart.width;\n\n\t\tcanvas.height = height * pixelRatio;\n\t\tcanvas.width = width * pixelRatio;\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\n\n\t\t// If no style has been set on the canvas, the render size is used as display size,\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\n\t\tcanvas.style.height = height + 'px';\n\t\tcanvas.style.width = width + 'px';\n\t};\n\t// -- Canvas methods\n\thelpers.clear = function(chart) {\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t};\n\thelpers.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t};\n\thelpers.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\tcache = cache || {};\n\t\tvar data = cache.data = cache.data || {};\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\n\t\tif (cache.font !== font) {\n\t\t\tdata = cache.data = {};\n\t\t\tgc = cache.garbageCollect = [];\n\t\t\tcache.font = font;\n\t\t}\n\n\t\tctx.font = font;\n\t\tvar longest = 0;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\t// Undefined strings and arrays should not be measured\n\t\t\tif (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, thing);\n\t\t\t} else if (helpers.isArray(thing)) {\n\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\thelpers.each(thing, function(nestedThing) {\n\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n\t\t\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar gcLen = gc.length / 2;\n\t\tif (gcLen > arrayOfThings.length) {\n\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\tdelete data[gc[i]];\n\t\t\t}\n\t\t\tgc.splice(0, gcLen);\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.measureText = function(ctx, data, gc, longest, string) {\n\t\tvar textWidth = data[string];\n\t\tif (!textWidth) {\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\tgc.push(string);\n\t\t}\n\t\tif (textWidth > longest) {\n\t\t\tlongest = textWidth;\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.numberOfLabelLines = function(arrayOfThings) {\n\t\tvar numberOfLines = 1;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\tif (helpers.isArray(thing)) {\n\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn numberOfLines;\n\t};\n\thelpers.drawRoundedRectangle = function(ctx, x, y, width, height, radius) {\n\t\tctx.beginPath();\n\t\tctx.moveTo(x + radius, y);\n\t\tctx.lineTo(x + width - radius, y);\n\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\tctx.lineTo(x + width, y + height - radius);\n\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\tctx.lineTo(x + radius, y + height);\n\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\tctx.lineTo(x, y + radius);\n\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\tctx.closePath();\n\t};\n\thelpers.color = function(c) {\n\t\tif (!color) {\n\t\t\tconsole.error('Color.js not found!');\n\t\t\treturn c;\n\t\t}\n\n\t\t/* global CanvasGradient */\n\t\tif (c instanceof CanvasGradient) {\n\t\t\treturn color(Chart.defaults.global.defaultColor);\n\t\t}\n\n\t\treturn color(c);\n\t};\n\thelpers.isArray = Array.isArray?\n\t\tfunction(obj) {\n\t\t\treturn Array.isArray(obj);\n\t\t} :\n\t\tfunction(obj) {\n\t\t\treturn Object.prototype.toString.call(obj) === '[object Array]';\n\t\t};\n\t// ! @see http://stackoverflow.com/a/14853974\n\thelpers.arrayEquals = function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen=a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t};\n\thelpers.callCallback = function(fn, args, _tArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\tfn.apply(_tArg, args);\n\t\t}\n\t};\n\thelpers.getHoverColor = function(colorValue) {\n\t\t/* global CanvasPattern */\n\t\treturn (colorValue instanceof CanvasPattern) ?\n\t\t\tcolorValue :\n\t\t\thelpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.helpers.js\n// module id = 227\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\tvar helpers = Chart.helpers;\n\n\t/**\n\t * Helper function to get relative position for an event\n\t * @param {Event|IEvent} event - The event to get the position for\n\t * @param {Chart} chart - The chart\n\t * @returns {Point} the event position\n\t */\n\tfunction getRelativePosition(e, chart) {\n\t\tif (e.native) {\n\t\t\treturn {\n\t\t\t\tx: e.x,\n\t\t\t\ty: e.y\n\t\t\t};\n\t\t}\n\n\t\treturn helpers.getRelativePosition(e, chart);\n\t}\n\n\t/**\n\t * Helper function to traverse all of the visible elements in the chart\n\t * @param chart {chart} the chart\n\t * @param handler {Function} the callback to execute for each visible item\n\t */\n\tfunction parseVisibleItems(chart, handler) {\n\t\tvar datasets = chart.data.datasets;\n\t\tvar meta, i, j, ilen, jlen;\n\n\t\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\n\t\t\tif (!chart.isDatasetVisible(i)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n\t\t\t\tvar element = meta.data[j];\n\t\t\t\tif (!element._view.skip) {\n\t\t\t\t\thandler(element);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Helper function to get the items that intersect the event position\n\t * @param items {ChartElement[]} elements to filter\n\t * @param position {Point} the point to be nearest to\n\t * @return {ChartElement[]} the nearest items\n\t */\n\tfunction getIntersectItems(chart, position) {\n\t\tvar elements = [];\n\n\t\tparseVisibleItems(chart, function(element) {\n\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t});\n\n\t\treturn elements;\n\t}\n\n\t/**\n\t * Helper function to get the items nearest to the event position considering all visible items in teh chart\n\t * @param chart {Chart} the chart to look at elements from\n\t * @param position {Point} the point to be nearest to\n\t * @param intersect {Boolean} if true, only consider items that intersect the position\n\t * @param distanceMetric {Function} Optional function to provide the distance between\n\t * @return {ChartElement[]} the nearest items\n\t */\n\tfunction getNearestItems(chart, position, intersect, distanceMetric) {\n\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\tvar nearestItems = [];\n\n\t\tif (!distanceMetric) {\n\t\t\tdistanceMetric = helpers.distanceBetweenPoints;\n\t\t}\n\n\t\tparseVisibleItems(chart, function(element) {\n\t\t\tif (intersect && !element.inRange(position.x, position.y)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar center = element.getCenterPoint();\n\t\t\tvar distance = distanceMetric(position, center);\n\n\t\t\tif (distance < minDistance) {\n\t\t\t\tnearestItems = [element];\n\t\t\t\tminDistance = distance;\n\t\t\t} else if (distance === minDistance) {\n\t\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\t\tnearestItems.push(element);\n\t\t\t}\n\t\t});\n\n\t\treturn nearestItems;\n\t}\n\n\tfunction indexMode(chart, e, options) {\n\t\tvar position = getRelativePosition(e, chart.chart);\n\t\tvar distanceMetric = function(pt1, pt2) {\n\t\t\treturn Math.abs(pt1.x - pt2.x);\n\t\t};\n\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\t\tvar elements = [];\n\n\t\tif (!items.length) {\n\t\t\treturn [];\n\t\t}\n\n\t\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\n\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex),\n\t\t\t\t\telement = meta.data[items[0]._index];\n\n\t\t\t\t// don't count items that are skipped (null data)\n\t\t\t\tif (element && !element._view.skip) {\n\t\t\t\t\telements.push(element);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn elements;\n\t}\n\n\t/**\n\t * @interface IInteractionOptions\n\t */\n\t/**\n\t * If true, only consider items that intersect the point\n\t * @name IInterfaceOptions#boolean\n\t * @type Boolean\n\t */\n\n\t/**\n\t * Contains interaction related functions\n\t * @namespace Chart.Interaction\n\t */\n\tChart.Interaction = {\n\t\t// Helper function for different modes\n\t\tmodes: {\n\t\t\tsingle: function(chart, e) {\n\t\t\t\tvar position = getRelativePosition(e, chart.chart);\n\t\t\t\tvar elements = [];\n\n\t\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\t\telements.push(element);\n\t\t\t\t\t\treturn elements;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn elements.slice(0, 1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * @function Chart.Interaction.modes.label\n\t\t\t * @deprecated since version 2.4.0\n\t\t\t */\n\t\t\tlabel: indexMode,\n\n\t\t\t/**\n\t\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t\t * @function Chart.Interaction.modes.index\n\t\t\t * @since v2.4.0\n\t\t\t * @param chart {chart} the chart we are returning items from\n\t\t\t * @param e {Event} the event we are find things at\n\t\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t\t */\n\t\t\tindex: indexMode,\n\n\t\t\t/**\n\t\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t\t * @function Chart.Interaction.modes.dataset\n\t\t\t * @param chart {chart} the chart we are returning items from\n\t\t\t * @param e {Event} the event we are find things at\n\t\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t\t */\n\t\t\tdataset: function(chart, e, options) {\n\t\t\t\tvar position = getRelativePosition(e, chart.chart);\n\t\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false);\n\n\t\t\t\tif (items.length > 0) {\n\t\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\n\t\t\t\t}\n\n\t\t\t\treturn items;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * @function Chart.Interaction.modes.x-axis\n\t\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\n\t\t\t */\n\t\t\t'x-axis': function(chart, e) {\n\t\t\t\treturn indexMode(chart, e, true);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Point mode returns all elements that hit test based on the event position\n\t\t\t * of the event\n\t\t\t * @function Chart.Interaction.modes.intersect\n\t\t\t * @param chart {chart} the chart we are returning items from\n\t\t\t * @param e {Event} the event we are find things at\n\t\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t\t */\n\t\t\tpoint: function(chart, e) {\n\t\t\t\tvar position = getRelativePosition(e, chart.chart);\n\t\t\t\treturn getIntersectItems(chart, position);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * nearest mode returns the element closest to the point\n\t\t\t * @function Chart.Interaction.modes.intersect\n\t\t\t * @param chart {chart} the chart we are returning items from\n\t\t\t * @param e {Event} the event we are find things at\n\t\t\t * @param options {IInteractionOptions} options to use\n\t\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t\t */\n\t\t\tnearest: function(chart, e, options) {\n\t\t\t\tvar position = getRelativePosition(e, chart.chart);\n\t\t\t\tvar nearestItems = getNearestItems(chart, position, options.intersect);\n\n\t\t\t\t// We have multiple items at the same distance from the event. Now sort by smallest\n\t\t\t\tif (nearestItems.length > 1) {\n\t\t\t\t\tnearestItems.sort(function(a, b) {\n\t\t\t\t\t\tvar sizeA = a.getArea();\n\t\t\t\t\t\tvar sizeB = b.getArea();\n\t\t\t\t\t\tvar ret = sizeA - sizeB;\n\n\t\t\t\t\t\tif (ret === 0) {\n\t\t\t\t\t\t\t// if equal sort by dataset index\n\t\t\t\t\t\t\tret = a._datasetIndex - b._datasetIndex;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn ret;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Return only 1 item\n\t\t\t\treturn nearestItems.slice(0, 1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t\t * @function Chart.Interaction.modes.x\n\t\t\t * @param chart {chart} the chart we are returning items from\n\t\t\t * @param e {Event} the event we are find things at\n\t\t\t * @param options {IInteractionOptions} options to use\n\t\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t\t */\n\t\t\tx: function(chart, e, options) {\n\t\t\t\tvar position = getRelativePosition(e, chart.chart);\n\t\t\t\tvar items = [];\n\t\t\t\tvar intersectsItem = false;\n\n\t\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\t\tif (element.inXRange(position.x)) {\n\t\t\t\t\t\titems.push(element);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\t\tintersectsItem = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t\t// that intersect the position, return nothing\n\t\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\t\titems = [];\n\t\t\t\t}\n\t\t\t\treturn items;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t\t * @function Chart.Interaction.modes.y\n\t\t\t * @param chart {chart} the chart we are returning items from\n\t\t\t * @param e {Event} the event we are find things at\n\t\t\t * @param options {IInteractionOptions} options to use\n\t\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t\t */\n\t\t\ty: function(chart, e, options) {\n\t\t\t\tvar position = getRelativePosition(e, chart.chart);\n\t\t\t\tvar items = [];\n\t\t\t\tvar intersectsItem = false;\n\n\t\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\t\tif (element.inYRange(position.y)) {\n\t\t\t\t\t\titems.push(element);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\t\tintersectsItem = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t\t// that intersect the position, return nothing\n\t\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\t\titems = [];\n\t\t\t\t}\n\t\t\t\treturn items;\n\t\t\t}\n\t\t}\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.interaction.js\n// module id = 228\n// module chunks = 0","'use strict';\n\nmodule.exports = function() {\n\n\t// Occupy the global variable of Chart, and create a simple base class\n\tvar Chart = function(item, config) {\n\t\tthis.controller = new Chart.Controller(item, config, this);\n\t\treturn this.controller;\n\t};\n\n\t// Globally expose the defaults to allow for user updating/changing\n\tChart.defaults = {\n\t\tglobal: {\n\t\t\tresponsive: true,\n\t\t\tresponsiveAnimationDuration: 0,\n\t\t\tmaintainAspectRatio: true,\n\t\t\tevents: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n\t\t\thover: {\n\t\t\t\tonHover: null,\n\t\t\t\tmode: 'nearest',\n\t\t\t\tintersect: true,\n\t\t\t\tanimationDuration: 400\n\t\t\t},\n\t\t\tonClick: null,\n\t\t\tdefaultColor: 'rgba(0,0,0,0.1)',\n\t\t\tdefaultFontColor: '#666',\n\t\t\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\t\t\tdefaultFontSize: 12,\n\t\t\tdefaultFontStyle: 'normal',\n\t\t\tshowLines: true,\n\n\t\t\t// Element defaults defined in element extensions\n\t\t\telements: {},\n\n\t\t\t// Legend callback string\n\t\t\tlegendCallback: function(chart) {\n\t\t\t\tvar text = [];\n\t\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\t\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t\t\t}\n\t\t\t\t\ttext.push('</li>');\n\t\t\t\t}\n\t\t\t\ttext.push('</ul>');\n\n\t\t\t\treturn text.join('');\n\t\t\t}\n\t\t}\n\t};\n\n\tChart.Chart = Chart;\n\n\treturn Chart;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.js\n// module id = 229\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\t// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n\t// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n\t// It is this service's responsibility of carrying out that layout.\n\tChart.layoutService = {\n\t\tdefaults: {},\n\n\t\t// Register a box to a chartInstance. A box is simply a reference to an object that requires layout. eg. Scales, Legend, Plugins.\n\t\taddBox: function(chartInstance, box) {\n\t\t\tif (!chartInstance.boxes) {\n\t\t\t\tchartInstance.boxes = [];\n\t\t\t}\n\t\t\tchartInstance.boxes.push(box);\n\t\t},\n\n\t\tremoveBox: function(chartInstance, box) {\n\t\t\tif (!chartInstance.boxes) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tchartInstance.boxes.splice(chartInstance.boxes.indexOf(box), 1);\n\t\t},\n\n\t\t// The most important function\n\t\tupdate: function(chartInstance, width, height) {\n\n\t\t\tif (!chartInstance) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar layoutOptions = chartInstance.options.layout;\n\t\t\tvar padding = layoutOptions ? layoutOptions.padding : null;\n\n\t\t\tvar leftPadding = 0;\n\t\t\tvar rightPadding = 0;\n\t\t\tvar topPadding = 0;\n\t\t\tvar bottomPadding = 0;\n\n\t\t\tif (!isNaN(padding)) {\n\t\t\t\t// options.layout.padding is a number. assign to all\n\t\t\t\tleftPadding = padding;\n\t\t\t\trightPadding = padding;\n\t\t\t\ttopPadding = padding;\n\t\t\t\tbottomPadding = padding;\n\t\t\t} else {\n\t\t\t\tleftPadding = padding.left || 0;\n\t\t\t\trightPadding = padding.right || 0;\n\t\t\t\ttopPadding = padding.top || 0;\n\t\t\t\tbottomPadding = padding.bottom || 0;\n\t\t\t}\n\n\t\t\tvar leftBoxes = helpers.where(chartInstance.boxes, function(box) {\n\t\t\t\treturn box.options.position === 'left';\n\t\t\t});\n\t\t\tvar rightBoxes = helpers.where(chartInstance.boxes, function(box) {\n\t\t\t\treturn box.options.position === 'right';\n\t\t\t});\n\t\t\tvar topBoxes = helpers.where(chartInstance.boxes, function(box) {\n\t\t\t\treturn box.options.position === 'top';\n\t\t\t});\n\t\t\tvar bottomBoxes = helpers.where(chartInstance.boxes, function(box) {\n\t\t\t\treturn box.options.position === 'bottom';\n\t\t\t});\n\n\t\t\t// Boxes that overlay the chartarea such as the radialLinear scale\n\t\t\tvar chartAreaBoxes = helpers.where(chartInstance.boxes, function(box) {\n\t\t\t\treturn box.options.position === 'chartArea';\n\t\t\t});\n\n\t\t\t// Ensure that full width boxes are at the very top / bottom\n\t\t\ttopBoxes.sort(function(a, b) {\n\t\t\t\treturn (b.options.fullWidth ? 1 : 0) - (a.options.fullWidth ? 1 : 0);\n\t\t\t});\n\t\t\tbottomBoxes.sort(function(a, b) {\n\t\t\t\treturn (a.options.fullWidth ? 1 : 0) - (b.options.fullWidth ? 1 : 0);\n\t\t\t});\n\n\t\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t\t// Our canvas looks like the following.\n\t\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t\t// B1 is the bottom axis\n\t\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t\t// an error will be thrown.\n\t\t\t//\n\t\t\t// |----------------------------------------------------|\n\t\t\t// |                  T1 (Full Width)                   |\n\t\t\t// |----------------------------------------------------|\n\t\t\t// |    |    |                 T2                  |    |\n\t\t\t// |    |----|-------------------------------------|----|\n\t\t\t// |    |    | C1 |                           | C2 |    |\n\t\t\t// |    |    |----|                           |----|    |\n\t\t\t// |    |    |                                     |    |\n\t\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t\t// |    |    |                                     |    |\n\t\t\t// |    |    |----|                           |----|    |\n\t\t\t// |    |    | C3 |                           | C4 |    |\n\t\t\t// |    |----|-------------------------------------|----|\n\t\t\t// |    |    |                 B1                  |    |\n\t\t\t// |----------------------------------------------------|\n\t\t\t// |                  B2 (Full Width)                   |\n\t\t\t// |----------------------------------------------------|\n\t\t\t//\n\t\t\t// What we do to find the best sizing, we do the following\n\t\t\t// 1. Determine the minimum size of the chart area.\n\t\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t\t// 6. Refit each axis\n\t\t\t// 7. Position each axis in the final location\n\t\t\t// 8. Tell the chart the final location of the chart area\n\t\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\n\t\t\t// Step 1\n\t\t\tvar chartWidth = width - leftPadding - rightPadding;\n\t\t\tvar chartHeight = height - topPadding - bottomPadding;\n\t\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\t\t\tvar chartAreaHeight = chartHeight / 2; // min 50%\n\n\t\t\t// Step 2\n\t\t\tvar verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\n\n\t\t\t// Step 3\n\t\t\tvar horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\n\n\t\t\t// Step 4\n\t\t\tvar maxChartAreaWidth = chartWidth;\n\t\t\tvar maxChartAreaHeight = chartHeight;\n\t\t\tvar minBoxSizes = [];\n\n\t\t\tfunction getMinimumBoxSize(box) {\n\t\t\t\tvar minSize;\n\t\t\t\tvar isHorizontal = box.isHorizontal();\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tminSize = box.update(box.options.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n\t\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t\t} else {\n\t\t\t\t\tminSize = box.update(verticalBoxWidth, chartAreaHeight);\n\t\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t\t}\n\n\t\t\t\tminBoxSizes.push({\n\t\t\t\t\thorizontal: isHorizontal,\n\t\t\t\t\tminSize: minSize,\n\t\t\t\t\tbox: box,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thelpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\n\n\t\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\t\t\tvar maxHorizontalLeftPadding = 0;\n\t\t\tvar maxHorizontalRightPadding = 0;\n\t\t\tvar maxVerticalTopPadding = 0;\n\t\t\tvar maxVerticalBottomPadding = 0;\n\n\t\t\thelpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {\n\t\t\t\tif (horizontalBox.getPadding) {\n\t\t\t\t\tvar boxPadding = horizontalBox.getPadding();\n\t\t\t\t\tmaxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n\t\t\t\t\tmaxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {\n\t\t\t\tif (verticalBox.getPadding) {\n\t\t\t\t\tvar boxPadding = verticalBox.getPadding();\n\t\t\t\t\tmaxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n\t\t\t\t\tmaxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t\t// be if the axes are drawn at their minimum sizes.\n\t\t\t// Steps 5 & 6\n\t\t\tvar totalLeftBoxesWidth = leftPadding;\n\t\t\tvar totalRightBoxesWidth = rightPadding;\n\t\t\tvar totalTopBoxesHeight = topPadding;\n\t\t\tvar totalBottomBoxesHeight = bottomPadding;\n\n\t\t\t// Function to fit a box\n\t\t\tfunction fitBox(box) {\n\t\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\t\treturn minBox.box === box;\n\t\t\t\t});\n\n\t\t\t\tif (minBoxSize) {\n\t\t\t\t\tif (box.isHorizontal()) {\n\t\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\t\tleft: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n\t\t\t\t\t\t\tright: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\t\tbox.update(box.options.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\t\thelpers.each(leftBoxes.concat(rightBoxes), fitBox);\n\n\t\t\thelpers.each(leftBoxes, function(box) {\n\t\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t\t});\n\n\t\t\thelpers.each(rightBoxes, function(box) {\n\t\t\t\ttotalRightBoxesWidth += box.width;\n\t\t\t});\n\n\t\t\t// Set the Left and Right margins for the horizontal boxes\n\t\t\thelpers.each(topBoxes.concat(bottomBoxes), fitBox);\n\n\t\t\t// Figure out how much margin is on the top and bottom of the vertical boxes\n\t\t\thelpers.each(topBoxes, function(box) {\n\t\t\t\ttotalTopBoxesHeight += box.height;\n\t\t\t});\n\n\t\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t\t});\n\n\t\t\tfunction finalFitVerticalBox(box) {\n\t\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\t\treturn minSize.box === box;\n\t\t\t\t});\n\n\t\t\t\tvar scaleMargin = {\n\t\t\t\t\tleft: 0,\n\t\t\t\t\tright: 0,\n\t\t\t\t\ttop: totalTopBoxesHeight,\n\t\t\t\t\tbottom: totalBottomBoxesHeight\n\t\t\t\t};\n\n\t\t\t\tif (minBoxSize) {\n\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Let the left layout know the final margin\n\t\t\thelpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\n\n\t\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\t\ttotalLeftBoxesWidth = leftPadding;\n\t\t\ttotalRightBoxesWidth = rightPadding;\n\t\t\ttotalTopBoxesHeight = topPadding;\n\t\t\ttotalBottomBoxesHeight = bottomPadding;\n\n\t\t\thelpers.each(leftBoxes, function(box) {\n\t\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t\t});\n\n\t\t\thelpers.each(rightBoxes, function(box) {\n\t\t\t\ttotalRightBoxesWidth += box.width;\n\t\t\t});\n\n\t\t\thelpers.each(topBoxes, function(box) {\n\t\t\t\ttotalTopBoxesHeight += box.height;\n\t\t\t});\n\t\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t\t});\n\n\t\t\t// We may be adding some padding to account for rotated x axis labels\n\t\t\tvar leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n\t\t\ttotalLeftBoxesWidth += leftPaddingAddition;\n\t\t\ttotalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n\n\t\t\tvar topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n\t\t\ttotalTopBoxesHeight += topPaddingAddition;\n\t\t\ttotalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\n\n\t\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t\t// without calling `fit` again\n\t\t\tvar newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n\t\t\tvar newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n\t\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\t\thelpers.each(leftBoxes, function(box) {\n\t\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t\t});\n\n\t\t\t\thelpers.each(rightBoxes, function(box) {\n\t\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t\t});\n\n\t\t\t\thelpers.each(topBoxes, function(box) {\n\t\t\t\t\tif (!box.options.fullWidth) {\n\t\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\t\t\tif (!box.options.fullWidth) {\n\t\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t\t}\n\n\t\t\t// Step 7 - Position the boxes\n\t\t\tvar left = leftPadding + leftPaddingAddition;\n\t\t\tvar top = topPadding + topPaddingAddition;\n\n\t\t\tfunction placeBox(box) {\n\t\t\t\tif (box.isHorizontal()) {\n\t\t\t\t\tbox.left = box.options.fullWidth ? leftPadding : totalLeftBoxesWidth;\n\t\t\t\t\tbox.right = box.options.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n\t\t\t\t\tbox.top = top;\n\t\t\t\t\tbox.bottom = top + box.height;\n\n\t\t\t\t\t// Move to next point\n\t\t\t\t\ttop = box.bottom;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbox.left = left;\n\t\t\t\t\tbox.right = left + box.width;\n\t\t\t\t\tbox.top = totalTopBoxesHeight;\n\t\t\t\t\tbox.bottom = totalTopBoxesHeight + maxChartAreaHeight;\n\n\t\t\t\t\t// Move to next point\n\t\t\t\t\tleft = box.right;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thelpers.each(leftBoxes.concat(topBoxes), placeBox);\n\n\t\t\t// Account for chart width and height\n\t\t\tleft += maxChartAreaWidth;\n\t\t\ttop += maxChartAreaHeight;\n\n\t\t\thelpers.each(rightBoxes, placeBox);\n\t\t\thelpers.each(bottomBoxes, placeBox);\n\n\t\t\t// Step 8\n\t\t\tchartInstance.chartArea = {\n\t\t\t\tleft: totalLeftBoxesWidth,\n\t\t\t\ttop: totalTopBoxesHeight,\n\t\t\t\tright: totalLeftBoxesWidth + maxChartAreaWidth,\n\t\t\t\tbottom: totalTopBoxesHeight + maxChartAreaHeight\n\t\t\t};\n\n\t\t\t// Step 9\n\t\t\thelpers.each(chartAreaBoxes, function(box) {\n\t\t\t\tbox.left = chartInstance.chartArea.left;\n\t\t\t\tbox.top = chartInstance.chartArea.top;\n\t\t\t\tbox.right = chartInstance.chartArea.right;\n\t\t\t\tbox.bottom = chartInstance.chartArea.bottom;\n\n\t\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t\t});\n\t\t}\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.layoutService.js\n// module id = 230\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\tvar noop = helpers.noop;\n\n\tChart.defaults.global.legend = {\n\n\t\tdisplay: true,\n\t\tposition: 'top',\n\t\tfullWidth: true, // marks that this box should take the full width of the canvas (pushing down other boxes)\n\t\treverse: false,\n\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null? !ci.data.datasets[index].hidden : null;\n\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\n\t\tonHover: null,\n\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Helper function to get the box width based on the usePointStyle option\n\t * @param labelopts {Object} the label options on the legend\n\t * @param fontSize {Number} the label font size\n\t * @return {Number} width of the color box area\n\t */\n\tfunction getBoxWidth(labelOpts, fontSize) {\n\t\treturn labelOpts.usePointStyle ?\n\t\t\tfontSize * Math.SQRT2 :\n\t\t\tlabelOpts.boxWidth;\n\t}\n\n\tChart.Legend = Chart.Element.extend({\n\n\t\tinitialize: function(config) {\n\t\t\thelpers.extend(this, config);\n\n\t\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\t\tthis.legendHitBoxes = [];\n\n\t\t\t// Are we in doughnut mode which has a different data type\n\t\t\tthis.doughnutMode = false;\n\t\t},\n\n\t\t// These methods are ordered by lifecycle. Utilities then follow.\n\t\t// Any function defined here is inherited by all legend types.\n\t\t// Any function can be extended by the legend type\n\n\t\tbeforeUpdate: noop,\n\t\tupdate: function(maxWidth, maxHeight, margins) {\n\t\t\tvar me = this;\n\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\t\tme.beforeUpdate();\n\n\t\t\t// Absorb the master measurements\n\t\t\tme.maxWidth = maxWidth;\n\t\t\tme.maxHeight = maxHeight;\n\t\t\tme.margins = margins;\n\n\t\t\t// Dimensions\n\t\t\tme.beforeSetDimensions();\n\t\t\tme.setDimensions();\n\t\t\tme.afterSetDimensions();\n\t\t\t// Labels\n\t\t\tme.beforeBuildLabels();\n\t\t\tme.buildLabels();\n\t\t\tme.afterBuildLabels();\n\n\t\t\t// Fit\n\t\t\tme.beforeFit();\n\t\t\tme.fit();\n\t\t\tme.afterFit();\n\t\t\t//\n\t\t\tme.afterUpdate();\n\n\t\t\treturn me.minSize;\n\t\t},\n\t\tafterUpdate: noop,\n\n\t\t//\n\n\t\tbeforeSetDimensions: noop,\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.width = me.maxWidth;\n\t\t\t\tme.left = 0;\n\t\t\t\tme.right = me.width;\n\t\t\t} else {\n\t\t\t\tme.height = me.maxHeight;\n\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.top = 0;\n\t\t\t\tme.bottom = me.height;\n\t\t\t}\n\n\t\t\t// Reset padding\n\t\t\tme.paddingLeft = 0;\n\t\t\tme.paddingTop = 0;\n\t\t\tme.paddingRight = 0;\n\t\t\tme.paddingBottom = 0;\n\n\t\t\t// Reset minSize\n\t\t\tme.minSize = {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0\n\t\t\t};\n\t\t},\n\t\tafterSetDimensions: noop,\n\n\t\t//\n\n\t\tbeforeBuildLabels: noop,\n\t\tbuildLabels: function() {\n\t\t\tvar me = this;\n\t\t\tvar labelOpts = me.options.labels;\n\t\t\tvar legendItems = labelOpts.generateLabels.call(me, me.chart);\n\n\t\t\tif (labelOpts.filter) {\n\t\t\t\tlegendItems = legendItems.filter(function(item) {\n\t\t\t\t\treturn labelOpts.filter(item, me.chart.data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (me.options.reverse) {\n\t\t\t\tlegendItems.reverse();\n\t\t\t}\n\n\t\t\tme.legendItems = legendItems;\n\t\t},\n\t\tafterBuildLabels: noop,\n\n\t\t//\n\n\t\tbeforeFit: noop,\n\t\tfit: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar labelOpts = opts.labels;\n\t\t\tvar display = opts.display;\n\n\t\t\tvar ctx = me.ctx;\n\n\t\t\tvar globalDefault = Chart.defaults.global,\n\t\t\t\titemOrDefault = helpers.getValueOrDefault,\n\t\t\t\tfontSize = itemOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize),\n\t\t\t\tfontStyle = itemOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle),\n\t\t\t\tfontFamily = itemOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily),\n\t\t\t\tlabelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\t\t// Reset hit boxes\n\t\t\tvar hitboxes = me.legendHitBoxes = [];\n\n\t\t\tvar minSize = me.minSize;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\t\tminSize.height = display ? 10 : 0;\n\t\t\t} else {\n\t\t\t\tminSize.width = display ? 10 : 0;\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t\t}\n\n\t\t\t// Increase sizes here\n\t\t\tif (display) {\n\t\t\t\tctx.font = labelFont;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t// Labels\n\n\t\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\t\tvar totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\n\n\t\t\t\t\tctx.textAlign = 'left';\n\t\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t\tif (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n\t\t\t\t\t\t\ttotalHeight += fontSize + (labelOpts.padding);\n\t\t\t\t\t\t\tlineWidths[lineWidths.length] = me.left;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t\t});\n\n\t\t\t\t\tminSize.height += totalHeight;\n\n\t\t\t\t} else {\n\t\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\t\tvar currentColWidth = 0;\n\t\t\t\t\tvar currentColHeight = 0;\n\t\t\t\t\tvar itemHeight = fontSize + vPadding;\n\n\t\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\t\tif (currentColHeight + itemHeight > minSize.height) {\n\t\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\n\t\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Get max width\n\t\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\t\tcurrentColHeight += itemHeight;\n\n\t\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\n\t\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\t\tminSize.width += totalWidth;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.width = minSize.width;\n\t\t\tme.height = minSize.height;\n\t\t},\n\t\tafterFit: noop,\n\n\t\t// Shared Methods\n\t\tisHorizontal: function() {\n\t\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t\t},\n\n\t\t// Actually draw the legend on the canvas\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar labelOpts = opts.labels;\n\t\t\tvar globalDefault = Chart.defaults.global,\n\t\t\t\tlineDefault = globalDefault.elements.line,\n\t\t\t\tlegendWidth = me.width,\n\t\t\t\tlineWidths = me.lineWidths;\n\n\t\t\tif (opts.display) {\n\t\t\t\tvar ctx = me.ctx,\n\t\t\t\t\tcursor,\n\t\t\t\t\titemOrDefault = helpers.getValueOrDefault,\n\t\t\t\t\tfontColor = itemOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor),\n\t\t\t\t\tfontSize = itemOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize),\n\t\t\t\t\tfontStyle = itemOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle),\n\t\t\t\t\tfontFamily = itemOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily),\n\t\t\t\t\tlabelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\t\t\t// Canvas setup\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\t\t\t\tctx.lineWidth = 0.5;\n\t\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\t\tctx.font = labelFont;\n\n\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize),\n\t\t\t\t\thitboxes = me.legendHitBoxes;\n\n\t\t\t\t// current position\n\t\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Set the ctx for the box\n\t\t\t\t\tctx.save();\n\n\t\t\t\t\tctx.fillStyle = itemOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n\t\t\t\t\tctx.lineCap = itemOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\t\tctx.lineDashOffset = itemOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\t\tctx.lineJoin = itemOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\t\tctx.lineWidth = itemOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\t\tctx.strokeStyle = itemOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n\t\t\t\t\tvar isLineWidthZero = (itemOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\n\n\t\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\t\tctx.setLineDash(itemOrDefault(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t\t}\n\n\t\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\t\tvar radius = fontSize * Math.SQRT2 / 2;\n\t\t\t\t\t\tvar offSet = radius / Math.SQRT2;\n\t\t\t\t\t\tvar centerX = x + offSet;\n\t\t\t\t\t\tvar centerY = y + offSet;\n\n\t\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\t\tChart.canvasHelpers.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\t\tif (!isLineWidthZero) {\n\t\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\n\t\t\t\t\tctx.restore();\n\t\t\t\t};\n\t\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\t\tctx.fillText(legendItem.text, boxWidth + (fontSize / 2) + x, y);\n\n\t\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\t\tctx.moveTo(boxWidth + (fontSize / 2) + x, y + (fontSize / 2));\n\t\t\t\t\t\tctx.lineTo(boxWidth + (fontSize / 2) + x + textWidth, y + (fontSize / 2));\n\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Horizontal\n\t\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor = {\n\t\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2),\n\t\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\t\tline: 0\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tcursor = {\n\t\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\t\tline: 0\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width,\n\t\t\t\t\t\twidth = boxWidth + (fontSize / 2) + textWidth,\n\t\t\t\t\t\tx = cursor.x,\n\t\t\t\t\t\ty = cursor.y;\n\n\t\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t\tif (x + width >= legendWidth) {\n\t\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (y + itemHeight > me.bottom) {\n\t\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t}\n\n\t\t\t\t\tdrawLegendBox(x, y, legendItem);\n\n\t\t\t\t\thitboxes[i].left = x;\n\t\t\t\t\thitboxes[i].top = y;\n\n\t\t\t\t\t// Fill the actual label\n\t\t\t\t\tfillText(x, y, legendItem, textWidth);\n\n\t\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t\tcursor.x += width + (labelOpts.padding);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t\t}\n\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event - The event to handle\n\t\t * @return {Boolean} true if a change occured\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\t\tvar changed = false;\n\n\t\t\tif (type === 'mousemove') {\n\t\t\t\tif (!opts.onHover) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else if (type === 'click') {\n\t\t\t\tif (!opts.onClick) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Chart event already has relative position in it\n\t\t\tvar x = e.x,\n\t\t\t\ty = e.y;\n\n\t\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t\t// See if we are touching one of the dataset boxes\n\t\t\t\tvar lh = me.legendHitBoxes;\n\t\t\t\tfor (var i = 0; i < lh.length; ++i) {\n\t\t\t\t\tvar hitBox = lh[i];\n\n\t\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t\t// Touching an element\n\t\t\t\t\t\tif (type === 'click') {\n\t\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\t\topts.onClick.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else if (type === 'mousemove') {\n\t\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\t\topts.onHover.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\tfunction createNewLegendAndAttach(chartInstance, legendOpts) {\n\t\tvar legend = new Chart.Legend({\n\t\t\tctx: chartInstance.chart.ctx,\n\t\t\toptions: legendOpts,\n\t\t\tchart: chartInstance\n\t\t});\n\t\tchartInstance.legend = legend;\n\t\tChart.layoutService.addBox(chartInstance, legend);\n\t}\n\n\t// Register the legend plugin\n\tChart.plugins.register({\n\t\tbeforeInit: function(chartInstance) {\n\t\t\tvar legendOpts = chartInstance.options.legend;\n\n\t\t\tif (legendOpts) {\n\t\t\t\tcreateNewLegendAndAttach(chartInstance, legendOpts);\n\t\t\t}\n\t\t},\n\t\tbeforeUpdate: function(chartInstance) {\n\t\t\tvar legendOpts = chartInstance.options.legend;\n\n\t\t\tif (legendOpts) {\n\t\t\t\tlegendOpts = helpers.configMerge(Chart.defaults.global.legend, legendOpts);\n\n\t\t\t\tif (chartInstance.legend) {\n\t\t\t\t\tchartInstance.legend.options = legendOpts;\n\t\t\t\t} else {\n\t\t\t\t\tcreateNewLegendAndAttach(chartInstance, legendOpts);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tChart.layoutService.removeBox(chartInstance, chartInstance.legend);\n\t\t\t\tdelete chartInstance.legend;\n\t\t\t}\n\t\t},\n\t\tafterEvent: function(chartInstance, e) {\n\t\t\tvar legend = chartInstance.legend;\n\t\t\tif (legend) {\n\t\t\t\tlegend.handleEvent(e);\n\t\t\t}\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.legend.js\n// module id = 231\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.global.plugins = {};\n\n\t/**\n\t * The plugin service singleton\n\t * @namespace Chart.plugins\n\t * @since 2.1.0\n\t */\n\tChart.plugins = {\n\t\t/**\n\t\t * Globally registered plugins.\n\t\t * @private\n\t\t */\n\t\t_plugins: [],\n\n\t\t/**\n\t\t * This identifier is used to invalidate the descriptors cache attached to each chart\n\t\t * when a global plugin is registered or unregistered. In this case, the cache ID is\n\t\t * incremented and descriptors are regenerated during following API calls.\n\t\t * @private\n\t\t */\n\t\t_cacheId: 0,\n\n\t\t/**\n\t\t * Registers the given plugin(s) if not already registered.\n\t\t * @param {Array|Object} plugins plugin instance(s).\n\t\t */\n\t\tregister: function(plugins) {\n\t\t\tvar p = this._plugins;\n\t\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\t\tp.push(plugin);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._cacheId++;\n\t\t},\n\n\t\t/**\n\t\t * Unregisters the given plugin(s) only if registered.\n\t\t * @param {Array|Object} plugins plugin instance(s).\n\t\t */\n\t\tunregister: function(plugins) {\n\t\t\tvar p = this._plugins;\n\t\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\t\tvar idx = p.indexOf(plugin);\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\tp.splice(idx, 1);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._cacheId++;\n\t\t},\n\n\t\t/**\n\t\t * Remove all registered plugins.\n\t\t * @since 2.1.5\n\t\t */\n\t\tclear: function() {\n\t\t\tthis._plugins = [];\n\t\t\tthis._cacheId++;\n\t\t},\n\n\t\t/**\n\t\t * Returns the number of registered plugins?\n\t\t * @returns {Number}\n\t\t * @since 2.1.5\n\t\t */\n\t\tcount: function() {\n\t\t\treturn this._plugins.length;\n\t\t},\n\n\t\t/**\n\t\t * Returns all registered plugin instances.\n\t\t * @returns {Array} array of plugin objects.\n\t\t * @since 2.1.5\n\t\t */\n\t\tgetAll: function() {\n\t\t\treturn this._plugins;\n\t\t},\n\n\t\t/**\n\t\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t\t * returned value can be used, for instance, to interrupt the current action.\n\t\t * @param {Object} chart - The chart instance for which plugins should be called.\n\t\t * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t\t * @param {Array} [args] - Extra arguments to apply to the hook call.\n\t\t * @returns {Boolean} false if any of the plugins return false, else returns true.\n\t\t */\n\t\tnotify: function(chart, hook, args) {\n\t\t\tvar descriptors = this.descriptors(chart);\n\t\t\tvar ilen = descriptors.length;\n\t\t\tvar i, descriptor, plugin, params, method;\n\n\t\t\tfor (i=0; i<ilen; ++i) {\n\t\t\t\tdescriptor = descriptors[i];\n\t\t\t\tplugin = descriptor.plugin;\n\t\t\t\tmethod = plugin[hook];\n\t\t\t\tif (typeof method === 'function') {\n\t\t\t\t\tparams = [chart].concat(args || []);\n\t\t\t\t\tparams.push(descriptor.options);\n\t\t\t\t\tif (method.apply(plugin, params) === false) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\t/**\n\t\t * Returns descriptors of enabled plugins for the given chart.\n\t\t * @returns {Array} [{ plugin, options }]\n\t\t * @private\n\t\t */\n\t\tdescriptors: function(chart) {\n\t\t\tvar cache = chart._plugins || (chart._plugins = {});\n\t\t\tif (cache.id === this._cacheId) {\n\t\t\t\treturn cache.descriptors;\n\t\t\t}\n\n\t\t\tvar plugins = [];\n\t\t\tvar descriptors = [];\n\t\t\tvar config = (chart && chart.config) || {};\n\t\t\tvar defaults = Chart.defaults.global.plugins;\n\t\t\tvar options = (config.options && config.options.plugins) || {};\n\n\t\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\n\t\t\t\tvar idx = plugins.indexOf(plugin);\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar id = plugin.id;\n\t\t\t\tvar opts = options[id];\n\t\t\t\tif (opts === false) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (opts === true) {\n\t\t\t\t\topts = helpers.clone(defaults[id]);\n\t\t\t\t}\n\n\t\t\t\tplugins.push(plugin);\n\t\t\t\tdescriptors.push({\n\t\t\t\t\tplugin: plugin,\n\t\t\t\t\toptions: opts || {}\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tcache.descriptors = descriptors;\n\t\t\tcache.id = this._cacheId;\n\t\t\treturn descriptors;\n\t\t}\n\t};\n\n\t/**\n\t * Plugin extension hooks.\n\t * @interface IPlugin\n\t * @since 2.1.0\n\t */\n\t/**\n\t * @method IPlugin#beforeInit\n\t * @desc Called before initializing `chart`.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Object} options - The plugin options.\n\t */\n\t/**\n\t * @method IPlugin#afterInit\n\t * @desc Called after `chart` has been initialized and before the first update.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Object} options - The plugin options.\n\t */\n\t/**\n\t * @method IPlugin#beforeUpdate\n\t * @desc Called before updating `chart`. If any plugin returns `false`, the update\n\t * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Object} options - The plugin options.\n\t * @returns {Boolean} `false` to cancel the chart update.\n\t */\n\t/**\n\t * @method IPlugin#afterUpdate\n\t * @desc Called after `chart` has been updated and before rendering. Note that this\n\t * hook will not be called if the chart update has been previously cancelled.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Object} options - The plugin options.\n\t */\n\t/**\n\t * @method IPlugin#beforeDatasetsUpdate\n \t * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n\t * the datasets update is cancelled until another `update` is triggered.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Object} options - The plugin options.\n\t * @returns {Boolean} false to cancel the datasets update.\n\t * @since version 2.1.5\n\t */\n\t/**\n\t * @method IPlugin#afterDatasetsUpdate\n\t * @desc Called after the `chart` datasets have been updated. Note that this hook\n\t * will not be called if the datasets update has been previously cancelled.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Object} options - The plugin options.\n\t * @since version 2.1.5\n\t */\n\t/**\n\t * @method IPlugin#beforeLayout\n\t * @desc Called before laying out `chart`. If any plugin returns `false`,\n\t * the layout update is cancelled until another `update` is triggered.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Object} options - The plugin options.\n\t * @returns {Boolean} `false` to cancel the chart layout.\n\t */\n\t/**\n\t * @method IPlugin#afterLayout\n\t * @desc Called after the `chart` has been layed out. Note that this hook will not\n\t * be called if the layout update has been previously cancelled.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Object} options - The plugin options.\n\t */\n\t/**\n\t * @method IPlugin#beforeRender\n\t * @desc Called before rendering `chart`. If any plugin returns `false`,\n\t * the rendering is cancelled until another `render` is triggered.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Object} options - The plugin options.\n\t * @returns {Boolean} `false` to cancel the chart rendering.\n\t */\n\t/**\n\t * @method IPlugin#afterRender\n\t * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n\t * that this hook will not be called if the rendering has been previously cancelled.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Object} options - The plugin options.\n\t */\n\t/**\n\t * @method IPlugin#beforeDraw\n\t * @desc Called before drawing `chart` at every animation frame specified by the given\n\t * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n\t * another `render` is triggered.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n\t * @param {Object} options - The plugin options.\n\t * @returns {Boolean} `false` to cancel the chart drawing.\n\t */\n\t/**\n\t * @method IPlugin#afterDraw\n\t * @desc Called after the `chart` has been drawn for the specific easing value. Note\n\t * that this hook will not be called if the drawing has been previously cancelled.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n\t * @param {Object} options - The plugin options.\n\t */\n\t/**\n\t * @method IPlugin#beforeDatasetsDraw\n \t * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n\t * the datasets drawing is cancelled until another `render` is triggered.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n\t * @param {Object} options - The plugin options.\n\t * @returns {Boolean} `false` to cancel the chart datasets drawing.\n\t */\n\t/**\n\t * @method IPlugin#afterDatasetsDraw\n\t * @desc Called after the `chart` datasets have been drawn. Note that this hook\n\t * will not be called if the datasets drawing has been previously cancelled.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n\t * @param {Object} options - The plugin options.\n\t */\n\t/**\n\t * @method IPlugin#beforeEvent\n \t * @desc Called before processing the specified `event`. If any plugin returns `false`,\n\t * the event will be discarded.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {IEvent} event - The event object.\n\t * @param {Object} options - The plugin options.\n\t */\n\t/**\n\t * @method IPlugin#afterEvent\n\t * @desc Called after the `event` has been consumed. Note that this hook\n\t * will not be called if the `event` has been previously discarded.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {IEvent} event - The event object.\n\t * @param {Object} options - The plugin options.\n\t */\n\t/**\n\t * @method IPlugin#resize\n\t * @desc Called after the chart as been resized.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n\t * @param {Object} options - The plugin options.\n\t */\n\t/**\n\t * @method IPlugin#destroy\n\t * @desc Called after the chart as been destroyed.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Object} options - The plugin options.\n\t */\n\n\t/**\n\t * Provided for backward compatibility, use Chart.plugins instead\n\t * @namespace Chart.pluginService\n\t * @deprecated since version 2.1.5\n\t * @todo remove at version 3\n\t * @private\n\t */\n\tChart.pluginService = Chart.plugins;\n\n\t/**\n\t * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n\t * effect, instead simply create/register plugins via plain JavaScript objects.\n\t * @interface Chart.PluginBase\n\t * @deprecated since version 2.5.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\tChart.PluginBase = helpers.inherits({});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.plugin.js\n// module id = 232\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.scale = {\n\t\tdisplay: true,\n\t\tposition: 'left',\n\n\t\t// grid line settings\n\t\tgridLines: {\n\t\t\tdisplay: true,\n\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\t\tlineWidth: 1,\n\t\t\tdrawBorder: true,\n\t\t\tdrawOnChartArea: true,\n\t\t\tdrawTicks: true,\n\t\t\ttickMarkLength: 10,\n\t\t\tzeroLineWidth: 1,\n\t\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\t\toffsetGridLines: false,\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0\n\t\t},\n\n\t\t// scale label\n\t\tscaleLabel: {\n\t\t\t// actual label\n\t\t\tlabelString: '',\n\n\t\t\t// display property\n\t\t\tdisplay: false\n\t\t},\n\n\t\t// label settings\n\t\tticks: {\n\t\t\tbeginAtZero: false,\n\t\t\tminRotation: 0,\n\t\t\tmaxRotation: 50,\n\t\t\tmirror: false,\n\t\t\tpadding: 0,\n\t\t\treverse: false,\n\t\t\tdisplay: true,\n\t\t\tautoSkip: true,\n\t\t\tautoSkipPadding: 0,\n\t\t\tlabelOffset: 0,\n\t\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\t\tcallback: Chart.Ticks.formatters.values\n\t\t}\n\t};\n\n\tfunction computeTextSize(context, tick, font) {\n\t\treturn helpers.isArray(tick) ?\n\t\t\thelpers.longestText(context, font, tick) :\n\t\t\tcontext.measureText(tick).width;\n\t}\n\n\tfunction parseFontOptions(options) {\n\t\tvar getValueOrDefault = helpers.getValueOrDefault;\n\t\tvar globalDefaults = Chart.defaults.global;\n\t\tvar size = getValueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n\t\tvar style = getValueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar family = getValueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n\n\t\treturn {\n\t\t\tsize: size,\n\t\t\tstyle: style,\n\t\t\tfamily: family,\n\t\t\tfont: helpers.fontString(size, style, family)\n\t\t};\n\t}\n\n\tChart.Scale = Chart.Element.extend({\n\t\t/**\n\t\t * Get the padding needed for the scale\n\t\t * @method getPadding\n\t\t * @private\n\t\t * @returns {Padding} the necessary padding\n\t\t */\n\t\tgetPadding: function() {\n\t\t\tvar me = this;\n\t\t\treturn {\n\t\t\t\tleft: me.paddingLeft || 0,\n\t\t\t\ttop: me.paddingTop || 0,\n\t\t\t\tright: me.paddingRight || 0,\n\t\t\t\tbottom: me.paddingBottom || 0\n\t\t\t};\n\t\t},\n\n\t\t// These methods are ordered by lifecyle. Utilities then follow.\n\t\t// Any function defined here is inherited by all scale types.\n\t\t// Any function can be extended by the scale type\n\n\t\tbeforeUpdate: function() {\n\t\t\thelpers.callCallback(this.options.beforeUpdate, [this]);\n\t\t},\n\t\tupdate: function(maxWidth, maxHeight, margins) {\n\t\t\tvar me = this;\n\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\t\tme.beforeUpdate();\n\n\t\t\t// Absorb the master measurements\n\t\t\tme.maxWidth = maxWidth;\n\t\t\tme.maxHeight = maxHeight;\n\t\t\tme.margins = helpers.extend({\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tbottom: 0\n\t\t\t}, margins);\n\t\t\tme.longestTextCache = me.longestTextCache || {};\n\n\t\t\t// Dimensions\n\t\t\tme.beforeSetDimensions();\n\t\t\tme.setDimensions();\n\t\t\tme.afterSetDimensions();\n\n\t\t\t// Data min/max\n\t\t\tme.beforeDataLimits();\n\t\t\tme.determineDataLimits();\n\t\t\tme.afterDataLimits();\n\n\t\t\t// Ticks\n\t\t\tme.beforeBuildTicks();\n\t\t\tme.buildTicks();\n\t\t\tme.afterBuildTicks();\n\n\t\t\tme.beforeTickToLabelConversion();\n\t\t\tme.convertTicksToLabels();\n\t\t\tme.afterTickToLabelConversion();\n\n\t\t\t// Tick Rotation\n\t\t\tme.beforeCalculateTickRotation();\n\t\t\tme.calculateTickRotation();\n\t\t\tme.afterCalculateTickRotation();\n\t\t\t// Fit\n\t\t\tme.beforeFit();\n\t\t\tme.fit();\n\t\t\tme.afterFit();\n\t\t\t//\n\t\t\tme.afterUpdate();\n\n\t\t\treturn me.minSize;\n\n\t\t},\n\t\tafterUpdate: function() {\n\t\t\thelpers.callCallback(this.options.afterUpdate, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeSetDimensions: function() {\n\t\t\thelpers.callCallback(this.options.beforeSetDimensions, [this]);\n\t\t},\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.width = me.maxWidth;\n\t\t\t\tme.left = 0;\n\t\t\t\tme.right = me.width;\n\t\t\t} else {\n\t\t\t\tme.height = me.maxHeight;\n\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.top = 0;\n\t\t\t\tme.bottom = me.height;\n\t\t\t}\n\n\t\t\t// Reset padding\n\t\t\tme.paddingLeft = 0;\n\t\t\tme.paddingTop = 0;\n\t\t\tme.paddingRight = 0;\n\t\t\tme.paddingBottom = 0;\n\t\t},\n\t\tafterSetDimensions: function() {\n\t\t\thelpers.callCallback(this.options.afterSetDimensions, [this]);\n\t\t},\n\n\t\t// Data limits\n\t\tbeforeDataLimits: function() {\n\t\t\thelpers.callCallback(this.options.beforeDataLimits, [this]);\n\t\t},\n\t\tdetermineDataLimits: helpers.noop,\n\t\tafterDataLimits: function() {\n\t\t\thelpers.callCallback(this.options.afterDataLimits, [this]);\n\t\t},\n\n\t\t//\n\t\tbeforeBuildTicks: function() {\n\t\t\thelpers.callCallback(this.options.beforeBuildTicks, [this]);\n\t\t},\n\t\tbuildTicks: helpers.noop,\n\t\tafterBuildTicks: function() {\n\t\t\thelpers.callCallback(this.options.afterBuildTicks, [this]);\n\t\t},\n\n\t\tbeforeTickToLabelConversion: function() {\n\t\t\thelpers.callCallback(this.options.beforeTickToLabelConversion, [this]);\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\t// Convert ticks to strings\n\t\t\tvar tickOpts = me.options.ticks;\n\t\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback);\n\t\t},\n\t\tafterTickToLabelConversion: function() {\n\t\t\thelpers.callCallback(this.options.afterTickToLabelConversion, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeCalculateTickRotation: function() {\n\t\t\thelpers.callCallback(this.options.beforeCalculateTickRotation, [this]);\n\t\t},\n\t\tcalculateTickRotation: function() {\n\t\t\tvar me = this;\n\t\t\tvar context = me.ctx;\n\t\t\tvar tickOpts = me.options.ticks;\n\n\t\t\t// Get the width of each grid by calculating the difference\n\t\t\t// between x offsets between 0 and 1.\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\t\tcontext.font = tickFont.font;\n\n\t\t\tvar labelRotation = tickOpts.minRotation || 0;\n\n\t\t\tif (me.options.display && me.isHorizontal()) {\n\t\t\t\tvar originalLabelWidth = helpers.longestText(context, tickFont.font, me.ticks, me.longestTextCache);\n\t\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\t\tvar cosRotation;\n\t\t\t\tvar sinRotation;\n\n\t\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n\t\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n\t\t\t\t\tvar angleRadians = helpers.toRadians(labelRotation);\n\t\t\t\t\tcosRotation = Math.cos(angleRadians);\n\t\t\t\t\tsinRotation = Math.sin(angleRadians);\n\n\t\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t\t// go back one step\n\t\t\t\t\t\tlabelRotation--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tlabelRotation++;\n\t\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.labelRotation = labelRotation;\n\t\t},\n\t\tafterCalculateTickRotation: function() {\n\t\t\thelpers.callCallback(this.options.afterCalculateTickRotation, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeFit: function() {\n\t\t\thelpers.callCallback(this.options.beforeFit, [this]);\n\t\t},\n\t\tfit: function() {\n\t\t\tvar me = this;\n\t\t\t// Reset\n\t\t\tvar minSize = me.minSize = {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0\n\t\t\t};\n\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar display = opts.display;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\t\tvar scaleLabelFontSize = parseFontOptions(scaleLabelOpts).size * 1.5;\n\t\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\n\t\t\t// Width\n\t\t\tif (isHorizontal) {\n\t\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t\t} else {\n\t\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t}\n\n\t\t\t// height\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t} else {\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t\t}\n\n\t\t\t// Are we showing a title for the scale?\n\t\t\tif (scaleLabelOpts.display && display) {\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tminSize.height += scaleLabelFontSize;\n\t\t\t\t} else {\n\t\t\t\t\tminSize.width += scaleLabelFontSize;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Don't bother fitting the ticks if we are not showing them\n\t\t\tif (tickOpts.display && display) {\n\t\t\t\tvar largestTextWidth = helpers.longestText(me.ctx, tickFont.font, me.ticks, me.longestTextCache);\n\t\t\t\tvar tallestLabelHeightInLines = helpers.numberOfLabelLines(me.ticks);\n\t\t\t\tvar lineSpace = tickFont.size * 0.5;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t// A horizontal axis is more constrained by the height.\n\t\t\t\t\tme.longestLabelWidth = largestTextWidth;\n\n\t\t\t\t\tvar angleRadians = helpers.toRadians(me.labelRotation);\n\t\t\t\t\tvar cosRotation = Math.cos(angleRadians);\n\t\t\t\t\tvar sinRotation = Math.sin(angleRadians);\n\n\t\t\t\t\t// TODO - improve this calculation\n\t\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\n\t\t\t\t\t\t+ (tickFont.size * tallestLabelHeightInLines)\n\t\t\t\t\t\t+ (lineSpace * tallestLabelHeightInLines);\n\n\t\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight);\n\t\t\t\t\tme.ctx.font = tickFont.font;\n\n\t\t\t\t\tvar firstTick = me.ticks[0];\n\t\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, firstTick, tickFont.font);\n\n\t\t\t\t\tvar lastTick = me.ticks[me.ticks.length - 1];\n\t\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, lastTick, tickFont.font);\n\n\t\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned which means that the right padding is dominated\n\t\t\t\t\t// by the font height\n\t\t\t\t\tif (me.labelRotation !== 0) {\n\t\t\t\t\t\tme.paddingLeft = opts.position === 'bottom'? (cosRotation * firstLabelWidth) + 3: (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\t\tme.paddingRight = opts.position === 'bottom'? (cosRotation * lineSpace) + 3: (cosRotation * lastLabelWidth) + 3;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\t\tme.paddingRight = lastLabelWidth / 2 + 3;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// A vertical axis is more constrained by the width. Labels are the dominant factor here, so get that length first\n\t\t\t\t\t// Account for padding\n\n\t\t\t\t\tif (tickOpts.mirror) {\n\t\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlargestTextWidth += me.options.ticks.padding;\n\t\t\t\t\t}\n\t\t\t\t\tminSize.width += largestTextWidth;\n\t\t\t\t\tme.paddingTop = tickFont.size / 2;\n\t\t\t\t\tme.paddingBottom = tickFont.size / 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.handleMargins();\n\n\t\t\tme.width = minSize.width;\n\t\t\tme.height = minSize.height;\n\t\t},\n\n\t\t/**\n\t\t * Handle margins and padding interactions\n\t\t * @private\n\t\t */\n\t\thandleMargins: function() {\n\t\t\tvar me = this;\n\t\t\tif (me.margins) {\n\t\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t\t}\n\t\t},\n\n\t\tafterFit: function() {\n\t\t\thelpers.callCallback(this.options.afterFit, [this]);\n\t\t},\n\n\t\t// Shared Methods\n\t\tisHorizontal: function() {\n\t\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t\t},\n\t\tisFullWidth: function() {\n\t\t\treturn (this.options.fullWidth);\n\t\t},\n\n\t\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\t\tgetRightValue: function(rawValue) {\n\t\t\t// Null and undefined values first\n\t\t\tif (rawValue === null || typeof(rawValue) === 'undefined') {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\t\tif (typeof(rawValue) === 'number' && !isFinite(rawValue)) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// If it is in fact an object, dive in one more level\n\t\t\tif (typeof(rawValue) === 'object') {\n\t\t\t\tif ((rawValue instanceof Date) || (rawValue.isValid)) {\n\t\t\t\t\treturn rawValue;\n\t\t\t\t}\n\t\t\t\treturn this.getRightValue(this.isHorizontal() ? rawValue.x : rawValue.y);\n\t\t\t}\n\n\t\t\t// Value is good, return it\n\t\t\treturn rawValue;\n\t\t},\n\n\t\t// Used to get the value to display in the tooltip for the data at the given index\n\t\t// function getLabelForIndex(index, datasetIndex)\n\t\tgetLabelForIndex: helpers.noop,\n\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\n\t\tgetPixelForValue: helpers.noop,\n\n\t\t// Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t\tgetValueForPixel: helpers.noop,\n\n\t\t// Used for tick location, should\n\t\tgetPixelForTick: function(index, includeOffset) {\n\t\t\tvar me = this;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar tickWidth = innerWidth / Math.max((me.ticks.length - ((me.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\n\t\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\n\t\t\t\tif (includeOffset) {\n\t\t\t\t\tpixel += tickWidth / 2;\n\t\t\t\t}\n\n\t\t\t\tvar finalVal = me.left + Math.round(pixel);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\t\treturn me.top + (index * (innerHeight / (me.ticks.length - 1)));\n\t\t},\n\n\t\t// Utility for getting the pixel location of a percentage of scale\n\t\tgetPixelForDecimal: function(decimal /* , includeOffset*/) {\n\t\t\tvar me = this;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\t\tvar finalVal = me.left + Math.round(valueOffset);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\treturn me.top + (decimal * me.height);\n\t\t},\n\n\t\tgetBasePixel: function() {\n\t\t\treturn this.getPixelForValue(this.getBaseValue());\n\t\t},\n\n\t\tgetBaseValue: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.beginAtZero ? 0:\n\t\t\t\tmin < 0 && max < 0? max :\n\t\t\t\tmin > 0 && max > 0? min :\n\t\t\t\t0;\n\t\t},\n\n\t\t// Actually draw the scale on the canvas\n\t\t// @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n\t\tdraw: function(chartArea) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tif (!options.display) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar context = me.ctx;\n\t\t\tvar globalDefaults = Chart.defaults.global;\n\t\t\tvar optionTicks = options.ticks;\n\t\t\tvar gridLines = options.gridLines;\n\t\t\tvar scaleLabel = options.scaleLabel;\n\n\t\t\tvar isRotated = me.labelRotation !== 0;\n\t\t\tvar skipRatio;\n\t\t\tvar useAutoskipper = optionTicks.autoSkip;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\t// figure out the maximum number of gridlines to show\n\t\t\tvar maxTicks;\n\t\t\tif (optionTicks.maxTicksLimit) {\n\t\t\t\tmaxTicks = optionTicks.maxTicksLimit;\n\t\t\t}\n\n\t\t\tvar tickFontColor = helpers.getValueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar tickFont = parseFontOptions(optionTicks);\n\n\t\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n\t\t\tvar borderDash = helpers.getValueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n\t\t\tvar borderDashOffset = helpers.getValueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n\n\t\t\tvar scaleLabelFontColor = helpers.getValueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar scaleLabelFont = parseFontOptions(scaleLabel);\n\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\t\t\tvar cosRotation = Math.cos(labelRotationRadians);\n\t\t\tvar longestRotatedLabel = me.longestLabelWidth * cosRotation;\n\n\t\t\t// Make sure we draw text in the correct color and font\n\t\t\tcontext.fillStyle = tickFontColor;\n\n\t\t\tvar itemsToDraw = [];\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tskipRatio = false;\n\n\t\t\t\t// Only calculate the skip ratio with the half width of longestRotateLabel if we got an actual rotation\n\t\t\t\t// See #2584\n\t\t\t\tif (isRotated) {\n\t\t\t\t\tlongestRotatedLabel /= 2;\n\t\t\t\t}\n\n\t\t\t\tif ((longestRotatedLabel + optionTicks.autoSkipPadding) * me.ticks.length > (me.width - (me.paddingLeft + me.paddingRight))) {\n\t\t\t\t\tskipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * me.ticks.length) / (me.width - (me.paddingLeft + me.paddingRight)));\n\t\t\t\t}\n\n\t\t\t\t// if they defined a max number of optionTicks,\n\t\t\t\t// increase skipRatio until that number is met\n\t\t\t\tif (maxTicks && me.ticks.length > maxTicks) {\n\t\t\t\t\twhile (!skipRatio || me.ticks.length / (skipRatio || 1) > maxTicks) {\n\t\t\t\t\t\tif (!skipRatio) {\n\t\t\t\t\t\t\tskipRatio = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tskipRatio += 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!useAutoskipper) {\n\t\t\t\t\tskipRatio = false;\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tvar xTickStart = options.position === 'right' ? me.left : me.right - tl;\n\t\t\tvar xTickEnd = options.position === 'right' ? me.left + tl : me.right;\n\t\t\tvar yTickStart = options.position === 'bottom' ? me.top : me.bottom - tl;\n\t\t\tvar yTickEnd = options.position === 'bottom' ? me.top + tl : me.bottom;\n\n\t\t\thelpers.each(me.ticks, function(label, index) {\n\t\t\t\t// If the callback returned a null or undefined value, do not draw this line\n\t\t\t\tif (label === undefined || label === null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar isLastTick = me.ticks.length === index + 1;\n\n\t\t\t\t// Since we always show the last tick,we need may need to hide the last shown one before\n\t\t\t\tvar shouldSkip = (skipRatio > 1 && index % skipRatio > 0) || (index % skipRatio === 0 && index + skipRatio >= me.ticks.length);\n\t\t\t\tif (shouldSkip && !isLastTick || (label === undefined || label === null)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar lineWidth, lineColor;\n\t\t\t\tif (index === (typeof me.zeroLineIndex !== 'undefined' ? me.zeroLineIndex : 0)) {\n\t\t\t\t\t// Draw the first index specially\n\t\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\t} else {\n\t\t\t\t\tlineWidth = helpers.getValueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\t\tlineColor = helpers.getValueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\t}\n\n\t\t\t\t// Common properties\n\t\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n\t\t\t\tvar textAlign = 'middle';\n\t\t\t\tvar textBaseline = 'middle';\n\n\t\t\t\tif (isHorizontal) {\n\n\t\t\t\t\tif (options.position === 'bottom') {\n\t\t\t\t\t\t// bottom\n\t\t\t\t\t\ttextBaseline = !isRotated? 'top':'middle';\n\t\t\t\t\t\ttextAlign = !isRotated? 'center': 'right';\n\t\t\t\t\t\tlabelY = me.top + tl;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// top\n\t\t\t\t\t\ttextBaseline = !isRotated? 'bottom':'middle';\n\t\t\t\t\t\ttextAlign = !isRotated? 'center': 'left';\n\t\t\t\t\t\tlabelY = me.bottom - tl;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar xLineValue = me.getPixelForTick(index) + helpers.aliasPixel(lineWidth); // xvalues for grid lines\n\t\t\t\t\tlabelX = me.getPixelForTick(index, gridLines.offsetGridLines) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n\t\t\t\t\ttx1 = tx2 = x1 = x2 = xLineValue;\n\t\t\t\t\tty1 = yTickStart;\n\t\t\t\t\tty2 = yTickEnd;\n\t\t\t\t\ty1 = chartArea.top;\n\t\t\t\t\ty2 = chartArea.bottom;\n\t\t\t\t} else {\n\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\tvar tickPadding = optionTicks.padding;\n\t\t\t\t\tvar labelXOffset;\n\n\t\t\t\t\tif (optionTicks.mirror) {\n\t\t\t\t\t\ttextAlign = isLeft ? 'left' : 'right';\n\t\t\t\t\t\tlabelXOffset = tickPadding;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttextAlign = isLeft ? 'right' : 'left';\n\t\t\t\t\t\tlabelXOffset = tl + tickPadding;\n\t\t\t\t\t}\n\n\t\t\t\t\tlabelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n\n\t\t\t\t\tvar yLineValue = me.getPixelForTick(index); // xvalues for grid lines\n\t\t\t\t\tyLineValue += helpers.aliasPixel(lineWidth);\n\t\t\t\t\tlabelY = me.getPixelForTick(index, gridLines.offsetGridLines);\n\n\t\t\t\t\ttx1 = xTickStart;\n\t\t\t\t\ttx2 = xTickEnd;\n\t\t\t\t\tx1 = chartArea.left;\n\t\t\t\t\tx2 = chartArea.right;\n\t\t\t\t\tty1 = ty2 = y1 = y2 = yLineValue;\n\t\t\t\t}\n\n\t\t\t\titemsToDraw.push({\n\t\t\t\t\ttx1: tx1,\n\t\t\t\t\tty1: ty1,\n\t\t\t\t\ttx2: tx2,\n\t\t\t\t\tty2: ty2,\n\t\t\t\t\tx1: x1,\n\t\t\t\t\ty1: y1,\n\t\t\t\t\tx2: x2,\n\t\t\t\t\ty2: y2,\n\t\t\t\t\tlabelX: labelX,\n\t\t\t\t\tlabelY: labelY,\n\t\t\t\t\tglWidth: lineWidth,\n\t\t\t\t\tglColor: lineColor,\n\t\t\t\t\tglBorderDash: borderDash,\n\t\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\t\tlabel: label,\n\t\t\t\t\ttextBaseline: textBaseline,\n\t\t\t\t\ttextAlign: textAlign\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\t\thelpers.each(itemsToDraw, function(itemToDraw) {\n\t\t\t\tif (gridLines.display) {\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.lineWidth = itemToDraw.glWidth;\n\t\t\t\t\tcontext.strokeStyle = itemToDraw.glColor;\n\t\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.beginPath();\n\n\t\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.stroke();\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\n\t\t\t\tif (optionTicks.display) {\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\t\tcontext.font = tickFont.font;\n\t\t\t\t\tcontext.textBaseline = itemToDraw.textBaseline;\n\t\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\n\t\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\t\tif (helpers.isArray(label)) {\n\t\t\t\t\t\tfor (var i = 0, y = 0; i < label.length; ++i) {\n\t\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\t\t// apply same lineSpacing as calculated @ L#320\n\t\t\t\t\t\t\ty += (tickFont.size * 1.5);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.fillText(label, 0, 0);\n\t\t\t\t\t}\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (scaleLabel.display) {\n\t\t\t\t// Draw the scale label\n\t\t\t\tvar scaleLabelX;\n\t\t\t\tvar scaleLabelY;\n\t\t\t\tvar rotation = 0;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\t\tscaleLabelY = options.position === 'bottom' ? me.bottom - (scaleLabelFont.size / 2) : me.top + (scaleLabelFont.size / 2);\n\t\t\t\t} else {\n\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\tscaleLabelX = isLeft ? me.left + (scaleLabelFont.size / 2) : me.right - (scaleLabelFont.size / 2);\n\t\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t\t}\n\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\t\tcontext.rotate(rotation);\n\t\t\t\tcontext.textAlign = 'center';\n\t\t\t\tcontext.textBaseline = 'middle';\n\t\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\t\tcontext.font = scaleLabelFont.font;\n\t\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\t\tcontext.restore();\n\t\t\t}\n\n\t\t\tif (gridLines.drawBorder) {\n\t\t\t\t// Draw the line at the edge of the axis\n\t\t\t\tcontext.lineWidth = helpers.getValueAtIndexOrDefault(gridLines.lineWidth, 0);\n\t\t\t\tcontext.strokeStyle = helpers.getValueAtIndexOrDefault(gridLines.color, 0);\n\t\t\t\tvar x1 = me.left,\n\t\t\t\t\tx2 = me.right,\n\t\t\t\t\ty1 = me.top,\n\t\t\t\t\ty2 = me.bottom;\n\n\t\t\t\tvar aliasPixel = helpers.aliasPixel(context.lineWidth);\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\ty1 = y2 = options.position === 'top' ? me.bottom : me.top;\n\t\t\t\t\ty1 += aliasPixel;\n\t\t\t\t\ty2 += aliasPixel;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = x2 = options.position === 'left' ? me.right : me.left;\n\t\t\t\t\tx1 += aliasPixel;\n\t\t\t\t\tx2 += aliasPixel;\n\t\t\t\t}\n\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.moveTo(x1, y1);\n\t\t\t\tcontext.lineTo(x2, y2);\n\t\t\t\tcontext.stroke();\n\t\t\t}\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.scale.js\n// module id = 233\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.scaleService = {\n\t\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t\t// use the new chart options to grab the correct scale\n\t\tconstructors: {},\n\t\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t\t// old browsers\n\n\t\t// Scale config defaults\n\t\tdefaults: {},\n\t\tregisterScaleType: function(type, scaleConstructor, defaults) {\n\t\t\tthis.constructors[type] = scaleConstructor;\n\t\t\tthis.defaults[type] = helpers.clone(defaults);\n\t\t},\n\t\tgetScaleConstructor: function(type) {\n\t\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t\t},\n\t\tgetScaleDefaults: function(type) {\n\t\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\t\treturn this.defaults.hasOwnProperty(type) ? helpers.scaleMerge(Chart.defaults.scale, this.defaults[type]) : {};\n\t\t},\n\t\tupdateScaleDefaults: function(type, additions) {\n\t\t\tvar defaults = this.defaults;\n\t\t\tif (defaults.hasOwnProperty(type)) {\n\t\t\t\tdefaults[type] = helpers.extend(defaults[type], additions);\n\t\t\t}\n\t\t},\n\t\taddScalesToLayout: function(chartInstance) {\n\t\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\t\thelpers.each(chartInstance.scales, function(scale) {\n\t\t\t\tChart.layoutService.addBox(chartInstance, scale);\n\t\t\t});\n\t\t}\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.scaleService.js\n// module id = 234\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\t/**\n\t * Namespace to hold static tick generation functions\n\t * @namespace Chart.Ticks\n\t */\n\tChart.Ticks = {\n\t\t/**\n\t\t * Namespace to hold generators for different types of ticks\n\t\t * @namespace Chart.Ticks.generators\n\t\t */\n\t\tgenerators: {\n\t\t\t/**\n\t\t\t * Interface for the options provided to the numeric tick generator\n\t\t\t * @interface INumericTickGenerationOptions\n\t\t\t */\n\t\t\t/**\n\t\t\t * The maximum number of ticks to display\n\t\t\t * @name INumericTickGenerationOptions#maxTicks\n\t\t\t * @type Number\n\t\t\t */\n\t\t\t/**\n\t\t\t * The distance between each tick.\n\t\t\t * @name INumericTickGenerationOptions#stepSize\n\t\t\t * @type Number\n\t\t\t * @optional\n\t\t\t */\n\t\t\t/**\n\t\t\t * Forced minimum for the ticks. If not specified, the minimum of the data range is used to calculate the tick minimum\n\t\t\t * @name INumericTickGenerationOptions#min\n\t\t\t * @type Number\n\t\t\t * @optional\n\t\t\t */\n\t\t\t/**\n\t\t\t * The maximum value of the ticks. If not specified, the maximum of the data range is used to calculate the tick maximum\n\t\t\t * @name INumericTickGenerationOptions#max\n\t\t\t * @type Number\n\t\t\t * @optional\n\t\t\t */\n\n\t\t\t/**\n\t\t\t * Generate a set of linear ticks\n\t\t\t * @method Chart.Ticks.generators.linear\n\t\t\t * @param generationOptions {INumericTickGenerationOptions} the options used to generate the ticks\n\t\t\t * @param dataRange {IRange} the range of the data\n\t\t\t * @returns {Array<Number>} array of tick values\n\t\t\t */\n\t\t\tlinear: function(generationOptions, dataRange) {\n\t\t\t\tvar ticks = [];\n\t\t\t\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t\t\t\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t\t\t\t// for details.\n\n\t\t\t\tvar spacing;\n\t\t\t\tif (generationOptions.stepSize && generationOptions.stepSize > 0) {\n\t\t\t\t\tspacing = generationOptions.stepSize;\n\t\t\t\t} else {\n\t\t\t\t\tvar niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n\t\t\t\t\tspacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n\t\t\t\t}\n\t\t\t\tvar niceMin = Math.floor(dataRange.min / spacing) * spacing;\n\t\t\t\tvar niceMax = Math.ceil(dataRange.max / spacing) * spacing;\n\n\t\t\t\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\t\t\t\tif (generationOptions.min && generationOptions.max && generationOptions.stepSize) {\n\t\t\t\t\t// If very close to our whole number, use it.\n\t\t\t\t\tif (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n\t\t\t\t\t\tniceMin = generationOptions.min;\n\t\t\t\t\t\tniceMax = generationOptions.max;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar numSpaces = (niceMax - niceMin) / spacing;\n\t\t\t\t// If very close to our rounded value, use it.\n\t\t\t\tif (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\t\t\t\tnumSpaces = Math.round(numSpaces);\n\t\t\t\t} else {\n\t\t\t\t\tnumSpaces = Math.ceil(numSpaces);\n\t\t\t\t}\n\n\t\t\t\t// Put the values into the ticks array\n\t\t\t\tticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\t\t\t\tfor (var j = 1; j < numSpaces; ++j) {\n\t\t\t\t\tticks.push(niceMin + (j * spacing));\n\t\t\t\t}\n\t\t\t\tticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n\n\t\t\t\treturn ticks;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Generate a set of logarithmic ticks\n\t\t\t * @method Chart.Ticks.generators.logarithmic\n\t\t\t * @param generationOptions {INumericTickGenerationOptions} the options used to generate the ticks\n\t\t\t * @param dataRange {IRange} the range of the data\n\t\t\t * @returns {Array<Number>} array of tick values\n\t\t\t */\n\t\t\tlogarithmic: function(generationOptions, dataRange) {\n\t\t\t\tvar ticks = [];\n\t\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\n\n\t\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t\t\t// the graph\n\t\t\t\tvar tickVal = getValueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n\n\t\t\t\tvar endExp = Math.floor(helpers.log10(dataRange.max));\n\t\t\t\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n\t\t\t\tvar exp;\n\t\t\t\tvar significand;\n\n\t\t\t\tif (tickVal === 0) {\n\t\t\t\t\texp = Math.floor(helpers.log10(dataRange.minNotZero));\n\t\t\t\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n\n\t\t\t\t\tticks.push(tickVal);\n\t\t\t\t\ttickVal = significand * Math.pow(10, exp);\n\t\t\t\t} else {\n\t\t\t\t\texp = Math.floor(helpers.log10(tickVal));\n\t\t\t\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\n\t\t\t\t}\n\n\t\t\t\tdo {\n\t\t\t\t\tticks.push(tickVal);\n\n\t\t\t\t\t++significand;\n\t\t\t\t\tif (significand === 10) {\n\t\t\t\t\t\tsignificand = 1;\n\t\t\t\t\t\t++exp;\n\t\t\t\t\t}\n\n\t\t\t\t\ttickVal = significand * Math.pow(10, exp);\n\t\t\t\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\n\n\t\t\t\tvar lastTick = getValueOrDefault(generationOptions.max, tickVal);\n\t\t\t\tticks.push(lastTick);\n\n\t\t\t\treturn ticks;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Namespace to hold formatters for different types of ticks\n\t\t * @namespace Chart.Ticks.formatters\n\t\t */\n\t\tformatters: {\n\t\t\t/**\n\t\t\t * Formatter for value labels\n\t\t\t * @method Chart.Ticks.formatters.values\n\t\t\t * @param value the value to display\n\t\t\t * @return {String|Array} the label to display\n\t\t\t */\n\t\t\tvalues: function(value) {\n\t\t\t\treturn helpers.isArray(value) ? value : '' + value;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Formatter for linear numeric ticks\n\t\t\t * @method Chart.Ticks.formatters.linear\n\t\t\t * @param tickValue {Number} the value to be formatted\n\t\t\t * @param index {Number} the position of the tickValue parameter in the ticks array\n\t\t\t * @param ticks {Array<Number>} the list of ticks being converted\n\t\t\t * @return {String} string representation of the tickValue parameter\n\t\t\t */\n\t\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t\t// not an integer\n\t\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar logDelta = helpers.log10(Math.abs(delta));\n\t\t\t\tvar tickString = '';\n\n\t\t\t\tif (tickValue !== 0) {\n\t\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t\t} else {\n\t\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t\t}\n\n\t\t\t\treturn tickString;\n\t\t\t},\n\n\t\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\n\n\t\t\t\tif (tickValue === 0) {\n\t\t\t\t\treturn '0';\n\t\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\t\treturn tickValue.toExponential();\n\t\t\t\t}\n\t\t\t\treturn '';\n\t\t\t}\n\t\t}\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.ticks.js\n// module id = 235\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.global.title = {\n\t\tdisplay: false,\n\t\tposition: 'top',\n\t\tfullWidth: true, // marks that this box should take the full width of the canvas (pushing down other boxes)\n\n\t\tfontStyle: 'bold',\n\t\tpadding: 10,\n\n\t\t// actual title\n\t\ttext: ''\n\t};\n\n\tvar noop = helpers.noop;\n\tChart.Title = Chart.Element.extend({\n\n\t\tinitialize: function(config) {\n\t\t\tvar me = this;\n\t\t\thelpers.extend(me, config);\n\n\t\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\t\tme.legendHitBoxes = [];\n\t\t},\n\n\t\t// These methods are ordered by lifecycle. Utilities then follow.\n\n\t\tbeforeUpdate: noop,\n\t\tupdate: function(maxWidth, maxHeight, margins) {\n\t\t\tvar me = this;\n\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\t\tme.beforeUpdate();\n\n\t\t\t// Absorb the master measurements\n\t\t\tme.maxWidth = maxWidth;\n\t\t\tme.maxHeight = maxHeight;\n\t\t\tme.margins = margins;\n\n\t\t\t// Dimensions\n\t\t\tme.beforeSetDimensions();\n\t\t\tme.setDimensions();\n\t\t\tme.afterSetDimensions();\n\t\t\t// Labels\n\t\t\tme.beforeBuildLabels();\n\t\t\tme.buildLabels();\n\t\t\tme.afterBuildLabels();\n\n\t\t\t// Fit\n\t\t\tme.beforeFit();\n\t\t\tme.fit();\n\t\t\tme.afterFit();\n\t\t\t//\n\t\t\tme.afterUpdate();\n\n\t\t\treturn me.minSize;\n\n\t\t},\n\t\tafterUpdate: noop,\n\n\t\t//\n\n\t\tbeforeSetDimensions: noop,\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.width = me.maxWidth;\n\t\t\t\tme.left = 0;\n\t\t\t\tme.right = me.width;\n\t\t\t} else {\n\t\t\t\tme.height = me.maxHeight;\n\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.top = 0;\n\t\t\t\tme.bottom = me.height;\n\t\t\t}\n\n\t\t\t// Reset padding\n\t\t\tme.paddingLeft = 0;\n\t\t\tme.paddingTop = 0;\n\t\t\tme.paddingRight = 0;\n\t\t\tme.paddingBottom = 0;\n\n\t\t\t// Reset minSize\n\t\t\tme.minSize = {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0\n\t\t\t};\n\t\t},\n\t\tafterSetDimensions: noop,\n\n\t\t//\n\n\t\tbeforeBuildLabels: noop,\n\t\tbuildLabels: noop,\n\t\tafterBuildLabels: noop,\n\n\t\t//\n\n\t\tbeforeFit: noop,\n\t\tfit: function() {\n\t\t\tvar me = this,\n\t\t\t\tvalueOrDefault = helpers.getValueOrDefault,\n\t\t\t\topts = me.options,\n\t\t\t\tglobalDefaults = Chart.defaults.global,\n\t\t\t\tdisplay = opts.display,\n\t\t\t\tfontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize),\n\t\t\t\tminSize = me.minSize;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\t\tminSize.height = display ? fontSize + (opts.padding * 2) : 0;\n\t\t\t} else {\n\t\t\t\tminSize.width = display ? fontSize + (opts.padding * 2) : 0;\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t\t}\n\n\t\t\tme.width = minSize.width;\n\t\t\tme.height = minSize.height;\n\n\t\t},\n\t\tafterFit: noop,\n\n\t\t// Shared Methods\n\t\tisHorizontal: function() {\n\t\t\tvar pos = this.options.position;\n\t\t\treturn pos === 'top' || pos === 'bottom';\n\t\t},\n\n\t\t// Actually draw the title block on the canvas\n\t\tdraw: function() {\n\t\t\tvar me = this,\n\t\t\t\tctx = me.ctx,\n\t\t\t\tvalueOrDefault = helpers.getValueOrDefault,\n\t\t\t\topts = me.options,\n\t\t\t\tglobalDefaults = Chart.defaults.global;\n\n\t\t\tif (opts.display) {\n\t\t\t\tvar fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize),\n\t\t\t\t\tfontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle),\n\t\t\t\t\tfontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily),\n\t\t\t\t\ttitleFont = helpers.fontString(fontSize, fontStyle, fontFamily),\n\t\t\t\t\trotation = 0,\n\t\t\t\t\ttitleX,\n\t\t\t\t\ttitleY,\n\t\t\t\t\ttop = me.top,\n\t\t\t\t\tleft = me.left,\n\t\t\t\t\tbottom = me.bottom,\n\t\t\t\t\tright = me.right,\n\t\t\t\t\tmaxWidth;\n\n\t\t\t\tctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\t\t\t\tctx.font = titleFont;\n\n\t\t\t\t// Horizontal\n\t\t\t\tif (me.isHorizontal()) {\n\t\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\t\ttitleY = top + ((bottom - top) / 2); // midpoint of the height\n\t\t\t\t\tmaxWidth = right - left;\n\t\t\t\t} else {\n\t\t\t\t\ttitleX = opts.position === 'left' ? left + (fontSize / 2) : right - (fontSize / 2);\n\t\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t\t}\n\n\t\t\t\tctx.save();\n\t\t\t\tctx.translate(titleX, titleY);\n\t\t\t\tctx.rotate(rotation);\n\t\t\t\tctx.textAlign = 'center';\n\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\tctx.fillText(opts.text, 0, 0, maxWidth);\n\t\t\t\tctx.restore();\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction createNewTitleBlockAndAttach(chartInstance, titleOpts) {\n\t\tvar title = new Chart.Title({\n\t\t\tctx: chartInstance.chart.ctx,\n\t\t\toptions: titleOpts,\n\t\t\tchart: chartInstance\n\t\t});\n\t\tchartInstance.titleBlock = title;\n\t\tChart.layoutService.addBox(chartInstance, title);\n\t}\n\n\t// Register the title plugin\n\tChart.plugins.register({\n\t\tbeforeInit: function(chartInstance) {\n\t\t\tvar titleOpts = chartInstance.options.title;\n\n\t\t\tif (titleOpts) {\n\t\t\t\tcreateNewTitleBlockAndAttach(chartInstance, titleOpts);\n\t\t\t}\n\t\t},\n\t\tbeforeUpdate: function(chartInstance) {\n\t\t\tvar titleOpts = chartInstance.options.title;\n\n\t\t\tif (titleOpts) {\n\t\t\t\ttitleOpts = helpers.configMerge(Chart.defaults.global.title, titleOpts);\n\n\t\t\t\tif (chartInstance.titleBlock) {\n\t\t\t\t\tchartInstance.titleBlock.options = titleOpts;\n\t\t\t\t} else {\n\t\t\t\t\tcreateNewTitleBlockAndAttach(chartInstance, titleOpts);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tChart.layoutService.removeBox(chartInstance, chartInstance.titleBlock);\n\t\t\t\tdelete chartInstance.titleBlock;\n\t\t\t}\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.title.js\n// module id = 236\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\t/**\n \t * Helper method to merge the opacity into a color\n \t */\n\tfunction mergeOpacity(colorString, opacity) {\n\t\tvar color = helpers.color(colorString);\n\t\treturn color.alpha(opacity * color.alpha()).rgbaString();\n\t}\n\n\tChart.defaults.global.tooltips = {\n\t\tenabled: true,\n\t\tcustom: null,\n\t\tmode: 'nearest',\n\t\tposition: 'average',\n\t\tintersect: true,\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\ttitleFontStyle: 'bold',\n\t\ttitleSpacing: 2,\n\t\ttitleMarginBottom: 6,\n\t\ttitleFontColor: '#fff',\n\t\ttitleAlign: 'left',\n\t\tbodySpacing: 2,\n\t\tbodyFontColor: '#fff',\n\t\tbodyAlign: 'left',\n\t\tfooterFontStyle: 'bold',\n\t\tfooterSpacing: 2,\n\t\tfooterMarginTop: 6,\n\t\tfooterFontColor: '#fff',\n\t\tfooterAlign: 'left',\n\t\tyPadding: 6,\n\t\txPadding: 6,\n\t\tcaretSize: 5,\n\t\tcornerRadius: 6,\n\t\tmultiKeyBackground: '#fff',\n\t\tdisplayColors: true,\n\t\tcallbacks: {\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeTitle: helpers.noop,\n\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\t\t\t\tvar labels = data.labels;\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\n\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\tvar item = tooltipItems[0];\n\n\t\t\t\t\tif (item.xLabel) {\n\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\t\t\tafterTitle: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tbeforeLabel: helpers.noop,\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\n\t\t\t\treturn datasetLabel + ': ' + tooltipItem.yLabel;\n\t\t\t},\n\t\t\tlabelColor: function(tooltipItem, chartInstance) {\n\t\t\t\tvar meta = chartInstance.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\tvar view = activeElement._view;\n\t\t\t\treturn {\n\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t};\n\t\t\t},\n\t\t\tafterLabel: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tafterBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeFooter: helpers.noop,\n\t\t\tfooter: helpers.noop,\n\t\t\tafterFooter: helpers.noop\n\t\t}\n\t};\n\n\t// Helper to push or concat based on if the 2nd parameter is an array or not\n\tfunction pushOrConcat(base, toPush) {\n\t\tif (toPush) {\n\t\t\tif (helpers.isArray(toPush)) {\n\t\t\t\t// base = base.concat(toPush);\n\t\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t\t} else {\n\t\t\t\tbase.push(toPush);\n\t\t\t}\n\t\t}\n\n\t\treturn base;\n\t}\n\n\t// Private helper to create a tooltip item model\n\t// @param element : the chart element (point, arc, bar) to create the tooltip item for\n\t// @return : new tooltip item\n\tfunction createTooltipItem(element) {\n\t\tvar xScale = element._xScale;\n\t\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\t\tvar index = element._index,\n\t\t\tdatasetIndex = element._datasetIndex;\n\n\t\treturn {\n\t\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tindex: index,\n\t\t\tdatasetIndex: datasetIndex,\n\t\t\tx: element._model.x,\n\t\t\ty: element._model.y\n\t\t};\n\t}\n\n\t/**\n\t * Helper to get the reset model for the tooltip\n\t * @param tooltipOpts {Object} the tooltip options\n\t */\n\tfunction getBaseModel(tooltipOpts) {\n\t\tvar globalDefaults = Chart.defaults.global;\n\t\tvar getValueOrDefault = helpers.getValueOrDefault;\n\n\t\treturn {\n\t\t\t// Positioning\n\t\t\txPadding: tooltipOpts.xPadding,\n\t\t\tyPadding: tooltipOpts.yPadding,\n\t\t\txAlign: tooltipOpts.xAlign,\n\t\t\tyAlign: tooltipOpts.yAlign,\n\n\t\t\t// Body\n\t\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t\t_bodyFontFamily: getValueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_bodyFontStyle: getValueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\t\tbodyFontSize: getValueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\t\tbodySpacing: tooltipOpts.bodySpacing,\n\n\t\t\t// Title\n\t\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t\t_titleFontFamily: getValueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_titleFontStyle: getValueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\t\ttitleFontSize: getValueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\n\t\t\t// Footer\n\t\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t\t_footerFontFamily: getValueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_footerFontStyle: getValueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\t\tfooterFontSize: getValueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\n\t\t\t// Appearance\n\t\t\tcaretSize: tooltipOpts.caretSize,\n\t\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\t\topacity: 0,\n\t\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\n\t\t\tdisplayColors: tooltipOpts.displayColors\n\t\t};\n\t}\n\n\t/**\n\t * Get the size of the tooltip\n\t */\n\tfunction getTooltipSize(tooltip, model) {\n\t\tvar ctx = tooltip._chart.ctx;\n\n\t\tvar height = model.yPadding * 2; // Tooltip Padding\n\t\tvar width = 0;\n\n\t\t// Count of all lines in the body\n\t\tvar body = model.body;\n\t\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t\t}, 0);\n\t\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\n\t\tvar titleLineCount = model.title.length;\n\t\tvar footerLineCount = model.footer.length;\n\t\tvar titleFontSize = model.titleFontSize,\n\t\t\tbodyFontSize = model.bodyFontSize,\n\t\t\tfooterFontSize = model.footerFontSize;\n\n\t\theight += titleLineCount * titleFontSize; // Title Lines\n\t\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\t\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\t\theight += combinedBodyLength * bodyFontSize; // Body Lines\n\t\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\t\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\t\theight += footerLineCount * (footerFontSize); // Footer Lines\n\t\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\n\t\t// Title width\n\t\tvar widthPadding = 0;\n\t\tvar maxLineWidth = function(line) {\n\t\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\n\t\t};\n\n\t\tctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n\t\thelpers.each(model.title, maxLineWidth);\n\n\t\t// Body width\n\t\tctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n\t\thelpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\n\t\t// Body lines may include some extra width due to the color box\n\t\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n\t\thelpers.each(body, function(bodyItem) {\n\t\t\thelpers.each(bodyItem.before, maxLineWidth);\n\t\t\thelpers.each(bodyItem.lines, maxLineWidth);\n\t\t\thelpers.each(bodyItem.after, maxLineWidth);\n\t\t});\n\n\t\t// Reset back to 0\n\t\twidthPadding = 0;\n\n\t\t// Footer width\n\t\tctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n\t\thelpers.each(model.footer, maxLineWidth);\n\n\t\t// Add padding\n\t\twidth += 2 * model.xPadding;\n\n\t\treturn {\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t};\n\t}\n\n\t/**\n\t * Helper to get the alignment of a tooltip given the size\n\t */\n\tfunction determineAlignment(tooltip, size) {\n\t\tvar model = tooltip._model;\n\t\tvar chart = tooltip._chart;\n\t\tvar chartArea = tooltip._chartInstance.chartArea;\n\t\tvar xAlign = 'center';\n\t\tvar yAlign = 'center';\n\n\t\tif (model.y < size.height) {\n\t\t\tyAlign = 'top';\n\t\t} else if (model.y > (chart.height - size.height)) {\n\t\t\tyAlign = 'bottom';\n\t\t}\n\n\t\tvar lf, rf; // functions to determine left, right alignment\n\t\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\t\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\t\tvar midX = (chartArea.left + chartArea.right) / 2;\n\t\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\n\t\tif (yAlign === 'center') {\n\t\t\tlf = function(x) {\n\t\t\t\treturn x <= midX;\n\t\t\t};\n\t\t\trf = function(x) {\n\t\t\t\treturn x > midX;\n\t\t\t};\n\t\t} else {\n\t\t\tlf = function(x) {\n\t\t\t\treturn x <= (size.width / 2);\n\t\t\t};\n\t\t\trf = function(x) {\n\t\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t\t};\n\t\t}\n\n\t\tolf = function(x) {\n\t\t\treturn x + size.width > chart.width;\n\t\t};\n\t\torf = function(x) {\n\t\t\treturn x - size.width < 0;\n\t\t};\n\t\tyf = function(y) {\n\t\t\treturn y <= midY ? 'top' : 'bottom';\n\t\t};\n\n\t\tif (lf(model.x)) {\n\t\t\txAlign = 'left';\n\n\t\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\t\tif (olf(model.x)) {\n\t\t\t\txAlign = 'center';\n\t\t\t\tyAlign = yf(model.y);\n\t\t\t}\n\t\t} else if (rf(model.x)) {\n\t\t\txAlign = 'right';\n\n\t\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\t\tif (orf(model.x)) {\n\t\t\t\txAlign = 'center';\n\t\t\t\tyAlign = yf(model.y);\n\t\t\t}\n\t\t}\n\n\t\tvar opts = tooltip._options;\n\t\treturn {\n\t\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\n\t\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\n\t\t};\n\t}\n\n\t/**\n\t * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n\t */\n\tfunction getBackgroundPoint(vm, size, alignment) {\n\t\t// Background Position\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\n\t\tvar caretSize = vm.caretSize,\n\t\t\tcaretPadding = vm.caretPadding,\n\t\t\tcornerRadius = vm.cornerRadius,\n\t\t\txAlign = alignment.xAlign,\n\t\t\tyAlign = alignment.yAlign,\n\t\t\tpaddingAndSize = caretSize + caretPadding,\n\t\t\tradiusAndPadding = cornerRadius + caretPadding;\n\n\t\tif (xAlign === 'right') {\n\t\t\tx -= size.width;\n\t\t} else if (xAlign === 'center') {\n\t\t\tx -= (size.width / 2);\n\t\t}\n\n\t\tif (yAlign === 'top') {\n\t\t\ty += paddingAndSize;\n\t\t} else if (yAlign === 'bottom') {\n\t\t\ty -= size.height + paddingAndSize;\n\t\t} else {\n\t\t\ty -= (size.height / 2);\n\t\t}\n\n\t\tif (yAlign === 'center') {\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx += paddingAndSize;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tx -= paddingAndSize;\n\t\t\t}\n\t\t} else if (xAlign === 'left') {\n\t\t\tx -= radiusAndPadding;\n\t\t} else if (xAlign === 'right') {\n\t\t\tx += radiusAndPadding;\n\t\t}\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n\n\tChart.Tooltip = Chart.Element.extend({\n\t\tinitialize: function() {\n\t\t\tthis._model = getBaseModel(this._options);\n\t\t},\n\n\t\t// Get the title\n\t\t// Args are: (tooltipItem, data)\n\t\tgetTitle: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\t\t\tvar callbacks = opts.callbacks;\n\n\t\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments),\n\t\t\t\ttitle = callbacks.title.apply(me, arguments),\n\t\t\t\tafterTitle = callbacks.afterTitle.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeTitle);\n\t\t\tlines = pushOrConcat(lines, title);\n\t\t\tlines = pushOrConcat(lines, afterTitle);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBeforeBody: function() {\n\t\t\tvar lines = this._options.callbacks.beforeBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBody: function(tooltipItems, data) {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\t\t\tvar bodyItems = [];\n\n\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\tvar bodyItem = {\n\t\t\t\t\tbefore: [],\n\t\t\t\t\tlines: [],\n\t\t\t\t\tafter: []\n\t\t\t\t};\n\t\t\t\tpushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\n\n\t\t\t\tbodyItems.push(bodyItem);\n\t\t\t});\n\n\t\t\treturn bodyItems;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetAfterBody: function() {\n\t\t\tvar lines = this._options.callbacks.afterBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Get the footer and beforeFooter and afterFooter lines\n\t\t// Args are: (tooltipItem, data)\n\t\tgetFooter: function() {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\n\t\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeFooter);\n\t\t\tlines = pushOrConcat(lines, footer);\n\t\t\tlines = pushOrConcat(lines, afterFooter);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\tupdate: function(changed) {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\n\t\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n\t\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n\t\t\t// which breaks any animations.\n\t\t\tvar existingModel = me._model;\n\t\t\tvar model = me._model = getBaseModel(opts);\n\t\t\tvar active = me._active;\n\n\t\t\tvar data = me._data;\n\t\t\tvar chartInstance = me._chartInstance;\n\n\t\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\n\t\t\tvar alignment = {\n\t\t\t\txAlign: existingModel.xAlign,\n\t\t\t\tyAlign: existingModel.yAlign\n\t\t\t};\n\t\t\tvar backgroundPoint = {\n\t\t\t\tx: existingModel.x,\n\t\t\t\ty: existingModel.y\n\t\t\t};\n\t\t\tvar tooltipSize = {\n\t\t\t\twidth: existingModel.width,\n\t\t\t\theight: existingModel.height\n\t\t\t};\n\t\t\tvar tooltipPosition = {\n\t\t\t\tx: existingModel.caretX,\n\t\t\t\ty: existingModel.caretY\n\t\t\t};\n\n\t\t\tvar i, len;\n\n\t\t\tif (active.length) {\n\t\t\t\tmodel.opacity = 1;\n\n\t\t\t\tvar labelColors = [];\n\t\t\t\ttooltipPosition = Chart.Tooltip.positioners[opts.position](active, me._eventPosition);\n\n\t\t\t\tvar tooltipItems = [];\n\t\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t\t}\n\n\t\t\t\t// If the user provided a filter function, use it to modify the tooltip items\n\t\t\t\tif (opts.filter) {\n\t\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\n\t\t\t\t\t\treturn opts.filter(a, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\t\tif (opts.itemSort) {\n\t\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Determine colors for boxes\n\t\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, chartInstance));\n\t\t\t\t});\n\n\t\t\t\t// Build the Text Lines\n\t\t\t\tmodel.title = me.getTitle(tooltipItems, data);\n\t\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\n\t\t\t\tmodel.body = me.getBody(tooltipItems, data);\n\t\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\n\t\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\n\n\t\t\t\t// Initial positioning and colors\n\t\t\t\tmodel.x = Math.round(tooltipPosition.x);\n\t\t\t\tmodel.y = Math.round(tooltipPosition.y);\n\t\t\t\tmodel.caretPadding = helpers.getValueOrDefault(tooltipPosition.padding, 2);\n\t\t\t\tmodel.labelColors = labelColors;\n\n\t\t\t\t// data points\n\t\t\t\tmodel.dataPoints = tooltipItems;\n\n\t\t\t\t// We need to determine alignment of the tooltip\n\t\t\t\ttooltipSize = getTooltipSize(this, model);\n\t\t\t\talignment = determineAlignment(this, tooltipSize);\n\t\t\t\t// Final Size and Position\n\t\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment);\n\t\t\t} else {\n\t\t\t\tmodel.opacity = 0;\n\t\t\t}\n\n\t\t\tmodel.xAlign = alignment.xAlign;\n\t\t\tmodel.yAlign = alignment.yAlign;\n\t\t\tmodel.x = backgroundPoint.x;\n\t\t\tmodel.y = backgroundPoint.y;\n\t\t\tmodel.width = tooltipSize.width;\n\t\t\tmodel.height = tooltipSize.height;\n\n\t\t\t// Point where the caret on the tooltip points to\n\t\t\tmodel.caretX = tooltipPosition.x;\n\t\t\tmodel.caretY = tooltipPosition.y;\n\n\t\t\tme._model = model;\n\n\t\t\tif (changed && opts.custom) {\n\t\t\t\topts.custom.call(me, model);\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\t\tdrawCaret: function(tooltipPoint, size, opacity) {\n\t\t\tvar vm = this._view;\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar x1, x2, x3;\n\t\t\tvar y1, y2, y3;\n\t\t\tvar caretSize = vm.caretSize;\n\t\t\tvar cornerRadius = vm.cornerRadius;\n\t\t\tvar xAlign = vm.xAlign,\n\t\t\t\tyAlign = vm.yAlign;\n\t\t\tvar ptX = tooltipPoint.x,\n\t\t\t\tptY = tooltipPoint.y;\n\t\t\tvar width = size.width,\n\t\t\t\theight = size.height;\n\n\t\t\tif (yAlign === 'center') {\n\t\t\t\t// Left or right side\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx1 = ptX;\n\t\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\t\tx3 = x1;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = ptX + width;\n\t\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\t\tx3 = x1;\n\t\t\t\t}\n\n\t\t\t\ty2 = ptY + (height / 2);\n\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\ty3 = y2 + caretSize;\n\t\t\t} else {\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx1 = ptX + cornerRadius;\n\t\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t} else if (xAlign === 'right') {\n\t\t\t\t\tx1 = ptX + width - cornerRadius;\n\t\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\t\tx3 = x2 - caretSize;\n\t\t\t\t} else {\n\t\t\t\t\tx2 = ptX + (width / 2);\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t}\n\n\t\t\t\tif (yAlign === 'top') {\n\t\t\t\t\ty1 = ptY;\n\t\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t} else {\n\t\t\t\t\ty1 = ptY + height;\n\t\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x1, y1);\n\t\t\tctx.lineTo(x2, y2);\n\t\t\tctx.lineTo(x3, y3);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t},\n\t\tdrawTitle: function(pt, vm, ctx, opacity) {\n\t\t\tvar title = vm.title;\n\n\t\t\tif (title.length) {\n\t\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tvar titleFontSize = vm.titleFontSize,\n\t\t\t\t\ttitleSpacing = vm.titleSpacing;\n\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n\t\t\t\tctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n\t\t\t\tvar i, len;\n\t\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n\t\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tdrawBody: function(pt, vm, ctx, opacity) {\n\t\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\t\tvar bodySpacing = vm.bodySpacing;\n\t\t\tvar body = vm.body;\n\n\t\t\tctx.textAlign = vm._bodyAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tvar textColor = mergeOpacity(vm.bodyFontColor, opacity);\n\t\t\tctx.fillStyle = textColor;\n\t\t\tctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n\t\t\t// Before Body\n\t\t\tvar xLinePadding = 0;\n\t\t\tvar fillLineOfText = function(line) {\n\t\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t\t};\n\n\t\t\t// Before body lines\n\t\t\thelpers.each(vm.beforeBody, fillLineOfText);\n\n\t\t\tvar drawColorBoxes = vm.displayColors;\n\t\t\txLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\n\n\t\t\t// Draw body lines now\n\t\t\thelpers.each(body, function(bodyItem, i) {\n\t\t\t\thelpers.each(bodyItem.before, fillLineOfText);\n\n\t\t\t\thelpers.each(bodyItem.lines, function(line) {\n\t\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n\t\t\t\t\t\tctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Border\n\t\t\t\t\t\tctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n\t\t\t\t\t\tctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Inner square\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n\t\t\t\t\t\tctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\n\t\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tfillLineOfText(line);\n\t\t\t\t});\n\n\t\t\t\thelpers.each(bodyItem.after, fillLineOfText);\n\t\t\t});\n\n\t\t\t// Reset back to 0 for after body\n\t\t\txLinePadding = 0;\n\n\t\t\t// After body lines\n\t\t\thelpers.each(vm.afterBody, fillLineOfText);\n\t\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t\t},\n\t\tdrawFooter: function(pt, vm, ctx, opacity) {\n\t\t\tvar footer = vm.footer;\n\n\t\t\tif (footer.length) {\n\t\t\t\tpt.y += vm.footerMarginTop;\n\n\t\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n\t\t\t\tctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n\t\t\t\thelpers.each(footer, function(line) {\n\t\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tdrawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\n\t\t\tctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n\t\t\thelpers.drawRoundedRectangle(ctx, pt.x, pt.y, tooltipSize.width, tooltipSize.height, vm.cornerRadius);\n\t\t\tctx.fill();\n\t\t},\n\t\tdraw: function() {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\n\t\t\tif (vm.opacity === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar tooltipSize = {\n\t\t\t\twidth: vm.width,\n\t\t\t\theight: vm.height\n\t\t\t};\n\t\t\tvar pt = {\n\t\t\t\tx: vm.x,\n\t\t\t\ty: vm.y\n\t\t\t};\n\n\t\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n\t\t\tif (this._options.enabled) {\n\t\t\t\t// Draw Background\n\t\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize, opacity);\n\n\t\t\t\t// Draw Caret\n\t\t\t\tthis.drawCaret(pt, tooltipSize, opacity);\n\n\t\t\t\t// Draw Title, Body, and Footer\n\t\t\t\tpt.x += vm.xPadding;\n\t\t\t\tpt.y += vm.yPadding;\n\n\t\t\t\t// Titles\n\t\t\t\tthis.drawTitle(pt, vm, ctx, opacity);\n\n\t\t\t\t// Body\n\t\t\t\tthis.drawBody(pt, vm, ctx, opacity);\n\n\t\t\t\t// Footer\n\t\t\t\tthis.drawFooter(pt, vm, ctx, opacity);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event - The event to handle\n\t\t * @returns {Boolean} true if the tooltip changed\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me._options;\n\t\t\tvar changed = false;\n\n\t\t\tme._lastActive = me._lastActive || [];\n\n\t\t\t// Find Active Elements for tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme._active = [];\n\t\t\t} else {\n\t\t\t\tme._active = me._chartInstance.getElementsAtEventForMode(e, options.mode, options);\n\t\t\t}\n\n\t\t\t// Remember Last Actives\n\t\t\tchanged = !helpers.arrayEquals(me._active, me._lastActive);\n\t\t\tme._lastActive = me._active;\n\n\t\t\tif (options.enabled || options.custom) {\n\t\t\t\tme._eventPosition = {\n\t\t\t\t\tx: e.x,\n\t\t\t\t\ty: e.y\n\t\t\t\t};\n\n\t\t\t\tvar model = me._model;\n\t\t\t\tme.update(true);\n\t\t\t\tme.pivot();\n\n\t\t\t\t// See if our tooltip position changed\n\t\t\t\tchanged |= (model.x !== me._model.x) || (model.y !== me._model.y);\n\t\t\t}\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * @namespace Chart.Tooltip.positioners\n\t */\n\tChart.Tooltip.positioners = {\n\t\t/**\n\t\t * Average mode places the tooltip at the average position of the elements shown\n\t\t * @function Chart.Tooltip.positioners.average\n\t\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\n\t\t * @returns {Point} tooltip position\n\t\t */\n\t\taverage: function(elements) {\n\t\t\tif (!elements.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar i, len;\n\t\t\tvar x = 0;\n\t\t\tvar y = 0;\n\t\t\tvar count = 0;\n\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\tvar el = elements[i];\n\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\t\tx += pos.x;\n\t\t\t\t\ty += pos.y;\n\t\t\t\t\t++count;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: Math.round(x / count),\n\t\t\t\ty: Math.round(y / count)\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Gets the tooltip position nearest of the item nearest to the event position\n\t\t * @function Chart.Tooltip.positioners.nearest\n\t\t * @param elements {Chart.Element[]} the tooltip elements\n\t\t * @param eventPosition {Point} the position of the event in canvas coordinates\n\t\t * @returns {Point} the tooltip position\n\t\t */\n\t\tnearest: function(elements, eventPosition) {\n\t\t\tvar x = eventPosition.x;\n\t\t\tvar y = eventPosition.y;\n\n\t\t\tvar nearestElement;\n\t\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\t\tvar i, len;\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\tvar el = elements[i];\n\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\tvar center = el.getCenterPoint();\n\t\t\t\t\tvar d = helpers.distanceBetweenPoints(eventPosition, center);\n\n\t\t\t\t\tif (d < minDistance) {\n\t\t\t\t\t\tminDistance = d;\n\t\t\t\t\t\tnearestElement = el;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (nearestElement) {\n\t\t\t\tvar tp = nearestElement.tooltipPosition();\n\t\t\t\tx = tp.x;\n\t\t\t\ty = tp.y;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: y\n\t\t\t};\n\t\t}\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.tooltip.js\n// module id = 237\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers,\n\t\tglobalOpts = Chart.defaults.global;\n\n\tglobalOpts.elements.arc = {\n\t\tbackgroundColor: globalOpts.defaultColor,\n\t\tborderColor: '#fff',\n\t\tborderWidth: 2\n\t};\n\n\tChart.elements.Arc = Chart.Element.extend({\n\t\tinLabelRange: function(mouseX) {\n\t\t\tvar vm = this._view;\n\n\t\t\tif (vm) {\n\t\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tinRange: function(chartX, chartY) {\n\t\t\tvar vm = this._view;\n\n\t\t\tif (vm) {\n\t\t\t\tvar pointRelativePosition = helpers.getAngleFromPoint(vm, {\n\t\t\t\t\t\tx: chartX,\n\t\t\t\t\t\ty: chartY\n\t\t\t\t\t}),\n\t\t\t\t\tangle = pointRelativePosition.angle,\n\t\t\t\t\tdistance = pointRelativePosition.distance;\n\n\t\t\t\t// Sanitise angle range\n\t\t\t\tvar startAngle = vm.startAngle;\n\t\t\t\tvar endAngle = vm.endAngle;\n\t\t\t\twhile (endAngle < startAngle) {\n\t\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t\t}\n\t\t\t\twhile (angle > endAngle) {\n\t\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t\t}\n\t\t\t\twhile (angle < startAngle) {\n\t\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t\t}\n\n\t\t\t\t// Check if within the range of the open/close angle\n\t\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle),\n\t\t\t\t\twithinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n\t\t\t\treturn (betweenAngles && withinRadius);\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tgetCenterPoint: function() {\n\t\t\tvar vm = this._view;\n\t\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\t\treturn {\n\t\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t\t};\n\t\t},\n\t\tgetArea: function() {\n\t\t\tvar vm = this._view;\n\t\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t\t},\n\t\ttooltipPosition: function() {\n\t\t\tvar vm = this._view;\n\n\t\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2),\n\t\t\t\trangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\t\t\treturn {\n\t\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t\t};\n\t\t},\n\t\tdraw: function() {\n\n\t\t\tvar ctx = this._chart.ctx,\n\t\t\t\tvm = this._view,\n\t\t\t\tsA = vm.startAngle,\n\t\t\t\teA = vm.endAngle;\n\n\t\t\tctx.beginPath();\n\n\t\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\n\t\t\tctx.closePath();\n\t\t\tctx.strokeStyle = vm.borderColor;\n\t\t\tctx.lineWidth = vm.borderWidth;\n\n\t\t\tctx.fillStyle = vm.backgroundColor;\n\n\t\t\tctx.fill();\n\t\t\tctx.lineJoin = 'bevel';\n\n\t\t\tif (vm.borderWidth) {\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/elements/element.arc.js\n// module id = 238\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\tvar globalDefaults = Chart.defaults.global;\n\n\tChart.defaults.global.elements.line = {\n\t\ttension: 0.4,\n\t\tbackgroundColor: globalDefaults.defaultColor,\n\t\tborderWidth: 3,\n\t\tborderColor: globalDefaults.defaultColor,\n\t\tborderCapStyle: 'butt',\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0,\n\t\tborderJoinStyle: 'miter',\n\t\tcapBezierPoints: true,\n\t\tfill: true, // do we fill in the area between the line and its base axis\n\t};\n\n\tChart.elements.Line = Chart.Element.extend({\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar vm = me._view;\n\t\t\tvar spanGaps = vm.spanGaps;\n\t\t\tvar fillPoint = vm.scaleZero;\n\t\t\tvar loop = me._loop;\n\n\t\t\t// Handle different fill modes for cartesian lines\n\t\t\tif (!loop) {\n\t\t\t\tif (vm.fill === 'top') {\n\t\t\t\t\tfillPoint = vm.scaleTop;\n\t\t\t\t} else if (vm.fill === 'bottom') {\n\t\t\t\t\tfillPoint = vm.scaleBottom;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar ctx = me._chart.ctx;\n\t\t\tctx.save();\n\n\t\t\t// Helper function to draw a line to a point\n\t\t\tfunction lineToPoint(previousPoint, point) {\n\t\t\t\tvar pointVM = point._view;\n\t\t\t\tif (point._view.steppedLine === true) {\n\t\t\t\t\tctx.lineTo(pointVM.x, previousPoint._view.y);\n\t\t\t\t\tctx.lineTo(pointVM.x, pointVM.y);\n\t\t\t\t} else if (point._view.tension === 0) {\n\t\t\t\t\tctx.lineTo(pointVM.x, pointVM.y);\n\t\t\t\t} else {\n\t\t\t\t\tctx.bezierCurveTo(\n\t\t\t\t\t\tpreviousPoint._view.controlPointNextX,\n\t\t\t\t\t\tpreviousPoint._view.controlPointNextY,\n\t\t\t\t\t\tpointVM.controlPointPreviousX,\n\t\t\t\t\t\tpointVM.controlPointPreviousY,\n\t\t\t\t\t\tpointVM.x,\n\t\t\t\t\t\tpointVM.y\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar points = me._children.slice(); // clone array\n\t\t\tvar lastDrawnIndex = -1;\n\n\t\t\t// If we are looping, adding the first point again\n\t\t\tif (loop && points.length) {\n\t\t\t\tpoints.push(points[0]);\n\t\t\t}\n\n\t\t\tvar index, current, previous, currentVM;\n\n\t\t\t// Fill Line\n\t\t\tif (points.length && vm.fill) {\n\t\t\t\tctx.beginPath();\n\n\t\t\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\t\t\tcurrent = points[index];\n\t\t\t\t\tprevious = helpers.previousItem(points, index);\n\t\t\t\t\tcurrentVM = current._view;\n\n\t\t\t\t\t// First point moves to it's starting position no matter what\n\t\t\t\t\tif (index === 0) {\n\t\t\t\t\t\tif (loop) {\n\t\t\t\t\t\t\tctx.moveTo(fillPoint.x, fillPoint.y);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.moveTo(currentVM.x, fillPoint);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t\t\t\tctx.lineTo(currentVM.x, currentVM.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\t\t\tif (currentVM.skip) {\n\t\t\t\t\t\t\t// Only do this if this is the first point that is skipped\n\t\t\t\t\t\t\tif (!spanGaps && lastDrawnIndex === (index - 1)) {\n\t\t\t\t\t\t\t\tif (loop) {\n\t\t\t\t\t\t\t\t\tctx.lineTo(fillPoint.x, fillPoint.y);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tctx.lineTo(previous._view.x, fillPoint);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (lastDrawnIndex !== (index - 1)) {\n\t\t\t\t\t\t\t\t// There was a gap and this is the first point after the gap. If we've never drawn a point, this is a special case.\n\t\t\t\t\t\t\t\t// If the first data point is NaN, then there is no real gap to skip\n\t\t\t\t\t\t\t\tif (spanGaps && lastDrawnIndex !== -1) {\n\t\t\t\t\t\t\t\t\t// We are spanning the gap, so simple draw a line to this point\n\t\t\t\t\t\t\t\t\tlineToPoint(previous, current);\n\t\t\t\t\t\t\t\t} else if (loop) {\n\t\t\t\t\t\t\t\t\tctx.lineTo(currentVM.x, currentVM.y);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tctx.lineTo(currentVM.x, fillPoint);\n\t\t\t\t\t\t\t\t\tctx.lineTo(currentVM.x, currentVM.y);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\t\t\tlineToPoint(previous, current);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!loop && lastDrawnIndex !== -1) {\n\t\t\t\t\tctx.lineTo(points[lastDrawnIndex]._view.x, fillPoint);\n\t\t\t\t}\n\n\t\t\t\tctx.fillStyle = vm.backgroundColor || globalDefaults.defaultColor;\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.fill();\n\t\t\t}\n\n\t\t\t// Stroke Line Options\n\t\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n\t\t\t// IE 9 and 10 do not support line dash\n\t\t\tif (ctx.setLineDash) {\n\t\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t\t}\n\n\t\t\tctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n\t\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\t\tctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n\t\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n\t\t\t// Stroke Line\n\t\t\tctx.beginPath();\n\t\t\tlastDrawnIndex = -1;\n\n\t\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\t\tcurrent = points[index];\n\t\t\t\tprevious = helpers.previousItem(points, index);\n\t\t\t\tcurrentVM = current._view;\n\n\t\t\t\t// First point moves to it's starting position no matter what\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\t\tlineToPoint(previous, current);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tctx.stroke();\n\t\t\tctx.restore();\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/elements/element.line.js\n// module id = 239\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers,\n\t\tglobalOpts = Chart.defaults.global,\n\t\tdefaultColor = globalOpts.defaultColor;\n\n\tglobalOpts.elements.point = {\n\t\tradius: 3,\n\t\tpointStyle: 'circle',\n\t\tbackgroundColor: defaultColor,\n\t\tborderWidth: 1,\n\t\tborderColor: defaultColor,\n\t\t// Hover\n\t\thitRadius: 1,\n\t\thoverRadius: 4,\n\t\thoverBorderWidth: 1\n\t};\n\n\tfunction xRange(mouseX) {\n\t\tvar vm = this._view;\n\t\treturn vm ? (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hitRadius, 2)) : false;\n\t}\n\n\tfunction yRange(mouseY) {\n\t\tvar vm = this._view;\n\t\treturn vm ? (Math.pow(mouseY - vm.y, 2) < Math.pow(vm.radius + vm.hitRadius, 2)) : false;\n\t}\n\n\tChart.elements.Point = Chart.Element.extend({\n\t\tinRange: function(mouseX, mouseY) {\n\t\t\tvar vm = this._view;\n\t\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t\t},\n\n\t\tinLabelRange: xRange,\n\t\tinXRange: xRange,\n\t\tinYRange: yRange,\n\n\t\tgetCenterPoint: function() {\n\t\t\tvar vm = this._view;\n\t\t\treturn {\n\t\t\t\tx: vm.x,\n\t\t\t\ty: vm.y\n\t\t\t};\n\t\t},\n\t\tgetArea: function() {\n\t\t\treturn Math.PI * Math.pow(this._view.radius, 2);\n\t\t},\n\t\ttooltipPosition: function() {\n\t\t\tvar vm = this._view;\n\t\t\treturn {\n\t\t\t\tx: vm.x,\n\t\t\t\ty: vm.y,\n\t\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t\t};\n\t\t},\n\t\tdraw: function(chartArea) {\n\t\t\tvar vm = this._view;\n\t\t\tvar model = this._model;\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar pointStyle = vm.pointStyle;\n\t\t\tvar radius = vm.radius;\n\t\t\tvar x = vm.x;\n\t\t\tvar y = vm.y;\n\t\t\tvar color = Chart.helpers.color;\n\t\t\tvar errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\t\t\tvar ratio = 0;\n\n\t\t\tif (vm.skip) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\t\tctx.lineWidth = helpers.getValueOrDefault(vm.borderWidth, globalOpts.elements.point.borderWidth);\n\t\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\n\t\t\t// Cliping for Points.\n\t\t\t// going out from inner charArea?\n\t\t\tif ((chartArea !== undefined) && ((model.x < chartArea.left) || (chartArea.right*errMargin < model.x) || (model.y < chartArea.top) || (chartArea.bottom*errMargin < model.y))) {\n\t\t\t\t// Point fade out\n\t\t\t\tif (model.x < chartArea.left) {\n\t\t\t\t\tratio = (x - model.x) / (chartArea.left - model.x);\n\t\t\t\t} else if (chartArea.right*errMargin < model.x) {\n\t\t\t\t\tratio = (model.x - x) / (model.x - chartArea.right);\n\t\t\t\t} else if (model.y < chartArea.top) {\n\t\t\t\t\tratio = (y - model.y) / (chartArea.top - model.y);\n\t\t\t\t} else if (chartArea.bottom*errMargin < model.y) {\n\t\t\t\t\tratio = (model.y - y) / (model.y - chartArea.bottom);\n\t\t\t\t}\n\t\t\t\tratio = Math.round(ratio*100) / 100;\n\t\t\t\tctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();\n\t\t\t\tctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();\n\t\t\t}\n\n\t\t\tChart.canvasHelpers.drawPoint(ctx, pointStyle, radius, x, y);\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/elements/element.point.js\n// module id = 240\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar globalOpts = Chart.defaults.global;\n\n\tglobalOpts.elements.rectangle = {\n\t\tbackgroundColor: globalOpts.defaultColor,\n\t\tborderWidth: 0,\n\t\tborderColor: globalOpts.defaultColor,\n\t\tborderSkipped: 'bottom'\n\t};\n\n\tfunction isVertical(bar) {\n\t\treturn bar._view.width !== undefined;\n\t}\n\n\t/**\n\t * Helper function to get the bounds of the bar regardless of the orientation\n\t * @private\n\t * @param bar {Chart.Element.Rectangle} the bar\n\t * @return {Bounds} bounds of the bar\n\t */\n\tfunction getBarBounds(bar) {\n\t\tvar vm = bar._view;\n\t\tvar x1, x2, y1, y2;\n\n\t\tif (isVertical(bar)) {\n\t\t\t// vertical\n\t\t\tvar halfWidth = vm.width / 2;\n\t\t\tx1 = vm.x - halfWidth;\n\t\t\tx2 = vm.x + halfWidth;\n\t\t\ty1 = Math.min(vm.y, vm.base);\n\t\t\ty2 = Math.max(vm.y, vm.base);\n\t\t} else {\n\t\t\t// horizontal bar\n\t\t\tvar halfHeight = vm.height / 2;\n\t\t\tx1 = Math.min(vm.x, vm.base);\n\t\t\tx2 = Math.max(vm.x, vm.base);\n\t\t\ty1 = vm.y - halfHeight;\n\t\t\ty2 = vm.y + halfHeight;\n\t\t}\n\n\t\treturn {\n\t\t\tleft: x1,\n\t\t\ttop: y1,\n\t\t\tright: x2,\n\t\t\tbottom: y2\n\t\t};\n\t}\n\n\tChart.elements.Rectangle = Chart.Element.extend({\n\t\tdraw: function() {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\t\t\tvar left, right, top, bottom, signX, signY, borderSkipped;\n\t\t\tvar borderWidth = vm.borderWidth;\n\n\t\t\tif (!vm.horizontal) {\n\t\t\t\t// bar\n\t\t\t\tleft = vm.x - vm.width / 2;\n\t\t\t\tright = vm.x + vm.width / 2;\n\t\t\t\ttop = vm.y;\n\t\t\t\tbottom = vm.base;\n\t\t\t\tsignX = 1;\n\t\t\t\tsignY = bottom > top? 1: -1;\n\t\t\t\tborderSkipped = vm.borderSkipped || 'bottom';\n\t\t\t} else {\n\t\t\t\t// horizontal bar\n\t\t\t\tleft = vm.base;\n\t\t\t\tright = vm.x;\n\t\t\t\ttop = vm.y - vm.height / 2;\n\t\t\t\tbottom = vm.y + vm.height / 2;\n\t\t\t\tsignX = right > left? 1: -1;\n\t\t\t\tsignY = 1;\n\t\t\t\tborderSkipped = vm.borderSkipped || 'left';\n\t\t\t}\n\n\t\t\t// Canvas doesn't allow us to stroke inside the width so we can\n\t\t\t// adjust the sizes to fit if we're setting a stroke on the line\n\t\t\tif (borderWidth) {\n\t\t\t\t// borderWidth shold be less than bar width and bar height.\n\t\t\t\tvar barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n\t\t\t\tborderWidth = borderWidth > barSize? barSize: borderWidth;\n\t\t\t\tvar halfStroke = borderWidth / 2;\n\t\t\t\t// Adjust borderWidth when bar top position is near vm.base(zero).\n\t\t\t\tvar borderLeft = left + (borderSkipped !== 'left'? halfStroke * signX: 0);\n\t\t\t\tvar borderRight = right + (borderSkipped !== 'right'? -halfStroke * signX: 0);\n\t\t\t\tvar borderTop = top + (borderSkipped !== 'top'? halfStroke * signY: 0);\n\t\t\t\tvar borderBottom = bottom + (borderSkipped !== 'bottom'? -halfStroke * signY: 0);\n\t\t\t\t// not become a vertical line?\n\t\t\t\tif (borderLeft !== borderRight) {\n\t\t\t\t\ttop = borderTop;\n\t\t\t\t\tbottom = borderBottom;\n\t\t\t\t}\n\t\t\t\t// not become a horizontal line?\n\t\t\t\tif (borderTop !== borderBottom) {\n\t\t\t\t\tleft = borderLeft;\n\t\t\t\t\tright = borderRight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\t\t\tctx.fillStyle = vm.backgroundColor;\n\t\t\tctx.strokeStyle = vm.borderColor;\n\t\t\tctx.lineWidth = borderWidth;\n\n\t\t\t// Corner points, from bottom-left to bottom-right clockwise\n\t\t\t// | 1 2 |\n\t\t\t// | 0 3 |\n\t\t\tvar corners = [\n\t\t\t\t[left, bottom],\n\t\t\t\t[left, top],\n\t\t\t\t[right, top],\n\t\t\t\t[right, bottom]\n\t\t\t];\n\n\t\t\t// Find first (starting) corner with fallback to 'bottom'\n\t\t\tvar borders = ['bottom', 'left', 'top', 'right'];\n\t\t\tvar startCorner = borders.indexOf(borderSkipped, 0);\n\t\t\tif (startCorner === -1) {\n\t\t\t\tstartCorner = 0;\n\t\t\t}\n\n\t\t\tfunction cornerAt(index) {\n\t\t\t\treturn corners[(startCorner + index) % 4];\n\t\t\t}\n\n\t\t\t// Draw rectangle from 'startCorner'\n\t\t\tvar corner = cornerAt(0);\n\t\t\tctx.moveTo(corner[0], corner[1]);\n\n\t\t\tfor (var i = 1; i < 4; i++) {\n\t\t\t\tcorner = cornerAt(i);\n\t\t\t\tctx.lineTo(corner[0], corner[1]);\n\t\t\t}\n\n\t\t\tctx.fill();\n\t\t\tif (borderWidth) {\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t},\n\t\theight: function() {\n\t\t\tvar vm = this._view;\n\t\t\treturn vm.base - vm.y;\n\t\t},\n\t\tinRange: function(mouseX, mouseY) {\n\t\t\tvar inRange = false;\n\n\t\t\tif (this._view) {\n\t\t\t\tvar bounds = getBarBounds(this);\n\t\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t\t}\n\n\t\t\treturn inRange;\n\t\t},\n\t\tinLabelRange: function(mouseX, mouseY) {\n\t\t\tvar me = this;\n\t\t\tif (!me._view) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar inRange = false;\n\t\t\tvar bounds = getBarBounds(me);\n\n\t\t\tif (isVertical(me)) {\n\t\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right;\n\t\t\t} else {\n\t\t\t\tinRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t\t}\n\n\t\t\treturn inRange;\n\t\t},\n\t\tinXRange: function(mouseX) {\n\t\t\tvar bounds = getBarBounds(this);\n\t\t\treturn mouseX >= bounds.left && mouseX <= bounds.right;\n\t\t},\n\t\tinYRange: function(mouseY) {\n\t\t\tvar bounds = getBarBounds(this);\n\t\t\treturn mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t},\n\t\tgetCenterPoint: function() {\n\t\t\tvar vm = this._view;\n\t\t\tvar x, y;\n\t\t\tif (isVertical(this)) {\n\t\t\t\tx = vm.x;\n\t\t\t\ty = (vm.y + vm.base) / 2;\n\t\t\t} else {\n\t\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\t\ty = vm.y;\n\t\t\t}\n\n\t\t\treturn {x: x, y: y};\n\t\t},\n\t\tgetArea: function() {\n\t\t\tvar vm = this._view;\n\t\t\treturn vm.width * Math.abs(vm.y - vm.base);\n\t\t},\n\t\ttooltipPosition: function() {\n\t\t\tvar vm = this._view;\n\t\t\treturn {\n\t\t\t\tx: vm.x,\n\t\t\t\ty: vm.y\n\t\t\t};\n\t\t}\n\t});\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/elements/element.rectangle.js\n// module id = 241\n// module chunks = 0","'use strict';\n\n// Chart.Platform implementation for targeting a web browser\nmodule.exports = function(Chart) {\n\tvar helpers = Chart.helpers;\n\n\t// DOM event types -> Chart.js event types.\n\t// Note: only events with different types are mapped.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events\n\tvar eventTypeMap = {\n\t\t// Touch events\n\t\ttouchstart: 'mousedown',\n\t\ttouchmove: 'mousemove',\n\t\ttouchend: 'mouseup',\n\n\t\t// Pointer events\n\t\tpointerenter: 'mouseenter',\n\t\tpointerdown: 'mousedown',\n\t\tpointermove: 'mousemove',\n\t\tpointerup: 'mouseup',\n\t\tpointerleave: 'mouseout',\n\t\tpointerout: 'mouseout'\n\t};\n\n\t/**\n\t * The \"used\" size is the final value of a dimension property after all calculations have\n\t * been performed. This method uses the computed style of `element` but returns undefined\n\t * if the computed style is not expressed in pixels. That can happen in some cases where\n\t * `element` has a size relative to its parent and this last one is not yet displayed,\n\t * for example because of `display: none` on a parent node.\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n\t * @returns {Number} Size in pixels or undefined if unknown.\n\t */\n\tfunction readUsedSize(element, property) {\n\t\tvar value = helpers.getStyle(element, property);\n\t\tvar matches = value && value.match(/(\\d+)px/);\n\t\treturn matches? Number(matches[1]) : undefined;\n\t}\n\n\t/**\n\t * Initializes the canvas style and render size without modifying the canvas display size,\n\t * since responsiveness is handled by the controller.resize() method. The config is used\n\t * to determine the aspect ratio to apply in case no explicit height has been specified.\n\t */\n\tfunction initCanvas(canvas, config) {\n\t\tvar style = canvas.style;\n\n\t\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n\t\t// returns null or '' if no explicit value has been set to the canvas attribute.\n\t\tvar renderHeight = canvas.getAttribute('height');\n\t\tvar renderWidth = canvas.getAttribute('width');\n\n\t\t// Chart.js modifies some canvas values that we want to restore on destroy\n\t\tcanvas._chartjs = {\n\t\t\tinitial: {\n\t\t\t\theight: renderHeight,\n\t\t\t\twidth: renderWidth,\n\t\t\t\tstyle: {\n\t\t\t\t\tdisplay: style.display,\n\t\t\t\t\theight: style.height,\n\t\t\t\t\twidth: style.width\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// Force canvas to display as block to avoid extra space caused by inline\n\t\t// elements, which would interfere with the responsive resize process.\n\t\t// https://github.com/chartjs/Chart.js/issues/2538\n\t\tstyle.display = style.display || 'block';\n\n\t\tif (renderWidth === null || renderWidth === '') {\n\t\t\tvar displayWidth = readUsedSize(canvas, 'width');\n\t\t\tif (displayWidth !== undefined) {\n\t\t\t\tcanvas.width = displayWidth;\n\t\t\t}\n\t\t}\n\n\t\tif (renderHeight === null || renderHeight === '') {\n\t\t\tif (canvas.style.height === '') {\n\t\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\n\t\t\t\t// which one can be specified by the user but also by charts as default option\n\t\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n\t\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\n\t\t\t} else {\n\t\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\n\t\t\t\tif (displayWidth !== undefined) {\n\t\t\t\t\tcanvas.height = displayHeight;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn canvas;\n\t}\n\n\tfunction createEvent(type, chart, x, y, native) {\n\t\treturn {\n\t\t\ttype: type,\n\t\t\tchart: chart,\n\t\t\tnative: native || null,\n\t\t\tx: x !== undefined? x : null,\n\t\t\ty: y !== undefined? y : null,\n\t\t};\n\t}\n\n\tfunction fromNativeEvent(event, chart) {\n\t\tvar type = eventTypeMap[event.type] || event.type;\n\t\tvar pos = helpers.getRelativePosition(event, chart);\n\t\treturn createEvent(type, chart, pos.x, pos.y, event);\n\t}\n\n\tfunction createResizer(handler) {\n\t\tvar iframe = document.createElement('iframe');\n\t\tiframe.className = 'chartjs-hidden-iframe';\n\t\tiframe.style.cssText =\n\t\t\t'display:block;'+\n\t\t\t'overflow:hidden;'+\n\t\t\t'border:0;'+\n\t\t\t'margin:0;'+\n\t\t\t'top:0;'+\n\t\t\t'left:0;'+\n\t\t\t'bottom:0;'+\n\t\t\t'right:0;'+\n\t\t\t'height:100%;'+\n\t\t\t'width:100%;'+\n\t\t\t'position:absolute;'+\n\t\t\t'pointer-events:none;'+\n\t\t\t'z-index:-1;';\n\n\t\t// Prevent the iframe to gain focus on tab.\n\t\t// https://github.com/chartjs/Chart.js/issues/3090\n\t\tiframe.tabIndex = -1;\n\n\t\t// If the iframe is re-attached to the DOM, the resize listener is removed because the\n\t\t// content is reloaded, so make sure to install the handler after the iframe is loaded.\n\t\t// https://github.com/chartjs/Chart.js/issues/3521\n\t\thelpers.addEvent(iframe, 'load', function() {\n\t\t\thelpers.addEvent(iframe.contentWindow || iframe, 'resize', handler);\n\n\t\t\t// The iframe size might have changed while loading, which can also\n\t\t\t// happen if the size has been changed while detached from the DOM.\n\t\t\thandler();\n\t\t});\n\n\t\treturn iframe;\n\t}\n\n\tfunction addResizeListener(node, listener, chart) {\n\t\tvar stub = node._chartjs = {\n\t\t\tticking: false\n\t\t};\n\n\t\t// Throttle the callback notification until the next animation frame.\n\t\tvar notify = function() {\n\t\t\tif (!stub.ticking) {\n\t\t\t\tstub.ticking = true;\n\t\t\t\thelpers.requestAnimFrame.call(window, function() {\n\t\t\t\t\tif (stub.resizer) {\n\t\t\t\t\t\tstub.ticking = false;\n\t\t\t\t\t\treturn listener(createEvent('resize', chart));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t// Let's keep track of this added iframe and thus avoid DOM query when removing it.\n\t\tstub.resizer = createResizer(notify);\n\n\t\tnode.insertBefore(stub.resizer, node.firstChild);\n\t}\n\n\tfunction removeResizeListener(node) {\n\t\tif (!node || !node._chartjs) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar resizer = node._chartjs.resizer;\n\t\tif (resizer) {\n\t\t\tresizer.parentNode.removeChild(resizer);\n\t\t\tnode._chartjs.resizer = null;\n\t\t}\n\n\t\tdelete node._chartjs;\n\t}\n\n\treturn {\n\t\tacquireContext: function(item, config) {\n\t\t\tif (typeof item === 'string') {\n\t\t\t\titem = document.getElementById(item);\n\t\t\t} else if (item.length) {\n\t\t\t\t// Support for array based queries (such as jQuery)\n\t\t\t\titem = item[0];\n\t\t\t}\n\n\t\t\tif (item && item.canvas) {\n\t\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\t\titem = item.canvas;\n\t\t\t}\n\n\t\t\tif (item instanceof HTMLCanvasElement) {\n\t\t\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\n\t\t\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\n\t\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\t\tvar context = item.getContext && item.getContext('2d');\n\t\t\t\tif (context instanceof CanvasRenderingContext2D) {\n\t\t\t\t\tinitCanvas(item, config);\n\t\t\t\t\treturn context;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t},\n\n\t\treleaseContext: function(context) {\n\t\t\tvar canvas = context.canvas;\n\t\t\tif (!canvas._chartjs) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar initial = canvas._chartjs.initial;\n\t\t\t['height', 'width'].forEach(function(prop) {\n\t\t\t\tvar value = initial[prop];\n\t\t\t\tif (value === undefined || value === null) {\n\t\t\t\t\tcanvas.removeAttribute(prop);\n\t\t\t\t} else {\n\t\t\t\t\tcanvas.setAttribute(prop, value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers.each(initial.style || {}, function(value, key) {\n\t\t\t\tcanvas.style[key] = value;\n\t\t\t});\n\n\t\t\t// The canvas render size might have been changed (and thus the state stack discarded),\n\t\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\n\t\t\t// least the canvas context is reset to the default state by setting the canvas width.\n\t\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\t\t\tcanvas.width = canvas.width;\n\n\t\t\tdelete canvas._chartjs;\n\t\t},\n\n\t\taddEventListener: function(chart, type, listener) {\n\t\t\tvar canvas = chart.chart.canvas;\n\t\t\tif (type === 'resize') {\n\t\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\t\taddResizeListener(canvas.parentNode, listener, chart.chart);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar stub = listener._chartjs || (listener._chartjs = {});\n\t\t\tvar proxies = stub.proxies || (stub.proxies = {});\n\t\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\n\t\t\t\tlistener(fromNativeEvent(event, chart.chart));\n\t\t\t};\n\n\t\t\thelpers.addEvent(canvas, type, proxy);\n\t\t},\n\n\t\tremoveEventListener: function(chart, type, listener) {\n\t\t\tvar canvas = chart.chart.canvas;\n\t\t\tif (type === 'resize') {\n\t\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\t\tremoveResizeListener(canvas.parentNode, listener);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar stub = listener._chartjs || {};\n\t\t\tvar proxies = stub.proxies || {};\n\t\t\tvar proxy = proxies[chart.id + '_' + type];\n\t\t\tif (!proxy) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\thelpers.removeEvent(canvas, type, proxy);\n\t\t}\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/platforms/platform.dom.js\n// module id = 242\n// module chunks = 0","'use strict';\n\n// By default, select the browser (DOM) platform.\n// @TODO Make possible to select another platform at build time.\nvar implementation = require('./platform.dom.js');\n\nmodule.exports = function(Chart) {\n\t/**\n\t * @namespace Chart.platform\n\t * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n\t * @since 2.4.0\n\t */\n\tChart.platform = {\n\t\t/**\n\t\t * Called at chart construction time, returns a context2d instance implementing\n\t\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t\t * @param {*} item - The native item from which to acquire context (platform specific)\n\t\t * @param {Object} options - The chart options\n\t\t * @returns {CanvasRenderingContext2D} context2d instance\n\t\t */\n\t\tacquireContext: function() {},\n\n\t\t/**\n\t\t * Called at chart destruction time, releases any resources associated to the context\n\t\t * previously returned by the acquireContext() method.\n\t\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t\t * @returns {Boolean} true if the method succeeded, else false\n\t\t */\n\t\treleaseContext: function() {},\n\n\t\t/**\n\t\t * Registers the specified listener on the given chart.\n\t\t * @param {Chart} chart - Chart from which to listen for event\n\t\t * @param {String} type - The ({@link IEvent}) type to listen for\n\t\t * @param {Function} listener - Receives a notification (an object that implements\n\t\t * the {@link IEvent} interface) when an event of the specified type occurs.\n\t\t */\n\t\taddEventListener: function() {},\n\n\t\t/**\n\t\t * Removes the specified listener previously registered with addEventListener.\n\t\t * @param {Chart} chart -Chart from which to remove the listener\n\t\t * @param {String} type - The ({@link IEvent}) type to remove\n\t\t * @param {Function} listener - The listener function to remove from the event target.\n\t\t */\n\t\tremoveEventListener: function() {}\n\t};\n\n\t/**\n\t * @interface IPlatform\n\t * Allows abstracting platform dependencies away from the chart\n\t * @borrows Chart.platform.acquireContext as acquireContext\n\t * @borrows Chart.platform.releaseContext as releaseContext\n\t * @borrows Chart.platform.addEventListener as addEventListener\n\t * @borrows Chart.platform.removeEventListener as removeEventListener\n\t */\n\n\t/**\n\t * @interface IEvent\n\t * @prop {String} type - The event type name, possible values are:\n\t * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n\t * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n\t * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n\t * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n\t * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n\t */\n\n\tChart.helpers.extend(Chart.platform, implementation(Chart));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/platforms/platform.js\n// module id = 243\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\t// Default config for a category scale\n\tvar defaultConfig = {\n\t\tposition: 'bottom'\n\t};\n\n\tvar DatasetScale = Chart.Scale.extend({\n\t\t/**\n\t\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t\t* else fall back to data.labels\n\t\t* @private\n\t\t*/\n\t\tgetLabels: function() {\n\t\t\tvar data = this.chart.data;\n\t\t\treturn (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t\t},\n\t\t// Implement this so that\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\tme.minIndex = 0;\n\t\t\tme.maxIndex = labels.length - 1;\n\t\t\tvar findIndex;\n\n\t\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t\t// user specified min value\n\t\t\t\tfindIndex = helpers.indexOf(labels, me.options.ticks.min);\n\t\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t\t}\n\n\t\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t\t// user specified max value\n\t\t\t\tfindIndex = helpers.indexOf(labels, me.options.ticks.max);\n\t\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t\t}\n\n\t\t\tme.min = labels[me.minIndex];\n\t\t\tme.max = labels[me.maxIndex];\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\t// If we are viewing some subset of labels, slice the original array\n\t\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tif (data.yLabels && !isHorizontal) {\n\t\t\t\treturn me.getRightValue(data.datasets[datasetIndex].data[index]);\n\t\t\t}\n\t\t\treturn me.ticks[index - me.minIndex];\n\t\t},\n\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\n\t\tgetPixelForValue: function(value, index, datasetIndex, includeOffset) {\n\t\t\tvar me = this;\n\t\t\t// 1 is added because we need the length but we have the indexes\n\t\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - ((me.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\n\n\t\t\tif (value !== undefined && isNaN(index)) {\n\t\t\t\tvar labels = me.getLabels();\n\t\t\t\tvar idx = labels.indexOf(value);\n\t\t\t\tindex = idx !== -1 ? idx : index;\n\t\t\t}\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\n\t\t\t\tif (me.options.gridLines.offsetGridLines && includeOffset || me.maxIndex === me.minIndex && includeOffset) {\n\t\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t\t}\n\n\t\t\t\treturn me.left + Math.round(widthOffset);\n\t\t\t}\n\t\t\tvar valueHeight = me.height / offsetAmt;\n\t\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\n\t\t\tif (me.options.gridLines.offsetGridLines && includeOffset) {\n\t\t\t\theightOffset += (valueHeight / 2);\n\t\t\t}\n\n\t\t\treturn me.top + Math.round(heightOffset);\n\t\t},\n\t\tgetPixelForTick: function(index, includeOffset) {\n\t\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null, includeOffset);\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar value;\n\t\t\tvar offsetAmt = Math.max((me.ticks.length - ((me.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\n\t\t\tvar horz = me.isHorizontal();\n\t\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n\t\t\tpixel -= horz ? me.left : me.top;\n\n\t\t\tif (me.options.gridLines.offsetGridLines) {\n\t\t\t\tpixel -= (valueDimension / 2);\n\t\t\t}\n\n\t\t\tif (pixel <= 0) {\n\t\t\t\tvalue = 0;\n\t\t\t} else {\n\t\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t\t}\n\n\t\t\treturn value;\n\t\t},\n\t\tgetBasePixel: function() {\n\t\t\treturn this.bottom;\n\t\t}\n\t});\n\n\tChart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/scales/scale.category.js\n// module id = 244\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\t\tticks: {\n\t\t\tcallback: Chart.Ticks.formatters.linear\n\t\t}\n\t};\n\n\tvar LinearScale = Chart.LinearScaleBase.extend({\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// First Calculate the range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\tvaluesPerStack[key] = {\n\t\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store these per type\n\t\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\n\t\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\t\tvar minVal = helpers.min(values);\n\t\t\t\t\tvar maxVal = helpers.max(values);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar maxTicks;\n\t\t\tvar me = this;\n\t\t\tvar tickOpts = me.options.ticks;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n\t\t\t} else {\n\t\t\t\t// The factor of 2 used to scale the font size has been experimentally determined.\n\t\t\t\tvar tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, Chart.defaults.global.defaultFontSize);\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n\t\t\t}\n\n\t\t\treturn maxTicks;\n\t\t},\n\t\t// Called after the ticks are built. We need\n\t\thandleDirectionalChanges: function() {\n\t\t\tif (!this.isHorizontal()) {\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\t\tthis.ticks.reverse();\n\t\t\t}\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\t// Utils\n\t\tgetPixelForValue: function(value) {\n\t\t\t// This must be called after fit has been run so that\n\t\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\t\tvar me = this;\n\t\t\tvar start = me.start;\n\n\t\t\tvar rightValue = +me.getRightValue(value);\n\t\t\tvar pixel;\n\t\t\tvar range = me.end - start;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\n\t\t\t\treturn Math.round(pixel);\n\t\t\t}\n\n\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\n\t\t\treturn Math.round(pixel);\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar innerDimension = isHorizontal ? me.width : me.height;\n\t\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n\t\t\treturn me.start + ((me.end - me.start) * offset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/scales/scale.linear.js\n// module id = 245\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers,\n\t\tnoop = helpers.noop;\n\n\tChart.LinearScaleBase = Chart.Scale.extend({\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t\t// axis, they can manually override it\n\t\t\tif (tickOpts.beginAtZero) {\n\t\t\t\tvar minSign = helpers.sign(me.min);\n\t\t\t\tvar maxSign = helpers.sign(me.max);\n\n\t\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t\t// move the top up to 0\n\t\t\t\t\tme.max = 0;\n\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t\t// move the bottom down to 0\n\t\t\t\t\tme.min = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tickOpts.min !== undefined) {\n\t\t\t\tme.min = tickOpts.min;\n\t\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t}\n\n\t\t\tif (tickOpts.max !== undefined) {\n\t\t\t\tme.max = tickOpts.max;\n\t\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t}\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tme.max++;\n\n\t\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\t\tme.min--;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgetTickLimit: noop,\n\t\thandleDirectionalChanges: noop,\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t\t// the graph. Make sure we always have at least 2 ticks\n\t\t\tvar maxTicks = me.getTickLimit();\n\t\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\t\tvar numericGeneratorOptions = {\n\t\t\t\tmaxTicks: maxTicks,\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max,\n\t\t\t\tstepSize: helpers.getValueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t\t};\n\t\t\tvar ticks = me.ticks = Chart.Ticks.generators.linear(numericGeneratorOptions, me);\n\n\t\t\tme.handleDirectionalChanges();\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\tticks.reverse();\n\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(me);\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/scales/scale.linearbase.js\n// module id = 246\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\n\t\t// label settings\n\t\tticks: {\n\t\t\tcallback: Chart.Ticks.formatters.logarithmic\n\t\t}\n\t};\n\n\tvar LogarithmicScale = Chart.Scale.extend({\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// Calculate Range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\t\t\tme.minNotZero = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\t\tvaluesPerStack[key] = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar values = valuesPerStack[key];\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\n\t\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\t\tvalues[index] = 100;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Don't need to split positive and negative since the log scale can't handle a 0 crossing\n\t\t\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tvar minVal = helpers.min(valuesForType);\n\t\t\t\t\tvar maxVal = helpers.max(valuesForType);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.min = getValueOrDefault(tickOpts.min, me.min);\n\t\t\tme.max = getValueOrDefault(tickOpts.max, me.max);\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n\t\t\t\t\tme.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n\t\t\t\t} else {\n\t\t\t\t\tme.min = 1;\n\t\t\t\t\tme.max = 10;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\tvar generationOptions = {\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max\n\t\t\t};\n\t\t\tvar ticks = me.ticks = Chart.Ticks.generators.logarithmic(generationOptions, me);\n\n\t\t\tif (!me.isHorizontal()) {\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\t\tticks.reverse();\n\t\t\t}\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\tticks.reverse();\n\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tthis.tickValues = this.ticks.slice();\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(this);\n\t\t},\n\t\t// Get the correct tooltip label\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t\t},\n\t\tgetPixelForValue: function(value) {\n\t\t\tvar me = this;\n\t\t\tvar innerDimension;\n\t\t\tvar pixel;\n\n\t\t\tvar start = me.start;\n\t\t\tvar newVal = +me.getRightValue(value);\n\t\t\tvar range;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\trange = helpers.log10(me.end) - helpers.log10(start); // todo: if start === 0\n\t\t\t\tif (newVal === 0) {\n\t\t\t\t\tpixel = me.left;\n\t\t\t\t} else {\n\t\t\t\t\tinnerDimension = me.width;\n\t\t\t\t\tpixel = me.left + (innerDimension / range * (helpers.log10(newVal) - helpers.log10(start)));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Bottom - top since pixels increase downward on a screen\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tif (start === 0 && !tickOpts.reverse) {\n\t\t\t\t\trange = helpers.log10(me.end) - helpers.log10(me.minNotZero);\n\t\t\t\t\tif (newVal === start) {\n\t\t\t\t\t\tpixel = me.bottom;\n\t\t\t\t\t} else if (newVal === me.minNotZero) {\n\t\t\t\t\t\tpixel = me.bottom - innerDimension * 0.02;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpixel = me.bottom - innerDimension * 0.02 - (innerDimension * 0.98/ range * (helpers.log10(newVal)-helpers.log10(me.minNotZero)));\n\t\t\t\t\t}\n\t\t\t\t} else if (me.end === 0 && tickOpts.reverse) {\n\t\t\t\t\trange = helpers.log10(me.start) - helpers.log10(me.minNotZero);\n\t\t\t\t\tif (newVal === me.end) {\n\t\t\t\t\t\tpixel = me.top;\n\t\t\t\t\t} else if (newVal === me.minNotZero) {\n\t\t\t\t\t\tpixel = me.top + innerDimension * 0.02;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpixel = me.top + innerDimension * 0.02 + (innerDimension * 0.98/ range * (helpers.log10(newVal)-helpers.log10(me.minNotZero)));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trange = helpers.log10(me.end) - helpers.log10(start);\n\t\t\t\t\tinnerDimension = me.height;\n\t\t\t\t\tpixel = me.bottom - (innerDimension / range * (helpers.log10(newVal) - helpers.log10(start)));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar range = helpers.log10(me.end) - helpers.log10(me.start);\n\t\t\tvar value, innerDimension;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tvalue = me.start * Math.pow(10, (pixel - me.left) * range / innerDimension);\n\t\t\t} else {  // todo: if start === 0\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tvalue = Math.pow(10, (me.bottom - pixel) * range / innerDimension) / me.start;\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/scales/scale.logarithmic.js\n// module id = 247\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\tvar globalDefaults = Chart.defaults.global;\n\n\tvar defaultConfig = {\n\t\tdisplay: true,\n\n\t\t// Boolean - Whether to animate scaling the chart from the centre\n\t\tanimate: true,\n\t\tlineArc: false,\n\t\tposition: 'chartArea',\n\n\t\tangleLines: {\n\t\t\tdisplay: true,\n\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\t\tlineWidth: 1\n\t\t},\n\n\t\t// label settings\n\t\tticks: {\n\t\t\t// Boolean - Show a backdrop to the scale label\n\t\t\tshowLabelBackdrop: true,\n\n\t\t\t// String - The colour of the label backdrop\n\t\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\n\t\t\t// Number - The backdrop padding above & below the label in pixels\n\t\t\tbackdropPaddingY: 2,\n\n\t\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\t\tbackdropPaddingX: 2,\n\n\t\t\tcallback: Chart.Ticks.formatters.linear\n\t\t},\n\n\t\tpointLabels: {\n\t\t\t// Number - Point label font size in pixels\n\t\t\tfontSize: 10,\n\n\t\t\t// Function - Used to convert point labels\n\t\t\tcallback: function(label) {\n\t\t\t\treturn label;\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction getValueCount(scale) {\n\t\treturn !scale.options.lineArc ? scale.chart.data.labels.length : 0;\n\t}\n\n\tfunction getPointLabelFontOptions(scale) {\n\t\tvar pointLabelOptions = scale.options.pointLabels;\n\t\tvar fontSize = helpers.getValueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n\t\tvar fontStyle = helpers.getValueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar fontFamily = helpers.getValueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n\t\tvar font = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\treturn {\n\t\t\tsize: fontSize,\n\t\t\tstyle: fontStyle,\n\t\t\tfamily: fontFamily,\n\t\t\tfont: font\n\t\t};\n\t}\n\n\tfunction measureLabelSize(ctx, fontSize, label) {\n\t\tif (helpers.isArray(label)) {\n\t\t\treturn {\n\t\t\t\tw: helpers.longestText(ctx, ctx.font, label),\n\t\t\t\th: (label.length * fontSize) + ((label.length - 1) * 1.5 * fontSize)\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tw: ctx.measureText(label).width,\n\t\t\th: fontSize\n\t\t};\n\t}\n\n\tfunction determineLimits(angle, pos, size, min, max) {\n\t\tif (angle === min || angle === max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - (size / 2),\n\t\t\t\tend: pos + (size / 2)\n\t\t\t};\n\t\t} else if (angle < min || angle > max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - size - 5,\n\t\t\t\tend: pos\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tstart: pos,\n\t\t\tend: pos + size + 5\n\t\t};\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with point labels\n\t */\n\tfunction fitWithPointLabels(scale) {\n\t\t/*\n\t\t * Right, this is really confusing and there is a lot of maths going on here\n\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t\t *\n\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t\t *\n\t\t * Solution:\n\t\t *\n\t\t * We assume the radius of the polygon is half the size of the canvas at first\n\t\t * at each index we check if the text overlaps.\n\t\t *\n\t\t * Where it does, we store that angle and that index.\n\t\t *\n\t\t * After finding the largest index and angle we calculate how much we need to remove\n\t\t * from the shape radius to move the point inwards by that x.\n\t\t *\n\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\n\t\t * along with labels.\n\t\t *\n\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t\t *\n\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t\t * and position it in the most space efficient manner\n\t\t *\n\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\t\t */\n\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tvar furthestLimits = {\n\t\t\tl: scale.width,\n\t\t\tr: 0,\n\t\t\tt: scale.height,\n\t\t\tb: 0\n\t\t};\n\t\tvar furthestAngles = {};\n\t\tvar i;\n\t\tvar textSize;\n\t\tvar pointPosition;\n\n\t\tscale.ctx.font = plFont.font;\n\t\tscale._pointLabelSizes = [];\n\n\t\tvar valueCount = getValueCount(scale);\n\t\tfor (i = 0; i < valueCount; i++) {\n\t\t\tpointPosition = scale.getPointPosition(i, largestPossibleRadius);\n\t\t\ttextSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n\t\t\tscale._pointLabelSizes[i] = textSize;\n\n\t\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers.toDegrees(angleRadians) % 360;\n\t\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n\t\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n\t\t\tif (hLimits.start < furthestLimits.l) {\n\t\t\t\tfurthestLimits.l = hLimits.start;\n\t\t\t\tfurthestAngles.l = angleRadians;\n\t\t\t}\n\n\t\t\tif (hLimits.end > furthestLimits.r) {\n\t\t\t\tfurthestLimits.r = hLimits.end;\n\t\t\t\tfurthestAngles.r = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.start < furthestLimits.t) {\n\t\t\t\tfurthestLimits.t = vLimits.start;\n\t\t\t\tfurthestAngles.t = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.end > furthestLimits.b) {\n\t\t\t\tfurthestLimits.b = vLimits.end;\n\t\t\t\tfurthestAngles.b = angleRadians;\n\t\t\t}\n\t\t}\n\n\t\tscale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with no point labels\n\t */\n\tfunction fit(scale) {\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tscale.drawingArea = Math.round(largestPossibleRadius);\n\t\tscale.setCenterPoint(0, 0, 0, 0);\n\t}\n\n\tfunction getTextAlignForAngle(angle) {\n\t\tif (angle === 0 || angle === 180) {\n\t\t\treturn 'center';\n\t\t} else if (angle < 180) {\n\t\t\treturn 'left';\n\t\t}\n\n\t\treturn 'right';\n\t}\n\n\tfunction fillText(ctx, text, position, fontSize) {\n\t\tif (helpers.isArray(text)) {\n\t\t\tvar y = position.y;\n\t\t\tvar spacing = 1.5 * fontSize;\n\n\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\tctx.fillText(text[i], position.x, y);\n\t\t\t\ty+= spacing;\n\t\t\t}\n\t\t} else {\n\t\t\tctx.fillText(text, position.x, position.y);\n\t\t}\n\t}\n\n\tfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n\t\tif (angle === 90 || angle === 270) {\n\t\t\tposition.y -= (textSize.h / 2);\n\t\t} else if (angle > 270 || angle < 90) {\n\t\t\tposition.y -= textSize.h;\n\t\t}\n\t}\n\n\tfunction drawPointLabels(scale) {\n\t\tvar ctx = scale.ctx;\n\t\tvar getValueOrDefault = helpers.getValueOrDefault;\n\t\tvar opts = scale.options;\n\t\tvar angleLineOpts = opts.angleLines;\n\t\tvar pointLabelOpts = opts.pointLabels;\n\n\t\tctx.lineWidth = angleLineOpts.lineWidth;\n\t\tctx.strokeStyle = angleLineOpts.color;\n\n\t\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.reverse ? scale.min : scale.max);\n\n\t\t// Point Label Font\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\tctx.textBaseline = 'top';\n\n\t\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\n\t\t\tif (angleLineOpts.display) {\n\t\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\n\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.closePath();\n\t\t\t}\n\t\t\t// Extra 3px out for some label spacing\n\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + 5);\n\n\t\t\t// Keep this in loop since we may support array properties here\n\t\t\tvar pointLabelFontColor = getValueOrDefault(pointLabelOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\tctx.font = plFont.font;\n\t\t\tctx.fillStyle = pointLabelFontColor;\n\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers.toDegrees(angleRadians);\n\t\t\tctx.textAlign = getTextAlignForAngle(angle);\n\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n\t\t}\n\t}\n\n\tfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\n\t\tvar ctx = scale.ctx;\n\t\tctx.strokeStyle = helpers.getValueAtIndexOrDefault(gridLineOpts.color, index - 1);\n\t\tctx.lineWidth = helpers.getValueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n\t\tif (scale.options.lineArc) {\n\t\t\t// Draw circular arcs between the points\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t} else {\n\t\t\t// Draw straight lines connecting each index\n\t\t\tvar valueCount = getValueCount(scale);\n\n\t\t\tif (valueCount === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\t\t\tvar pointPosition = scale.getPointPosition(0, radius);\n\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\n\t\t\tfor (var i = 1; i < valueCount; i++) {\n\t\t\t\tpointPosition = scale.getPointPosition(i, radius);\n\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t\t}\n\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t}\n\t}\n\n\tfunction numberOrZero(param) {\n\t\treturn helpers.isNumber(param) ? param : 0;\n\t}\n\n\tvar LinearRadialScale = Chart.LinearScaleBase.extend({\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.height = me.maxHeight;\n\t\t\tme.xCenter = Math.round(me.width / 2);\n\t\t\tme.yCenter = Math.round(me.height / 2);\n\n\t\t\tvar minSize = helpers.min([me.height, me.width]);\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tme.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);\n\t\t},\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar min = Number.POSITIVE_INFINITY;\n\t\t\tvar max = Number.NEGATIVE_INFINITY;\n\n\t\t\thelpers.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\n\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmin = Math.min(value, min);\n\t\t\t\t\t\tmax = Math.max(value, max);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\n\t\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tme.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar tickOpts = this.options.ticks;\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\treturn Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\tChart.LinearScaleBase.prototype.convertTicksToLabels.call(me);\n\n\t\t\t// Point labels\n\t\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tfit: function() {\n\t\t\tif (this.options.lineArc) {\n\t\t\t\tfit(this);\n\t\t\t} else {\n\t\t\t\tfitWithPointLabels(this);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Set radius reductions and determine new radius and center point\n\t\t * @private\n\t\t */\n\t\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\n\t\t\tvar me = this;\n\t\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n\t\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n\t\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n\t\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n\n\t\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\n\t\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\n\t\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\n\t\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\n\n\t\t\tme.drawingArea = Math.min(\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n\t\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n\t\t},\n\t\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\n\t\t\tvar me = this;\n\t\t\tvar maxRight = me.width - rightMovement - me.drawingArea,\n\t\t\t\tmaxLeft = leftMovement + me.drawingArea,\n\t\t\t\tmaxTop = topMovement + me.drawingArea,\n\t\t\t\tmaxBottom = me.height - bottomMovement - me.drawingArea;\n\n\t\t\tme.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);\n\t\t\tme.yCenter = Math.round(((maxTop + maxBottom) / 2) + me.top);\n\t\t},\n\n\t\tgetIndexAngle: function(index) {\n\t\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\n\t\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\t\tthis.chart.options.startAngle :\n\t\t\t\t0;\n\n\t\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\t\treturn index * angleMultiplier + startAngleRadians;\n\t\t},\n\t\tgetDistanceFromCenterForValue: function(value) {\n\t\t\tvar me = this;\n\n\t\t\tif (value === null) {\n\t\t\t\treturn 0; // null always in center\n\t\t\t}\n\n\t\t\t// Take into account half font size + the yPadding of the top value\n\t\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\t\tif (me.options.reverse) {\n\t\t\t\treturn (me.max - value) * scalingFactor;\n\t\t\t}\n\t\t\treturn (value - me.min) * scalingFactor;\n\t\t},\n\t\tgetPointPosition: function(index, distanceFromCenter) {\n\t\t\tvar me = this;\n\t\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\n\t\t\treturn {\n\t\t\t\tx: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n\t\t\t\ty: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n\t\t\t};\n\t\t},\n\t\tgetPointPositionForValue: function(index, value) {\n\t\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t\t},\n\n\t\tgetBasePosition: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.getPointPositionForValue(0,\n\t\t\t\tme.beginAtZero? 0:\n\t\t\t\tmin < 0 && max < 0? max :\n\t\t\t\tmin > 0 && max > 0? min :\n\t\t\t\t0);\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\n\n\t\t\tif (opts.display) {\n\t\t\t\tvar ctx = me.ctx;\n\n\t\t\t\t// Tick Font\n\t\t\t\tvar tickFontSize = getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\t\tvar tickFontStyle = getValueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\t\tvar tickFontFamily = getValueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\n\t\t\t\thelpers.each(me.ticks, function(label, index) {\n\t\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\t\tif (index > 0 || opts.reverse) {\n\t\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\t\t\t\t\t\tvar yHeight = me.yCenter - yCenterOffset;\n\n\t\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\t\tvar tickFontColor = getValueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\t\t\t\t\tctx.font = tickLabelFont;\n\n\t\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t\tme.xCenter - labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t\tyHeight - tickFontSize / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\t\ttickFontSize + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\t\tctx.fillText(label, me.xCenter, yHeight);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (!opts.lineArc) {\n\t\t\t\t\tdrawPointLabels(me);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/scales/scale.radialLinear.js\n// module id = 248\n// module chunks = 0","/* global window: false */\n'use strict';\n\nvar moment = require('moment');\nmoment = typeof(moment) === 'function' ? moment : window.moment;\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\tvar time = {\n\t\tunits: [{\n\t\t\tname: 'millisecond',\n\t\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t\t}, {\n\t\t\tname: 'second',\n\t\t\tsteps: [1, 2, 5, 10, 30]\n\t\t}, {\n\t\t\tname: 'minute',\n\t\t\tsteps: [1, 2, 5, 10, 30]\n\t\t}, {\n\t\t\tname: 'hour',\n\t\t\tsteps: [1, 2, 3, 6, 12]\n\t\t}, {\n\t\t\tname: 'day',\n\t\t\tsteps: [1, 2, 5]\n\t\t}, {\n\t\t\tname: 'week',\n\t\t\tmaxStep: 4\n\t\t}, {\n\t\t\tname: 'month',\n\t\t\tmaxStep: 3\n\t\t}, {\n\t\t\tname: 'quarter',\n\t\t\tmaxStep: 4\n\t\t}, {\n\t\t\tname: 'year',\n\t\t\tmaxStep: false\n\t\t}]\n\t};\n\n\tvar defaultConfig = {\n\t\tposition: 'bottom',\n\n\t\ttime: {\n\t\t\tparser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n\t\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\t\tround: false, // none, or override with week, month, year, etc.\n\t\t\tdisplayFormat: false, // DEPRECATED\n\t\t\tisoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n\t\t\tminUnit: 'millisecond',\n\n\t\t\t// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n\t\t\tdisplayFormats: {\n\t\t\t\tmillisecond: 'h:mm:ss.SSS a', // 11:20:01.123 AM,\n\t\t\t\tsecond: 'h:mm:ss a', // 11:20:01 AM\n\t\t\t\tminute: 'h:mm:ss a', // 11:20:01 AM\n\t\t\t\thour: 'MMM D, hA', // Sept 4, 5PM\n\t\t\t\tday: 'll', // Sep 4 2015\n\t\t\t\tweek: 'll', // Week 46, or maybe \"[W]WW - YYYY\" ?\n\t\t\t\tmonth: 'MMM YYYY', // Sept 2015\n\t\t\t\tquarter: '[Q]Q - YYYY', // Q3\n\t\t\t\tyear: 'YYYY' // 2015\n\t\t\t}\n\t\t},\n\t\tticks: {\n\t\t\tautoSkip: false\n\t\t}\n\t};\n\n\tvar TimeScale = Chart.Scale.extend({\n\t\tinitialize: function() {\n\t\t\tif (!moment) {\n\t\t\t\tthrow new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n\t\t\t}\n\n\t\t\tChart.Scale.prototype.initialize.call(this);\n\t\t},\n\t\tgetLabelMoment: function(datasetIndex, index) {\n\t\t\tif (datasetIndex === null || index === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (typeof this.labelMoments[datasetIndex] !== 'undefined') {\n\t\t\t\treturn this.labelMoments[datasetIndex][index];\n\t\t\t}\n\n\t\t\treturn null;\n\t\t},\n\t\tgetLabelDiff: function(datasetIndex, index) {\n\t\t\tvar me = this;\n\t\t\tif (datasetIndex === null || index === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (me.labelDiffs === undefined) {\n\t\t\t\tme.buildLabelDiffs();\n\t\t\t}\n\n\t\t\tif (typeof me.labelDiffs[datasetIndex] !== 'undefined') {\n\t\t\t\treturn me.labelDiffs[datasetIndex][index];\n\t\t\t}\n\n\t\t\treturn null;\n\t\t},\n\t\tgetMomentStartOf: function(tick) {\n\t\t\tvar me = this;\n\t\t\tif (me.options.time.unit === 'week' && me.options.time.isoWeekday !== false) {\n\t\t\t\treturn tick.clone().startOf('isoWeek').isoWeekday(me.options.time.isoWeekday);\n\t\t\t}\n\t\t\treturn tick.clone().startOf(me.tickUnit);\n\t\t},\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tme.labelMoments = [];\n\n\t\t\t// Only parse these once. If the dataset does not have data as x,y pairs, we will use\n\t\t\t// these\n\t\t\tvar scaleLabelMoments = [];\n\t\t\tif (me.chart.data.labels && me.chart.data.labels.length > 0) {\n\t\t\t\thelpers.each(me.chart.data.labels, function(label) {\n\t\t\t\t\tvar labelMoment = me.parseTime(label);\n\n\t\t\t\t\tif (labelMoment.isValid()) {\n\t\t\t\t\t\tif (me.options.time.round) {\n\t\t\t\t\t\t\tlabelMoment.startOf(me.options.time.round);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tscaleLabelMoments.push(labelMoment);\n\t\t\t\t\t}\n\t\t\t\t}, me);\n\n\t\t\t\tme.firstTick = moment.min.call(me, scaleLabelMoments);\n\t\t\t\tme.lastTick = moment.max.call(me, scaleLabelMoments);\n\t\t\t} else {\n\t\t\t\tme.firstTick = null;\n\t\t\t\tme.lastTick = null;\n\t\t\t}\n\n\t\t\thelpers.each(me.chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar momentsForDataset = [];\n\t\t\t\tvar datasetVisible = me.chart.isDatasetVisible(datasetIndex);\n\n\t\t\t\tif (typeof dataset.data[0] === 'object' && dataset.data[0] !== null) {\n\t\t\t\t\thelpers.each(dataset.data, function(value) {\n\t\t\t\t\t\tvar labelMoment = me.parseTime(me.getRightValue(value));\n\n\t\t\t\t\t\tif (labelMoment.isValid()) {\n\t\t\t\t\t\t\tif (me.options.time.round) {\n\t\t\t\t\t\t\t\tlabelMoment.startOf(me.options.time.round);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmomentsForDataset.push(labelMoment);\n\n\t\t\t\t\t\t\tif (datasetVisible) {\n\t\t\t\t\t\t\t\t// May have gone outside the scale ranges, make sure we keep the first and last ticks updated\n\t\t\t\t\t\t\t\tme.firstTick = me.firstTick !== null ? moment.min(me.firstTick, labelMoment) : labelMoment;\n\t\t\t\t\t\t\t\tme.lastTick = me.lastTick !== null ? moment.max(me.lastTick, labelMoment) : labelMoment;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}, me);\n\t\t\t\t} else {\n\t\t\t\t\t// We have no labels. Use the ones from the scale\n\t\t\t\t\tmomentsForDataset = scaleLabelMoments;\n\t\t\t\t}\n\n\t\t\t\tme.labelMoments.push(momentsForDataset);\n\t\t\t}, me);\n\n\t\t\t// Set these after we've done all the data\n\t\t\tif (me.options.time.min) {\n\t\t\t\tme.firstTick = me.parseTime(me.options.time.min);\n\t\t\t}\n\n\t\t\tif (me.options.time.max) {\n\t\t\t\tme.lastTick = me.parseTime(me.options.time.max);\n\t\t\t}\n\n\t\t\t// We will modify these, so clone for later\n\t\t\tme.firstTick = (me.firstTick || moment()).clone();\n\t\t\tme.lastTick = (me.lastTick || moment()).clone();\n\t\t},\n\t\tbuildLabelDiffs: function() {\n\t\t\tvar me = this;\n\t\t\tme.labelDiffs = [];\n\t\t\tvar scaleLabelDiffs = [];\n\t\t\t// Parse common labels once\n\t\t\tif (me.chart.data.labels && me.chart.data.labels.length > 0) {\n\t\t\t\thelpers.each(me.chart.data.labels, function(label) {\n\t\t\t\t\tvar labelMoment = me.parseTime(label);\n\n\t\t\t\t\tif (labelMoment.isValid()) {\n\t\t\t\t\t\tif (me.options.time.round) {\n\t\t\t\t\t\t\tlabelMoment.startOf(me.options.time.round);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tscaleLabelDiffs.push(labelMoment.diff(me.firstTick, me.tickUnit, true));\n\t\t\t\t\t}\n\t\t\t\t}, me);\n\t\t\t}\n\n\t\t\thelpers.each(me.chart.data.datasets, function(dataset) {\n\t\t\t\tvar diffsForDataset = [];\n\n\t\t\t\tif (typeof dataset.data[0] === 'object' && dataset.data[0] !== null) {\n\t\t\t\t\thelpers.each(dataset.data, function(value) {\n\t\t\t\t\t\tvar labelMoment = me.parseTime(me.getRightValue(value));\n\n\t\t\t\t\t\tif (labelMoment.isValid()) {\n\t\t\t\t\t\t\tif (me.options.time.round) {\n\t\t\t\t\t\t\t\tlabelMoment.startOf(me.options.time.round);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdiffsForDataset.push(labelMoment.diff(me.firstTick, me.tickUnit, true));\n\t\t\t\t\t\t}\n\t\t\t\t\t}, me);\n\t\t\t\t} else {\n\t\t\t\t\t// We have no labels. Use common ones\n\t\t\t\t\tdiffsForDataset = scaleLabelDiffs;\n\t\t\t\t}\n\n\t\t\t\tme.labelDiffs.push(diffsForDataset);\n\t\t\t}, me);\n\t\t},\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\n\t\t\tme.ctx.save();\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\n\t\t\tvar tickFontStyle = helpers.getValueOrDefault(me.options.ticks.fontStyle, Chart.defaults.global.defaultFontStyle);\n\t\t\tvar tickFontFamily = helpers.getValueOrDefault(me.options.ticks.fontFamily, Chart.defaults.global.defaultFontFamily);\n\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\t\t\tme.ctx.font = tickLabelFont;\n\n\t\t\tme.ticks = [];\n\t\t\tme.unitScale = 1; // How much we scale the unit by, ie 2 means 2x unit per step\n\t\t\tme.scaleSizeInUnits = 0; // How large the scale is in the base unit (seconds, minutes, etc)\n\n\t\t\t// Set unit override if applicable\n\t\t\tif (me.options.time.unit) {\n\t\t\t\tme.tickUnit = me.options.time.unit || 'day';\n\t\t\t\tme.displayFormat = me.options.time.displayFormats[me.tickUnit];\n\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true);\n\t\t\t\tme.unitScale = helpers.getValueOrDefault(me.options.time.unitStepSize, 1);\n\t\t\t} else {\n\t\t\t\t// Determine the smallest needed unit of the time\n\t\t\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\n\n\t\t\t\t// Crude approximation of what the label length might be\n\t\t\t\tvar tempFirstLabel = me.tickFormatFunction(me.firstTick, 0, []);\n\t\t\t\tvar tickLabelWidth = me.ctx.measureText(tempFirstLabel).width;\n\t\t\t\tvar cosRotation = Math.cos(helpers.toRadians(me.options.ticks.maxRotation));\n\t\t\t\tvar sinRotation = Math.sin(helpers.toRadians(me.options.ticks.maxRotation));\n\t\t\t\ttickLabelWidth = (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t\t\t\tvar labelCapacity = innerWidth / (tickLabelWidth);\n\n\t\t\t\t// Start as small as possible\n\t\t\t\tme.tickUnit = me.options.time.minUnit;\n\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true);\n\t\t\t\tme.displayFormat = me.options.time.displayFormats[me.tickUnit];\n\n\t\t\t\tvar unitDefinitionIndex = 0;\n\t\t\t\tvar unitDefinition = time.units[unitDefinitionIndex];\n\n\t\t\t\t// While we aren't ideal and we don't have units left\n\t\t\t\twhile (unitDefinitionIndex < time.units.length) {\n\t\t\t\t\t// Can we scale this unit. If `false` we can scale infinitely\n\t\t\t\t\tme.unitScale = 1;\n\n\t\t\t\t\tif (helpers.isArray(unitDefinition.steps) && Math.ceil(me.scaleSizeInUnits / labelCapacity) < helpers.max(unitDefinition.steps)) {\n\t\t\t\t\t\t// Use one of the predefined steps\n\t\t\t\t\t\tfor (var idx = 0; idx < unitDefinition.steps.length; ++idx) {\n\t\t\t\t\t\t\tif (unitDefinition.steps[idx] >= Math.ceil(me.scaleSizeInUnits / labelCapacity)) {\n\t\t\t\t\t\t\t\tme.unitScale = helpers.getValueOrDefault(me.options.time.unitStepSize, unitDefinition.steps[idx]);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if ((unitDefinition.maxStep === false) || (Math.ceil(me.scaleSizeInUnits / labelCapacity) < unitDefinition.maxStep)) {\n\t\t\t\t\t\t// We have a max step. Scale this unit\n\t\t\t\t\t\tme.unitScale = helpers.getValueOrDefault(me.options.time.unitStepSize, Math.ceil(me.scaleSizeInUnits / labelCapacity));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Move to the next unit up\n\t\t\t\t\t\t++unitDefinitionIndex;\n\t\t\t\t\t\tunitDefinition = time.units[unitDefinitionIndex];\n\n\t\t\t\t\t\tme.tickUnit = unitDefinition.name;\n\t\t\t\t\t\tvar leadingUnitBuffer = me.firstTick.diff(me.getMomentStartOf(me.firstTick), me.tickUnit, true);\n\t\t\t\t\t\tvar trailingUnitBuffer = me.getMomentStartOf(me.lastTick.clone().add(1, me.tickUnit)).diff(me.lastTick, me.tickUnit, true);\n\t\t\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true) + leadingUnitBuffer + trailingUnitBuffer;\n\t\t\t\t\t\tme.displayFormat = me.options.time.displayFormats[unitDefinition.name];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar roundedStart;\n\n\t\t\t// Only round the first tick if we have no hard minimum\n\t\t\tif (!me.options.time.min) {\n\t\t\t\tme.firstTick = me.getMomentStartOf(me.firstTick);\n\t\t\t\troundedStart = me.firstTick;\n\t\t\t} else {\n\t\t\t\troundedStart = me.getMomentStartOf(me.firstTick);\n\t\t\t}\n\n\t\t\t// Only round the last tick if we have no hard maximum\n\t\t\tif (!me.options.time.max) {\n\t\t\t\tvar roundedEnd = me.getMomentStartOf(me.lastTick);\n\t\t\t\tvar delta = roundedEnd.diff(me.lastTick, me.tickUnit, true);\n\t\t\t\tif (delta < 0) {\n\t\t\t\t\t// Do not use end of because we need me to be in the next time unit\n\t\t\t\t\tme.lastTick = me.getMomentStartOf(me.lastTick.add(1, me.tickUnit));\n\t\t\t\t} else if (delta >= 0) {\n\t\t\t\t\tme.lastTick = roundedEnd;\n\t\t\t\t}\n\n\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true);\n\t\t\t}\n\n\t\t\t// Tick displayFormat override\n\t\t\tif (me.options.time.displayFormat) {\n\t\t\t\tme.displayFormat = me.options.time.displayFormat;\n\t\t\t}\n\n\t\t\t// first tick. will have been rounded correctly if options.time.min is not specified\n\t\t\tme.ticks.push(me.firstTick.clone());\n\n\t\t\t// For every unit in between the first and last moment, create a moment and add it to the ticks tick\n\t\t\tfor (var i = me.unitScale; i <= me.scaleSizeInUnits; i += me.unitScale) {\n\t\t\t\tvar newTick = roundedStart.clone().add(i, me.tickUnit);\n\n\t\t\t\t// Are we greater than the max time\n\t\t\t\tif (me.options.time.max && newTick.diff(me.lastTick, me.tickUnit, true) >= 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tme.ticks.push(newTick);\n\t\t\t}\n\n\t\t\t// Always show the right tick\n\t\t\tvar diff = me.ticks[me.ticks.length - 1].diff(me.lastTick, me.tickUnit);\n\t\t\tif (diff !== 0 || me.scaleSizeInUnits === 0) {\n\t\t\t\t// this is a weird case. If the <max> option is the same as the end option, we can't just diff the times because the tick was created from the roundedStart\n\t\t\t\t// but the last tick was not rounded.\n\t\t\t\tif (me.options.time.max) {\n\t\t\t\t\tme.ticks.push(me.lastTick.clone());\n\t\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.ticks[0], me.tickUnit, true);\n\t\t\t\t} else {\n\t\t\t\t\tme.ticks.push(me.lastTick.clone());\n\t\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.ctx.restore();\n\n\t\t\t// Invalidate label diffs cache\n\t\t\tme.labelDiffs = undefined;\n\t\t},\n\t\t// Get tooltip label\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar label = me.chart.data.labels && index < me.chart.data.labels.length ? me.chart.data.labels[index] : '';\n\t\t\tvar value = me.chart.data.datasets[datasetIndex].data[index];\n\n\t\t\tif (value !== null && typeof value === 'object') {\n\t\t\t\tlabel = me.getRightValue(value);\n\t\t\t}\n\n\t\t\t// Format nicely\n\t\t\tif (me.options.time.tooltipFormat) {\n\t\t\t\tlabel = me.parseTime(label).format(me.options.time.tooltipFormat);\n\t\t\t}\n\n\t\t\treturn label;\n\t\t},\n\t\t// Function to format an individual tick mark\n\t\ttickFormatFunction: function(tick, index, ticks) {\n\t\t\tvar formattedTick = tick.format(this.displayFormat);\n\t\t\tvar tickOpts = this.options.ticks;\n\t\t\tvar callback = helpers.getValueOrDefault(tickOpts.callback, tickOpts.userCallback);\n\n\t\t\tif (callback) {\n\t\t\t\treturn callback(formattedTick, index, ticks);\n\t\t\t}\n\t\t\treturn formattedTick;\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\tme.tickMoments = me.ticks;\n\t\t\tme.ticks = me.ticks.map(me.tickFormatFunction, me);\n\t\t},\n\t\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar offset = null;\n\t\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\t\toffset = me.getLabelDiff(datasetIndex, index);\n\t\t\t}\n\n\t\t\tif (offset === null) {\n\t\t\t\tif (!value || !value.isValid) {\n\t\t\t\t\t// not already a moment object\n\t\t\t\t\tvalue = me.parseTime(me.getRightValue(value));\n\t\t\t\t}\n\t\t\t\tif (value && value.isValid && value.isValid()) {\n\t\t\t\t\toffset = value.diff(me.firstTick, me.tickUnit, true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (offset !== null) {\n\t\t\t\tvar decimal = offset !== 0 ? offset / me.scaleSizeInUnits : offset;\n\n\t\t\t\tif (me.isHorizontal()) {\n\t\t\t\t\tvar valueOffset = (me.width * decimal);\n\t\t\t\t\treturn me.left + Math.round(valueOffset);\n\t\t\t\t}\n\n\t\t\t\tvar heightOffset = (me.height * decimal);\n\t\t\t\treturn me.top + Math.round(heightOffset);\n\t\t\t}\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.tickMoments[index], null, null);\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar innerDimension = me.isHorizontal() ? me.width : me.height;\n\t\t\tvar offset = (pixel - (me.isHorizontal() ? me.left : me.top)) / innerDimension;\n\t\t\toffset *= me.scaleSizeInUnits;\n\t\t\treturn me.firstTick.clone().add(moment.duration(offset, me.tickUnit).asSeconds(), 'seconds');\n\t\t},\n\t\tparseTime: function(label) {\n\t\t\tvar me = this;\n\t\t\tif (typeof me.options.time.parser === 'string') {\n\t\t\t\treturn moment(label, me.options.time.parser);\n\t\t\t}\n\t\t\tif (typeof me.options.time.parser === 'function') {\n\t\t\t\treturn me.options.time.parser(label);\n\t\t\t}\n\t\t\t// Date objects\n\t\t\tif (typeof label.getMonth === 'function' || typeof label === 'number') {\n\t\t\t\treturn moment(label);\n\t\t\t}\n\t\t\t// Moment support\n\t\t\tif (label.isValid && label.isValid()) {\n\t\t\t\treturn label;\n\t\t\t}\n\t\t\t// Custom parsing (return an instance of moment)\n\t\t\tif (typeof me.options.time.format !== 'string' && me.options.time.format.call) {\n\t\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser. See http://nnnick.github.io/Chart.js/docs-v2/#scales-time-scale');\n\t\t\t\treturn me.options.time.format(label);\n\t\t\t}\n\t\t\t// Moment format parsing\n\t\t\treturn moment(label, me.options.time.format);\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('time', TimeScale, defaultConfig);\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/scales/scale.time.js\n// module id = 249\n// module chunks = 0","/* MIT license */\r\nvar colorNames = require('color-name');\r\n\r\nmodule.exports = {\r\n   getRgba: getRgba,\r\n   getHsla: getHsla,\r\n   getRgb: getRgb,\r\n   getHsl: getHsl,\r\n   getHwb: getHwb,\r\n   getAlpha: getAlpha,\r\n\r\n   hexString: hexString,\r\n   rgbString: rgbString,\r\n   rgbaString: rgbaString,\r\n   percentString: percentString,\r\n   percentaString: percentaString,\r\n   hslString: hslString,\r\n   hslaString: hslaString,\r\n   hwbString: hwbString,\r\n   keyword: keyword\r\n}\r\n\r\nfunction getRgba(string) {\r\n   if (!string) {\r\n      return;\r\n   }\r\n   var abbr =  /^#([a-fA-F0-9]{3})$/,\r\n       hex =  /^#([a-fA-F0-9]{6})$/,\r\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/,\r\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/,\r\n       keyword = /(\\w+)/;\r\n\r\n   var rgb = [0, 0, 0],\r\n       a = 1,\r\n       match = string.match(abbr);\r\n   if (match) {\r\n      match = match[1];\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = parseInt(match[i] + match[i], 16);\r\n      }\r\n   }\r\n   else if (match = string.match(hex)) {\r\n      match = match[1];\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\r\n      }\r\n   }\r\n   else if (match = string.match(rgba)) {\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = parseInt(match[i + 1]);\r\n      }\r\n      a = parseFloat(match[4]);\r\n   }\r\n   else if (match = string.match(per)) {\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\r\n      }\r\n      a = parseFloat(match[4]);\r\n   }\r\n   else if (match = string.match(keyword)) {\r\n      if (match[1] == \"transparent\") {\r\n         return [0, 0, 0, 0];\r\n      }\r\n      rgb = colorNames[match[1]];\r\n      if (!rgb) {\r\n         return;\r\n      }\r\n   }\r\n\r\n   for (var i = 0; i < rgb.length; i++) {\r\n      rgb[i] = scale(rgb[i], 0, 255);\r\n   }\r\n   if (!a && a != 0) {\r\n      a = 1;\r\n   }\r\n   else {\r\n      a = scale(a, 0, 1);\r\n   }\r\n   rgb[3] = a;\r\n   return rgb;\r\n}\r\n\r\nfunction getHsla(string) {\r\n   if (!string) {\r\n      return;\r\n   }\r\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n   var match = string.match(hsl);\r\n   if (match) {\r\n      var alpha = parseFloat(match[4]);\r\n      var h = scale(parseInt(match[1]), 0, 360),\r\n          s = scale(parseFloat(match[2]), 0, 100),\r\n          l = scale(parseFloat(match[3]), 0, 100),\r\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n      return [h, s, l, a];\r\n   }\r\n}\r\n\r\nfunction getHwb(string) {\r\n   if (!string) {\r\n      return;\r\n   }\r\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n   var match = string.match(hwb);\r\n   if (match) {\r\n    var alpha = parseFloat(match[4]);\r\n      var h = scale(parseInt(match[1]), 0, 360),\r\n          w = scale(parseFloat(match[2]), 0, 100),\r\n          b = scale(parseFloat(match[3]), 0, 100),\r\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n      return [h, w, b, a];\r\n   }\r\n}\r\n\r\nfunction getRgb(string) {\r\n   var rgba = getRgba(string);\r\n   return rgba && rgba.slice(0, 3);\r\n}\r\n\r\nfunction getHsl(string) {\r\n  var hsla = getHsla(string);\r\n  return hsla && hsla.slice(0, 3);\r\n}\r\n\r\nfunction getAlpha(string) {\r\n   var vals = getRgba(string);\r\n   if (vals) {\r\n      return vals[3];\r\n   }\r\n   else if (vals = getHsla(string)) {\r\n      return vals[3];\r\n   }\r\n   else if (vals = getHwb(string)) {\r\n      return vals[3];\r\n   }\r\n}\r\n\r\n// generators\r\nfunction hexString(rgb) {\r\n   return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\r\n              + hexDouble(rgb[2]);\r\n}\r\n\r\nfunction rgbString(rgba, alpha) {\r\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n      return rgbaString(rgba, alpha);\r\n   }\r\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\r\n}\r\n\r\nfunction rgbaString(rgba, alpha) {\r\n   if (alpha === undefined) {\r\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\r\n   }\r\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\r\n           + \", \" + alpha + \")\";\r\n}\r\n\r\nfunction percentString(rgba, alpha) {\r\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n      return percentaString(rgba, alpha);\r\n   }\r\n   var r = Math.round(rgba[0]/255 * 100),\r\n       g = Math.round(rgba[1]/255 * 100),\r\n       b = Math.round(rgba[2]/255 * 100);\r\n\r\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\r\n}\r\n\r\nfunction percentaString(rgba, alpha) {\r\n   var r = Math.round(rgba[0]/255 * 100),\r\n       g = Math.round(rgba[1]/255 * 100),\r\n       b = Math.round(rgba[2]/255 * 100);\r\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\r\n}\r\n\r\nfunction hslString(hsla, alpha) {\r\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\r\n      return hslaString(hsla, alpha);\r\n   }\r\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\r\n}\r\n\r\nfunction hslaString(hsla, alpha) {\r\n   if (alpha === undefined) {\r\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\r\n   }\r\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\r\n           + alpha + \")\";\r\n}\r\n\r\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\r\n// (hwb have alpha optional & 1 is default value)\r\nfunction hwbString(hwb, alpha) {\r\n   if (alpha === undefined) {\r\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\r\n   }\r\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\r\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\r\n}\r\n\r\nfunction keyword(rgb) {\r\n  return reverseNames[rgb.slice(0, 3)];\r\n}\r\n\r\n// helpers\r\nfunction scale(num, min, max) {\r\n   return Math.min(Math.max(min, num), max);\r\n}\r\n\r\nfunction hexDouble(num) {\r\n  var str = num.toString(16).toUpperCase();\r\n  return (str.length < 2) ? \"0\" + str : str;\r\n}\r\n\r\n\r\n//create a list of reverse color names\r\nvar reverseNames = {};\r\nfor (var name in colorNames) {\r\n   reverseNames[colorNames[name]] = name;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chartjs-color-string/color-string.js\n// module id = 250\n// module chunks = 0","/* MIT license */\nvar convert = require('color-convert');\nvar string = require('chartjs-color-string');\n\nvar Color = function (obj) {\n\tif (obj instanceof Color) {\n\t\treturn obj;\n\t}\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj);\n\t}\n\n\tthis.valid = false;\n\tthis.values = {\n\t\trgb: [0, 0, 0],\n\t\thsl: [0, 0, 0],\n\t\thsv: [0, 0, 0],\n\t\thwb: [0, 0, 0],\n\t\tcmyk: [0, 0, 0, 0],\n\t\talpha: 1\n\t};\n\n\t// parse Color() argument\n\tvar vals;\n\tif (typeof obj === 'string') {\n\t\tvals = string.getRgba(obj);\n\t\tif (vals) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals = string.getHsla(obj)) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals = string.getHwb(obj)) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t}\n\t} else if (typeof obj === 'object') {\n\t\tvals = obj;\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\n\t\t\tthis.setValues('hsv', vals);\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\n\t\t\tthis.setValues('cmyk', vals);\n\t\t}\n\t}\n};\n\nColor.prototype = {\n\tisValid: function () {\n\t\treturn this.valid;\n\t},\n\trgb: function () {\n\t\treturn this.setSpace('rgb', arguments);\n\t},\n\thsl: function () {\n\t\treturn this.setSpace('hsl', arguments);\n\t},\n\thsv: function () {\n\t\treturn this.setSpace('hsv', arguments);\n\t},\n\thwb: function () {\n\t\treturn this.setSpace('hwb', arguments);\n\t},\n\tcmyk: function () {\n\t\treturn this.setSpace('cmyk', arguments);\n\t},\n\n\trgbArray: function () {\n\t\treturn this.values.rgb;\n\t},\n\thslArray: function () {\n\t\treturn this.values.hsl;\n\t},\n\thsvArray: function () {\n\t\treturn this.values.hsv;\n\t},\n\thwbArray: function () {\n\t\tvar values = this.values;\n\t\tif (values.alpha !== 1) {\n\t\t\treturn values.hwb.concat([values.alpha]);\n\t\t}\n\t\treturn values.hwb;\n\t},\n\tcmykArray: function () {\n\t\treturn this.values.cmyk;\n\t},\n\trgbaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.rgb.concat([values.alpha]);\n\t},\n\thslaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.hsl.concat([values.alpha]);\n\t},\n\talpha: function (val) {\n\t\tif (val === undefined) {\n\t\t\treturn this.values.alpha;\n\t\t}\n\t\tthis.setValues('alpha', val);\n\t\treturn this;\n\t},\n\n\tred: function (val) {\n\t\treturn this.setChannel('rgb', 0, val);\n\t},\n\tgreen: function (val) {\n\t\treturn this.setChannel('rgb', 1, val);\n\t},\n\tblue: function (val) {\n\t\treturn this.setChannel('rgb', 2, val);\n\t},\n\thue: function (val) {\n\t\tif (val) {\n\t\t\tval %= 360;\n\t\t\tval = val < 0 ? 360 + val : val;\n\t\t}\n\t\treturn this.setChannel('hsl', 0, val);\n\t},\n\tsaturation: function (val) {\n\t\treturn this.setChannel('hsl', 1, val);\n\t},\n\tlightness: function (val) {\n\t\treturn this.setChannel('hsl', 2, val);\n\t},\n\tsaturationv: function (val) {\n\t\treturn this.setChannel('hsv', 1, val);\n\t},\n\twhiteness: function (val) {\n\t\treturn this.setChannel('hwb', 1, val);\n\t},\n\tblackness: function (val) {\n\t\treturn this.setChannel('hwb', 2, val);\n\t},\n\tvalue: function (val) {\n\t\treturn this.setChannel('hsv', 2, val);\n\t},\n\tcyan: function (val) {\n\t\treturn this.setChannel('cmyk', 0, val);\n\t},\n\tmagenta: function (val) {\n\t\treturn this.setChannel('cmyk', 1, val);\n\t},\n\tyellow: function (val) {\n\t\treturn this.setChannel('cmyk', 2, val);\n\t},\n\tblack: function (val) {\n\t\treturn this.setChannel('cmyk', 3, val);\n\t},\n\n\thexString: function () {\n\t\treturn string.hexString(this.values.rgb);\n\t},\n\trgbString: function () {\n\t\treturn string.rgbString(this.values.rgb, this.values.alpha);\n\t},\n\trgbaString: function () {\n\t\treturn string.rgbaString(this.values.rgb, this.values.alpha);\n\t},\n\tpercentString: function () {\n\t\treturn string.percentString(this.values.rgb, this.values.alpha);\n\t},\n\thslString: function () {\n\t\treturn string.hslString(this.values.hsl, this.values.alpha);\n\t},\n\thslaString: function () {\n\t\treturn string.hslaString(this.values.hsl, this.values.alpha);\n\t},\n\thwbString: function () {\n\t\treturn string.hwbString(this.values.hwb, this.values.alpha);\n\t},\n\tkeyword: function () {\n\t\treturn string.keyword(this.values.rgb, this.values.alpha);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.values.rgb;\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.values.rgb;\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.values.rgb;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = [];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb[i] = 255 - this.values.rgb[i];\n\t\t}\n\t\tthis.setValues('rgb', rgb);\n\t\treturn this;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] += hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] -= hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] += hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] -= hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[1] += hwb[1] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[2] += hwb[2] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tgreyscale: function () {\n\t\tvar rgb = this.values.rgb;\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\tthis.setValues('rgb', [val, val, val]);\n\t\treturn this;\n\t},\n\n\tclearer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\n\t\treturn this;\n\t},\n\n\topaquer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\n\t\treturn this;\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.values.hsl;\n\t\tvar hue = (hsl[0] + degrees) % 360;\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\t/**\n\t * Ported from sass implementation in C\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t */\n\tmix: function (mixinColor, weight) {\n\t\tvar color1 = this;\n\t\tvar color2 = mixinColor;\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn this\n\t\t\t.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\n\t\t\t)\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n\n\ttoJSON: function () {\n\t\treturn this.rgb();\n\t},\n\n\tclone: function () {\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\n\t\t// except 'alpha' which is a number.\n\t\tvar result = new Color();\n\t\tvar source = this.values;\n\t\tvar target = result.values;\n\t\tvar value, type;\n\n\t\tfor (var prop in source) {\n\t\t\tif (source.hasOwnProperty(prop)) {\n\t\t\t\tvalue = source[prop];\n\t\t\t\ttype = ({}).toString.call(value);\n\t\t\t\tif (type === '[object Array]') {\n\t\t\t\t\ttarget[prop] = value.slice(0);\n\t\t\t\t} else if (type === '[object Number]') {\n\t\t\t\t\ttarget[prop] = value;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('unexpected color value:', value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\nColor.prototype.spaces = {\n\trgb: ['red', 'green', 'blue'],\n\thsl: ['hue', 'saturation', 'lightness'],\n\thsv: ['hue', 'saturation', 'value'],\n\thwb: ['hue', 'whiteness', 'blackness'],\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\n\nColor.prototype.maxes = {\n\trgb: [255, 255, 255],\n\thsl: [360, 100, 100],\n\thsv: [360, 100, 100],\n\thwb: [360, 100, 100],\n\tcmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n\tvar values = this.values;\n\tvar vals = {};\n\n\tfor (var i = 0; i < space.length; i++) {\n\t\tvals[space.charAt(i)] = values[space][i];\n\t}\n\n\tif (values.alpha !== 1) {\n\t\tvals.a = values.alpha;\n\t}\n\n\t// {r: 255, g: 255, b: 255, a: 0.4}\n\treturn vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n\tvar values = this.values;\n\tvar spaces = this.spaces;\n\tvar maxes = this.maxes;\n\tvar alpha = 1;\n\tvar i;\n\n\tthis.valid = true;\n\n\tif (space === 'alpha') {\n\t\talpha = vals;\n\t} else if (vals.length) {\n\t\t// [10, 10, 10]\n\t\tvalues[space] = vals.slice(0, space.length);\n\t\talpha = vals[space.length];\n\t} else if (vals[space.charAt(0)] !== undefined) {\n\t\t// {r: 10, g: 10, b: 10}\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\n\t\t}\n\n\t\talpha = vals.a;\n\t} else if (vals[spaces[space][0]] !== undefined) {\n\t\t// {red: 10, green: 10, blue: 10}\n\t\tvar chans = spaces[space];\n\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[chans[i]];\n\t\t}\n\n\t\talpha = vals.alpha;\n\t}\n\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\n\n\tif (space === 'alpha') {\n\t\treturn false;\n\t}\n\n\tvar capped;\n\n\t// cap values of the space prior converting all values\n\tfor (i = 0; i < space.length; i++) {\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n\t\tvalues[space][i] = Math.round(capped);\n\t}\n\n\t// convert to all the other color spaces\n\tfor (var sname in spaces) {\n\t\tif (sname !== space) {\n\t\t\tvalues[sname] = convert[space][sname](values[space]);\n\t\t}\n\t}\n\n\treturn true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n\tvar vals = args[0];\n\n\tif (vals === undefined) {\n\t\t// color.rgb()\n\t\treturn this.getValues(space);\n\t}\n\n\t// color.rgb(10, 10, 10)\n\tif (typeof vals === 'number') {\n\t\tvals = Array.prototype.slice.call(args);\n\t}\n\n\tthis.setValues(space, vals);\n\treturn this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n\tvar svalues = this.values[space];\n\tif (val === undefined) {\n\t\t// color.red()\n\t\treturn svalues[index];\n\t} else if (val === svalues[index]) {\n\t\t// color.red(color.red())\n\t\treturn this;\n\t}\n\n\t// color.red(100)\n\tsvalues[index] = val;\n\tthis.setValues(space, svalues);\n\n\treturn this;\n};\n\nif (typeof window !== 'undefined') {\n\twindow.Color = Color;\n}\n\nmodule.exports = Color;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chartjs-color/index.js\n// module id = 251\n// module chunks = 0","/* MIT license */\n\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n}\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/color-convert/conversions.js\n// module id = 252\n// module chunks = 0","var conversions = require(\"./conversions\");\n\nvar convert = function() {\n   return new Converter();\n}\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   }\n});\n\nmodule.exports = convert;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/color-convert/index.js\n// module id = 253\n// module chunks = 0","module.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/color-name/index.js\n// module id = 254\n// module chunks = 0","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.get-iterator');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/get-iterator.js\n// module id = 255\n// module chunks = 0","var anObject = require('./_an-object')\n  , get      = require('./core.get-iterator-method');\nmodule.exports = require('./_core').getIterator = function(it){\n  var iterFn = get(it);\n  if(typeof iterFn != 'function')throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/core.get-iterator.js\n// module id = 288\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"questiontype.vue\",\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=data-v-079ba69c!./~/vue-loader/lib/selector.js?type=styles&index=0!./ClientApp/components/views/questiontype/questiontype.vue\n// module id = 295\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"login.vue\",\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=data-v-0973f94f!./~/vue-loader/lib/selector.js?type=styles&index=0!./ClientApp/components/views/auth/login.vue\n// module id = 296\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"user.vue\",\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=data-v-163bf6dc!./~/vue-loader/lib/selector.js?type=styles&index=0!./ClientApp/components/views/user/user.vue\n// module id = 297\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"home.vue\",\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=data-v-28735ddc!./~/vue-loader/lib/selector.js?type=styles&index=0!./ClientApp/components/views/home/home.vue\n// module id = 298\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"cardPessoasPorBairro.vue\",\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=data-v-38de88af!./~/vue-loader/lib/selector.js?type=styles&index=0!./ClientApp/components/views/home/cardPessoasPorBairro.vue\n// module id = 299\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"cardAniversariosPorMes.vue\",\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=data-v-3de53d0a!./~/vue-loader/lib/selector.js?type=styles&index=0!./ClientApp/components/views/home/cardAniversariosPorMes.vue\n// module id = 300\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"cardCadastrosPorMes.vue\",\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=data-v-5d8b2c6f!./~/vue-loader/lib/selector.js?type=styles&index=0!./ClientApp/components/views/home/cardCadastrosPorMes.vue\n// module id = 301\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"register.vue\",\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=data-v-655b2da6!./~/vue-loader/lib/selector.js?type=styles&index=0!./ClientApp/components/views/auth/register.vue\n// module id = 302\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"logout.vue\",\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=data-v-721c3914!./~/vue-loader/lib/selector.js?type=styles&index=0!./ClientApp/components/views/auth/logout.vue\n// module id = 303\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"i[data-v-a71aab1e]{font-size:54px}\", \"\", {\"version\":3,\"sources\":[\"/./ClientApp/components/views/home/cardTotal.vue\"],\"names\":[],\"mappings\":\"AACA,mBACE,cAAgB,CACjB\",\"file\":\"cardTotal.vue\",\"sourcesContent\":[\"\\ni[data-v-a71aab1e] {\\n  font-size: 54px;\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=data-v-a71aab1e&scoped=true!./~/vue-loader/lib/selector.js?type=styles&index=0!./ClientApp/components/views/home/cardTotal.vue\n// module id = 304\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-079ba69c!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./questiontype.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-079ba69c!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./questiontype.vue\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-079ba69c!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./questiontype.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"extract\":true,\"remove\":true}!./~/vue-style-loader!./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=data-v-079ba69c!./~/vue-loader/lib/selector.js?type=styles&index=0!./ClientApp/components/views/questiontype/questiontype.vue\n// module id = 307\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-0973f94f!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./login.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-0973f94f!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./login.vue\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-0973f94f!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./login.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"extract\":true,\"remove\":true}!./~/vue-style-loader!./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=data-v-0973f94f!./~/vue-loader/lib/selector.js?type=styles&index=0!./ClientApp/components/views/auth/login.vue\n// module id = 308\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-163bf6dc!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./user.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-163bf6dc!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./user.vue\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-163bf6dc!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./user.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"extract\":true,\"remove\":true}!./~/vue-style-loader!./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=data-v-163bf6dc!./~/vue-loader/lib/selector.js?type=styles&index=0!./ClientApp/components/views/user/user.vue\n// module id = 309\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-28735ddc!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./home.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-28735ddc!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./home.vue\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-28735ddc!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./home.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"extract\":true,\"remove\":true}!./~/vue-style-loader!./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=data-v-28735ddc!./~/vue-loader/lib/selector.js?type=styles&index=0!./ClientApp/components/views/home/home.vue\n// module id = 310\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-38de88af!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./cardPessoasPorBairro.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-38de88af!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./cardPessoasPorBairro.vue\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-38de88af!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./cardPessoasPorBairro.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"extract\":true,\"remove\":true}!./~/vue-style-loader!./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=data-v-38de88af!./~/vue-loader/lib/selector.js?type=styles&index=0!./ClientApp/components/views/home/cardPessoasPorBairro.vue\n// module id = 311\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-3de53d0a!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./cardAniversariosPorMes.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-3de53d0a!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./cardAniversariosPorMes.vue\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-3de53d0a!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./cardAniversariosPorMes.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"extract\":true,\"remove\":true}!./~/vue-style-loader!./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=data-v-3de53d0a!./~/vue-loader/lib/selector.js?type=styles&index=0!./ClientApp/components/views/home/cardAniversariosPorMes.vue\n// module id = 313\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-5d8b2c6f!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./cardCadastrosPorMes.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-5d8b2c6f!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./cardCadastrosPorMes.vue\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-5d8b2c6f!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./cardCadastrosPorMes.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"extract\":true,\"remove\":true}!./~/vue-style-loader!./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=data-v-5d8b2c6f!./~/vue-loader/lib/selector.js?type=styles&index=0!./ClientApp/components/views/home/cardCadastrosPorMes.vue\n// module id = 315\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-655b2da6!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./register.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-655b2da6!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./register.vue\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-655b2da6!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./register.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"extract\":true,\"remove\":true}!./~/vue-style-loader!./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=data-v-655b2da6!./~/vue-loader/lib/selector.js?type=styles&index=0!./ClientApp/components/views/auth/register.vue\n// module id = 316\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-721c3914!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./logout.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-721c3914!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./logout.vue\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-721c3914!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./logout.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"extract\":true,\"remove\":true}!./~/vue-style-loader!./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=data-v-721c3914!./~/vue-loader/lib/selector.js?type=styles&index=0!./ClientApp/components/views/auth/logout.vue\n// module id = 317\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-a71aab1e&scoped=true!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./cardTotal.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-a71aab1e&scoped=true!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./cardTotal.vue\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-a71aab1e&scoped=true!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./cardTotal.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"extract\":true,\"remove\":true}!./~/vue-style-loader!./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=data-v-a71aab1e&scoped=true!./~/vue-loader/lib/selector.js?type=styles&index=0!./ClientApp/components/views/home/cardTotal.vue\n// module id = 319\n// module chunks = 0","!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(\"icountup\",[],e):\"object\"==typeof exports?exports.icountup=e():t.icountup=e()}(this,function(){return function(t){function e(a){if(n[a])return n[a].exports;var i=n[a]={exports:{},id:a,loaded:!1};return t[a].call(i.exports,i,i.exports,e),i.loaded=!0,i.exports}var n={};return e.m=t,e.c=n,e.p=\"/\",e(0)}([function(t,e,n){\"use strict\";function a(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(e,\"__esModule\",{value:!0});var i=n(4),r=a(i);e.default=r.default},function(t,e,n){\"use strict\";function a(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(e,\"__esModule\",{value:!0});var i=n(2),r=a(i);e.default={name:\"ICountUp\",props:{start:{type:Number,required:!1,default:0},end:{type:Number,required:!0},decimals:{type:Number,required:!1,default:0},duration:{type:Number,required:!1,default:2},options:{type:Object,required:!1},callback:{type:Function,required:!1,default:function(){}}},data:function(){return{instance:null}},computed:{},watch:{end:{handler:function(t){var e=this;e.instance&&e.instance.update&&e.instance.update(t)},deep:!1}},methods:{init:function(){var t=this;if(!t.instance){var e=t.$el;t.instance=new r.default(e,t.start,t.end,t.decimals,t.duration,t.options),t.instance.start(function(){t.callback(t.instance)})}},destroy:function(){var t=this;t.instance=null}},beforeCreate:function(){},created:function(){},beforeMount:function(){},mounted:function(){var t=this;t.init()},beforeUpdate:function(){},updated:function(){},activated:function(){},deactivated:function(){},beforeDestroy:function(){var t=this;t.destroy()},destroyed:function(){},start:function(t){var e=this;e.instance&&e.instance.start&&e.instance.start(function(){t&&t(e.instance)})},pauseResume:function(){var t=this;t.instance&&t.instance.pauseResume&&t.instance.pauseResume()},reset:function(){var t=this;t.instance&&t.instance.reset&&t.instance.reset()},update:function(t){var e=this;e.instance&&e.instance.update&&e.instance.update(t)}}},function(t,e,n){var a,i;!function(r,o){a=o,i=\"function\"==typeof a?a.call(e,n,e,t):a,!(void 0!==i&&(t.exports=i))}(this,function(t,e,n){var a=function(t,e,n,a,i,r){for(var o=0,u=[\"webkit\",\"moz\",\"ms\",\"o\"],s=0;s<u.length&&!window.requestAnimationFrame;++s)window.requestAnimationFrame=window[u[s]+\"RequestAnimationFrame\"],window.cancelAnimationFrame=window[u[s]+\"CancelAnimationFrame\"]||window[u[s]+\"CancelRequestAnimationFrame\"];window.requestAnimationFrame||(window.requestAnimationFrame=function(t,e){var n=(new Date).getTime(),a=Math.max(0,16-(n-o)),i=window.setTimeout(function(){t(n+a)},a);return o=n+a,i}),window.cancelAnimationFrame||(window.cancelAnimationFrame=function(t){clearTimeout(t)});var c=this;c.options={useEasing:!0,useGrouping:!0,separator:\",\",decimal:\".\",easingFn:null,formattingFn:null};for(var d in r)r.hasOwnProperty(d)&&(c.options[d]=r[d]);\"\"===c.options.separator&&(c.options.useGrouping=!1),c.options.prefix||(c.options.prefix=\"\"),c.options.suffix||(c.options.suffix=\"\"),c.d=\"string\"==typeof t?document.getElementById(t):t,c.startVal=Number(e),c.endVal=Number(n),c.countDown=c.startVal>c.endVal,c.frameVal=c.startVal,c.decimals=Math.max(0,a||0),c.dec=Math.pow(10,c.decimals),c.duration=1e3*Number(i)||2e3,c.formatNumber=function(t){t=t.toFixed(c.decimals),t+=\"\";var e,n,a,i;if(e=t.split(\".\"),n=e[0],a=e.length>1?c.options.decimal+e[1]:\"\",i=/(\\d+)(\\d{3})/,c.options.useGrouping)for(;i.test(n);)n=n.replace(i,\"$1\"+c.options.separator+\"$2\");return c.options.prefix+n+a+c.options.suffix},c.easeOutExpo=function(t,e,n,a){return n*(-Math.pow(2,-10*t/a)+1)*1024/1023+e},c.easingFn=c.options.easingFn?c.options.easingFn:c.easeOutExpo,c.formattingFn=c.options.formattingFn?c.options.formattingFn:c.formatNumber,c.version=function(){return\"1.7.1\"},c.printValue=function(t){var e=c.formattingFn(t);\"INPUT\"===c.d.tagName?this.d.value=e:\"text\"===c.d.tagName||\"tspan\"===c.d.tagName?this.d.textContent=e:this.d.innerHTML=e},c.count=function(t){c.startTime||(c.startTime=t),c.timestamp=t;var e=t-c.startTime;c.remaining=c.duration-e,c.options.useEasing?c.countDown?c.frameVal=c.startVal-c.easingFn(e,0,c.startVal-c.endVal,c.duration):c.frameVal=c.easingFn(e,c.startVal,c.endVal-c.startVal,c.duration):c.countDown?c.frameVal=c.startVal-(c.startVal-c.endVal)*(e/c.duration):c.frameVal=c.startVal+(c.endVal-c.startVal)*(e/c.duration),c.countDown?c.frameVal=c.frameVal<c.endVal?c.endVal:c.frameVal:c.frameVal=c.frameVal>c.endVal?c.endVal:c.frameVal,c.frameVal=Math.round(c.frameVal*c.dec)/c.dec,c.printValue(c.frameVal),e<c.duration?c.rAF=requestAnimationFrame(c.count):c.callback&&c.callback()},c.start=function(t){return c.callback=t,c.rAF=requestAnimationFrame(c.count),!1},c.pauseResume=function(){c.paused?(c.paused=!1,delete c.startTime,c.duration=c.remaining,c.startVal=c.frameVal,requestAnimationFrame(c.count)):(c.paused=!0,cancelAnimationFrame(c.rAF))},c.reset=function(){c.paused=!1,delete c.startTime,c.startVal=e,cancelAnimationFrame(c.rAF),c.printValue(c.startVal)},c.update=function(t){cancelAnimationFrame(c.rAF),c.paused=!1,delete c.startTime,c.startVal=c.frameVal,c.endVal=Number(t),c.countDown=c.startVal>c.endVal,c.rAF=requestAnimationFrame(c.count)},c.printValue(c.startVal)};return a})},function(t,e){},function(t,e,n){var a,i;n(3),a=n(1);var r=n(5);i=a=a||{},\"object\"!=typeof a.default&&\"function\"!=typeof a.default||(i=a=a.default),\"function\"==typeof i&&(i=i.options),i.render=r.render,i.staticRenderFns=r.staticRenderFns,i._scopeId=\"data-v-679a8781\",t.exports=a},function(t,e){t.exports={render:function(){var t=this,e=t.$createElement,n=t._self._c||e;return n(\"span\")},staticRenderFns:[]}}])});\n//# sourceMappingURL=app.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-countup-v2/dist/js/app.js\n// module id = 324\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"container\"\n  }, [_c('div', {\n    staticClass: \"toolbar\",\n    slot: \"header\"\n  }, [_c('q-toolbar-title', {\n    attrs: {\n      \"padding\": 1\n    }\n  }, [_c('button', {\n    directives: [{\n      name: \"go-back\",\n      rawName: \"v-go-back\",\n      value: ('/'),\n      expression: \"'/'\"\n    }]\n  }, [_c('i', [_vm._v(\"arrow_back\")])]), _vm._v(\" Question Type\\r\\n        \")]), _vm._v(\" \"), _vm._m(0)], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"layout-padding \"\n  }, [_c('q-data-table', {\n    attrs: {\n      \"data\": _vm.questiontypes,\n      \"config\": _vm.config,\n      \"columns\": _vm.columns\n    },\n    scopedSlots: _vm._u([\n      [\"col-source\", function(cell) {\n        return [(cell.data === 'Audit') ? _c('span', {\n          staticClass: \"label text-white bg-primary\"\n        }, [_vm._v(\"\\r\\n                        Audit\\r\\n                        \"), _c('q-tooltip', [_vm._v(\"Some tooltip\")])], 1) : _c('span', {\n          staticClass: \"label text-white bg-negative\"\n        }, [_vm._v(_vm._s(cell.data))])]\n      }],\n      [\"selection\", function(props) {\n        return [_c('button', {\n          staticClass: \"primary clear\",\n          on: {\n            \"click\": function($event) {\n              _vm.changeMessage(props)\n            }\n          }\n        }, [_c('i', [_vm._v(\"edit\")])]), _vm._v(\" \"), _c('button', {\n          staticClass: \"primary clear\",\n          on: {\n            \"click\": function($event) {\n              _vm.deleteRow(props)\n            }\n          }\n        }, [_c('i', [_vm._v(\"delete\")])])]\n      }]\n    ])\n  })], 1)])\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('button', [_c('i', [_vm._v(\"help\")])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-079ba69c!./~/vue-loader/lib/selector.js?type=template&index=0!./ClientApp/components/views/questiontype/questiontype.vue\n// module id = 326\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"container\"\n  }, [_c('div', {\n    staticClass: \"toolbar\",\n    slot: \"header\"\n  }, [_c('q-toolbar-title', {\n    attrs: {\n      \"padding\": 1\n    }\n  }, [_c('button', {\n    directives: [{\n      name: \"go-back\",\n      rawName: \"v-go-back\",\n      value: ('/'),\n      expression: \"'/'\"\n    }]\n  }, [_c('i', [_vm._v(\"arrow_back\")])]), _vm._v(\" Login\\r\\n        \")]), _vm._v(\" \"), _vm._m(0)], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"layout-view layout-padding\"\n  }, [_c('div', {\n    staticClass: \"list\"\n  }, [_c('div', {\n    staticClass: \"item three-lines\"\n  }, [_c('i', {\n    staticClass: \"item-primary\"\n  }, [_vm._v(\"mail\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"item-content\"\n  }, [_c('div', {\n    staticClass: \"stacked-label\"\n  }, [_c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.credentials.email),\n      expression: \"credentials.email\"\n    }],\n    staticClass: \"full-width\",\n    attrs: {\n      \"required\": \"\",\n      \"placeholder\": \"Your email\"\n    },\n    domProps: {\n      \"value\": (_vm.credentials.email)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.credentials.email = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('label', [_vm._v(\"Email\")])])])]), _vm._v(\" \"), _c('hr'), _vm._v(\" \"), _c('div', {\n    staticClass: \"item three-lines\"\n  }, [_c('i', {\n    staticClass: \"item-primary\"\n  }, [_vm._v(\"vpn_key\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"item-content\"\n  }, [_c('div', {\n    staticClass: \"stacked-label\"\n  }, [_c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.credentials.password),\n      expression: \"credentials.password\"\n    }],\n    staticClass: \"full-width\",\n    attrs: {\n      \"type\": \"password\",\n      \"required\": \"\",\n      \"placeholder\": \"Your password\"\n    },\n    domProps: {\n      \"value\": (_vm.credentials.password)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.credentials.password = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('label', [_vm._v(\"Password\")])])])])]), _vm._v(\" \"), _c('button', {\n    staticClass: \"primary full-width\",\n    on: {\n      \"click\": function($event) {\n        _vm.userLogin()\n      }\n    }\n  }, [_vm._v(\"Login\")])])])\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('button', [_c('i', [_vm._v(\"help\")])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-0973f94f!./~/vue-loader/lib/selector.js?type=template&index=0!./ClientApp/components/views/auth/login.vue\n// module id = 327\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"error-page window-height window-width bg-light column items-center\"\n  }, [_c('div', {\n    staticClass: \"error-code bg-primary flex items-center justify-center\"\n  }, [_vm._v(\"\\n    404\\n  \")]), _vm._v(\" \"), _c('div', [_c('div', {\n    staticClass: \"error-card card bg-white column items-center justify-center\"\n  }, [_c('i', {\n    staticClass: \"text-grey-5\"\n  }, [_vm._v(\"error_outline\")]), _vm._v(\" \"), _c('p', {\n    staticClass: \"caption text-center\"\n  }, [_vm._v(\"Oops. Nothing here...\")]), _vm._v(\" \"), _c('p', {\n    staticClass: \"text-center group\"\n  }, [(_vm.canGoBack) ? _c('button', {\n    staticClass: \"grey push small\",\n    on: {\n      \"click\": _vm.goBack\n    }\n  }, [_c('i', {\n    staticClass: \"on-left\"\n  }, [_vm._v(\"keyboard_arrow_left\")]), _vm._v(\"\\n          Go back\\n        \")]) : _vm._e(), _vm._v(\" \"), _c('router-link', {\n    attrs: {\n      \"to\": \"/\"\n    }\n  }, [_c('button', {\n    staticClass: \"grey push small\"\n  }, [_vm._v(\"\\n            Go home\\n            \"), _c('i', {\n    staticClass: \"on-right\"\n  }, [_vm._v(\"home\")])])])], 1)])])])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-0b4cc29c!./~/vue-loader/lib/selector.js?type=template&index=0!./ClientApp/components/Error404.vue\n// module id = 328\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"container\"\n  }, [_c('div', {\n    staticClass: \"toolbar\",\n    slot: \"header\"\n  }, [_c('q-toolbar-title', {\n    attrs: {\n      \"padding\": 1\n    }\n  }, [_c('button', {\n    directives: [{\n      name: \"go-back\",\n      rawName: \"v-go-back\",\n      value: ('/'),\n      expression: \"'/'\"\n    }]\n  }, [_c('i', [_vm._v(\"arrow_back\")])]), _vm._v(\" User\\r\\n        \")]), _vm._v(\" \"), _vm._m(0)], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"layout-padding \"\n  }, [_c('q-data-table', {\n    attrs: {\n      \"data\": _vm.users,\n      \"config\": _vm.config,\n      \"columns\": _vm.columns\n    },\n    scopedSlots: _vm._u([\n      [\"col-source\", function(cell) {\n        return [(cell.data === 'Audit') ? _c('span', {\n          staticClass: \"label text-white bg-primary\"\n        }, [_vm._v(\"\\r\\n                        Audit\\r\\n                        \"), _c('q-tooltip', [_vm._v(\"Some tooltip\")])], 1) : _c('span', {\n          staticClass: \"label text-white bg-negative\"\n        }, [_vm._v(_vm._s(cell.data))])]\n      }],\n      [\"selection\", function(props) {\n        return [_c('button', {\n          staticClass: \"primary clear\",\n          on: {\n            \"click\": function($event) {\n              _vm.changeMessage(props)\n            }\n          }\n        }, [_c('i', [_vm._v(\"edit\")])]), _vm._v(\" \"), _c('button', {\n          staticClass: \"primary clear\",\n          on: {\n            \"click\": function($event) {\n              _vm.deleteRow(props)\n            }\n          }\n        }, [_c('i', [_vm._v(\"delete\")])])]\n      }]\n    ])\n  })], 1)])\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('button', [_c('i', [_vm._v(\"help\")])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-163bf6dc!./~/vue-loader/lib/selector.js?type=template&index=0!./ClientApp/components/views/user/user.vue\n// module id = 329\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"container\"\n  }, [_c('div', {\n    staticClass: \"toolbar\",\n    slot: \"header\"\n  }, [_c('q-toolbar-title', {\n    attrs: {\n      \"padding\": 1\n    }\n  }, [_c('button', {\n    directives: [{\n      name: \"go-back\",\n      rawName: \"v-go-back\",\n      value: ('/'),\n      expression: \"'/'\"\n    }]\n  }, [_c('i', [_vm._v(\"arrow_back\")])]), _vm._v(\" Home\\r\\n        \")]), _vm._v(\" \"), _vm._m(0)], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"layout-padding \"\n  }, [_c('div', {\n    staticClass: \"flex wrap gutter\"\n  }, [_c('div', {\n    staticClass: \"auto\"\n  }, [_c('cardTotal', {\n    attrs: {\n      \"title\": \"Total Posts\",\n      \"background-color\": \"bg-teal-8\",\n      \"total\": _vm.totalPosts\n    }\n  })], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"auto\"\n  }, [_c('cardTotal', {\n    attrs: {\n      \"title\": \"Total comments\",\n      \"background-color\": \"bg-teal-8\",\n      \"total\": _vm.totalComments\n    }\n  })], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"auto\"\n  }, [_c('cardTotal', {\n    attrs: {\n      \"title\": \"Static total\",\n      \"background-color\": \"bg-teal-8\",\n      \"total\": 50004\n    }\n  })], 1)]), _vm._v(\" \"), _vm._m(1), _vm._v(\" \"), _vm._m(2)])])\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('button', [_c('i', [_vm._v(\"help\")])])\n},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"flex wrap gutter\"\n  }, [_c('div', {\n    staticClass: \"width-1of2\"\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"auto\"\n  })])\n},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"flex wrap gutter\"\n  }, [_c('div', {\n    staticClass: \"width-4of5 sm-auto\"\n  })])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-28735ddc!./~/vue-loader/lib/selector.js?type=template&index=0!./ClientApp/components/views/home/home.vue\n// module id = 330\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"card bg-white animate-scale \"\n  }, [_c('div', {\n    staticClass: \"card-title bg-blue text-white\"\n  }, [_vm._v(\"\\n    Quantidade de pessoas por bairro\\n    \"), _c('q-fab', {\n    staticClass: \"float-right\",\n    attrs: {\n      \"icon\": \"keyboard_arrow_left\",\n      \"direction\": \"left\",\n      \"classNames\": \"teal\"\n    }\n  }, [_c('q-small-fab', {\n    staticClass: \"teal\",\n    attrs: {\n      \"icon\": \"\"\n    },\n    nativeOn: {\n      \"click\": function($event) {\n        _vm.tipoGrafico = 'bar'\n      }\n    }\n  }, [_c('i', {\n    staticClass: \"mdi mdi-chart-bar\"\n  })]), _vm._v(\" \"), _c('q-small-fab', {\n    staticClass: \"teal\",\n    attrs: {\n      \"icon\": \"\"\n    },\n    nativeOn: {\n      \"click\": function($event) {\n        _vm.tipoGrafico = 'horizontalBar'\n      }\n    }\n  }, [_c('i', {\n    staticClass: \"mdi mdi-chart-timeline\"\n  })])], 1)], 1), _vm._v(\" \"), _vm._m(0)])\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"card-content\"\n  }, [_c('canvas', {\n    attrs: {\n      \"id\": \"pessoas-bairro\"\n    }\n  })])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-38de88af!./~/vue-loader/lib/selector.js?type=template&index=0!./ClientApp/components/views/home/cardPessoasPorBairro.vue\n// module id = 331\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"card bg-white animate-scale \"\n  }, [_c('div', {\n    staticClass: \"card-title bg-blue text-white\"\n  }, [_vm._v(\"\\n    Quantidade de Aniversariantes por mês\\n    \"), _c('q-fab', {\n    staticClass: \"float-right\",\n    attrs: {\n      \"icon\": \"keyboard_arrow_left\",\n      \"direction\": \"left\",\n      \"classNames\": \"teal\"\n    }\n  }, [_c('q-small-fab', {\n    staticClass: \"teal\",\n    attrs: {\n      \"icon\": \"\"\n    },\n    nativeOn: {\n      \"click\": function($event) {\n        _vm.tipoGrafico = 'bar'\n      }\n    }\n  }, [_c('i', {\n    staticClass: \"mdi mdi-chart-bar\"\n  })]), _vm._v(\" \"), _c('q-small-fab', {\n    staticClass: \"teal\",\n    attrs: {\n      \"icon\": \"\"\n    },\n    nativeOn: {\n      \"click\": function($event) {\n        _vm.tipoGrafico = 'horizontalBar'\n      }\n    }\n  }, [_c('i', {\n    staticClass: \"mdi mdi-chart-timeline\"\n  })])], 1)], 1), _vm._v(\" \"), _vm._m(0)])\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"card-content\"\n  }, [_c('canvas', {\n    attrs: {\n      \"id\": \"aniversarios-mes\"\n    }\n  })])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-3de53d0a!./~/vue-loader/lib/selector.js?type=template&index=0!./ClientApp/components/views/home/cardAniversariosPorMes.vue\n// module id = 333\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"card bg-white animate-scale \"\n  }, [_c('div', {\n    staticClass: \"card-title bg-blue text-white\"\n  }, [_vm._v(\"\\n    Cadastros por mês no ano escolhido - \" + _vm._s(_vm.ano) + \"\\n\\n    \"), _c('q-fab', {\n    staticClass: \"float-right\",\n    attrs: {\n      \"icon\": \"keyboard_arrow_left\",\n      \"direction\": \"left\",\n      \"classNames\": \"teal\"\n    }\n  }, [_c('q-small-fab', {\n    staticClass: \"teal\",\n    attrs: {\n      \"icon\": \"\"\n    },\n    nativeOn: {\n      \"click\": function($event) {\n        _vm.ano = '2016'\n      }\n    }\n  }, [_vm._v(\"2016\")]), _vm._v(\" \"), _c('q-small-fab', {\n    staticClass: \"teal\",\n    attrs: {\n      \"icon\": \"\"\n    },\n    nativeOn: {\n      \"click\": function($event) {\n        _vm.ano = '2017'\n      }\n    }\n  }, [_vm._v(\"2017\")])], 1)], 1), _vm._v(\" \"), _vm._m(0)])\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"card-content \"\n  }, [_c('canvas', {\n    attrs: {\n      \"id\": \"cadastros-mes\"\n    }\n  })])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-5d8b2c6f!./~/vue-loader/lib/selector.js?type=template&index=0!./ClientApp/components/views/home/cardCadastrosPorMes.vue\n// module id = 335\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"container\"\n  }, [_c('div', {\n    staticClass: \"toolbar\",\n    slot: \"header\"\n  }, [_c('q-toolbar-title', {\n    attrs: {\n      \"padding\": 1\n    }\n  }, [_c('button', {\n    directives: [{\n      name: \"go-back\",\n      rawName: \"v-go-back\",\n      value: ('/'),\n      expression: \"'/'\"\n    }]\n  }, [_c('i', [_vm._v(\"arrow_back\")])]), _vm._v(\" Register\\r\\n      \")]), _vm._v(\" \"), _vm._m(0)], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"layout-view layout-padding\"\n  }, [_c('div', {\n    staticClass: \"list\"\n  }, [_c('div', {\n    staticClass: \"item three-lines\"\n  }, [_c('i', {\n    staticClass: \"item-primary\"\n  }, [_vm._v(\"face\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"item-content\"\n  }, [_c('div', {\n    staticClass: \"stacked-label\"\n  }, [_c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.credentials.name),\n      expression: \"credentials.name\"\n    }],\n    staticClass: \"full-width\",\n    attrs: {\n      \"required\": \"\",\n      \"placeholder\": \"Your name\"\n    },\n    domProps: {\n      \"value\": (_vm.credentials.name)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.credentials.name = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('label', [_vm._v(\"Name\")])])])]), _vm._v(\" \"), _c('hr'), _vm._v(\" \"), _c('div', {\n    staticClass: \"item three-lines\"\n  }, [_c('i', {\n    staticClass: \"item-primary\"\n  }, [_vm._v(\"mail\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"item-content\"\n  }, [_c('div', {\n    staticClass: \"stacked-label\"\n  }, [_c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.credentials.email),\n      expression: \"credentials.email\"\n    }],\n    staticClass: \"full-width\",\n    attrs: {\n      \"required\": \"\",\n      \"placeholder\": \"Your email\"\n    },\n    domProps: {\n      \"value\": (_vm.credentials.email)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.credentials.email = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('label', [_vm._v(\"Email\")])])])]), _vm._v(\" \"), _c('hr'), _vm._v(\" \"), _c('div', {\n    staticClass: \"item three-lines\"\n  }, [_c('i', {\n    staticClass: \"item-primary\"\n  }, [_vm._v(\"vpn_key\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"item-content\"\n  }, [_c('div', {\n    staticClass: \"stacked-label\"\n  }, [_c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.credentials.password),\n      expression: \"credentials.password\"\n    }],\n    staticClass: \"full-width\",\n    attrs: {\n      \"type\": \"password\",\n      \"required\": \"\",\n      \"placeholder\": \"Your password\"\n    },\n    domProps: {\n      \"value\": (_vm.credentials.password)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.credentials.password = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('label', [_vm._v(\"Password\")])])])])]), _vm._v(\" \"), _c('button', {\n    staticClass: \"primary full-width\",\n    on: {\n      \"click\": function($event) {\n        _vm.submit()\n      }\n    }\n  }, [_vm._v(\"Register\")])])])\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('button', [_c('i', [_vm._v(\"help\")])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-655b2da6!./~/vue-loader/lib/selector.js?type=template&index=0!./ClientApp/components/views/auth/register.vue\n// module id = 336\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": \"logout\"\n    }\n  })\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-721c3914!./~/vue-loader/lib/selector.js?type=template&index=0!./ClientApp/components/views/auth/logout.vue\n// module id = 337\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"card text-white animate-scale\",\n    class: _vm.backgroundColor\n  }, [_c('div', {\n    staticClass: \"card-content \"\n  }, [_c('div', {\n    staticClass: \"row\"\n  }, [_vm._m(0), _vm._v(\" \"), _c('div', {\n    staticClass: \"width-2of3\"\n  }, [_c('p', {\n    staticClass: \"text-italic \"\n  }, [_vm._v(_vm._s(_vm.title))]), _vm._v(\" \"), _c('h5', [_c('i-count-up', {\n    attrs: {\n      \"start\": 0,\n      \"end\": _vm.total,\n      \"decimals\": 0,\n      \"duration\": 2.5,\n      \"options\": _vm.options\n    }\n  })], 1)])])])])\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"width-1of3\"\n  }, [_c('i', [_vm._v(\"people\")])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-a71aab1e!./~/vue-loader/lib/selector.js?type=template&index=0!./ClientApp/components/views/home/cardTotal.vue\n// module id = 339\n// module chunks = 0"],"sourceRoot":""}